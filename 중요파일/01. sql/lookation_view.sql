-- ############################################################## 소윤
--○ userQnaManager 페이지

--○ 기본정보 뷰(VIEW) 생성
CREATE OR REPLACE VIEW ADMIN_QNA_BASIC_VIEW
AS
SELECT Q.QNA_CODE, MP.MEMBER_NICKNAME, MP.MEMBER_EMAIL, Q.LOC_CODE
     , Q.QNA_CONTENT
     , (SELECT COUNT(*)
        FROM QNA_REMOVE
        WHERE QNA_CODE = Q.QNA_CODE) AS COUNT
FROM QNA Q JOIN MEMBER_PROFILE MP
ON Q.MEMBER_CODE = MP.MEMBER_CODE;


--○ 상세보기 뷰(VIEW) 생성
CREATE OR REPLACE VIEW ADMIN_QNA_DETAIL_VIEW
AS
SELECT Q.QNA_CODE, Q.LOC_CODE, Q.QNA_DATE, MP.MEMBER_NICKNAME, Q.QNA_CONTENT
FROM QNA Q
JOIN MEMBER_PROFILE MP
ON Q.MEMBER_CODE = MP.MEMBER_CODE;


--○ 기본정보 뷰(VIEW) 생성
CREATE OR REPLACE VIEW ADMIN_REVIEW_BASIC_VIEW
AS
SELECT R.REVIEW_CODE, MP.MEMBER_NICKNAME, MP.MEMBER_EMAIL
     , R.LOC_CODE, R.REVIEW_CONTENT
     , (SELECT COUNT(*)
        FROM REVIEW_REMOVE
        WHERE REVIEW_CODE = R.REVIEW_CODE) AS COUNT
FROM REVIEW R JOIN MEMBER_PROFILE MP
ON R.MEMBER_CODE = MP.MEMBER_CODE;


--○ 상세정보 뷰(VIEW) 생성
CREATE OR REPLACE VIEW ADMIN_REVIEW_DETAIL_VIEW
AS
SELECT R.REVIEW_CODE, R.LOC_CODE, R.REVIEW_DATE, MP.MEMBER_NICKNAME, R.REVIEW_CONTENT
FROM REVIEW R JOIN MEMBER_PROFILE MP
ON R.MEMBER_CODE = MP.MEMBER_CODE;


--○ 이용자 → 호스트 신고 (공간 신고) 기본정보 뷰(VIEW) 생성
CREATE OR REPLACE VIEW LOC_REPORT_BASIC_VIEW
AS
SELECT LR.LOC_CODE, LRT.LOC_REPORT_TYPE, HP.HOST_NICKNAME
     , MP.MEMBER_NICKNAME, LR.LOC_REPORT_DATE, HP.HOST_EMAIL, MP.MEMBER_EMAIL
     , (SELECT COUNT(*)
        FROM LOC_REPORT_PROC
        WHERE LOC_REPORT_CODE = LR.LOC_REPORT_CODE) AS RESULT_COUNT
     , (SELECT COUNT(*)
        FROM HOST_BLACKLIST
        WHERE HOST_EMAIL = HP.HOST_EMAIL) AS BLACK_COUNT
    , LOC_REPORT_CODE 
FROM LOC_REPORT_TYPE LRT JOIN LOC_REPORT LR
ON LRT.LOC_REPORT_TYPE_CODE = LR.LOC_REPORT_TYPE_CODE
JOIN LOC L
ON LR.LOC_CODE = L.LOC_CODE
JOIN HOST_PROFILE HP
ON HP.HOST_CODE = L.HOST_CODE
JOIN MEMBER_PROFILE MP
ON MP.MEMBER_CODE = LR.MEMBER_CODE;


--○ 상세보기 뷰 생성 → RESULT_COUNT == 0 일 때 보여지는 상세보기 팝업창
CREATE OR REPLACE VIEW LOC_REPORT_DETAIL_VIEW_0
AS
SELECT LR.LOC_CODE, LRT.LOC_REPORT_TYPE, HP.HOST_EMAIL
     , MP.MEMBER_EMAIL, LR.LOC_REPORT_REASON, LR.LOC_REPORT_DATE
     , NVL(LRI.LOC_REPORT_IMG_URL, '#') AS LOC_REPORT_IMG_URL, LR.LOC_REPORT_CODE
     , HP.HOST_NICKNAME, MP.MEMBER_NICKNAME
FROM LOC_REPORT_TYPE LRT JOIN LOC_REPORT LR
ON LRT.LOC_REPORT_TYPE_CODE = LR.LOC_REPORT_TYPE_CODE
JOIN LOC L
ON LR.LOC_CODE = L.LOC_CODE
JOIN HOST_PROFILE HP
ON HP.HOST_CODE = L.HOST_CODE
JOIN MEMBER_PROFILE MP
ON MP.MEMBER_CODE = LR.MEMBER_CODE
LEFT JOIN LOC_REPORT_IMG LRI
ON LR.LOC_REPORT_CODE = LRI.LOC_REPORT_CODE;


--○ 상세보기 뷰 생성 → RESULT_COUNT == 1 일 때 보여지는 상세보기 팝업창
CREATE OR REPLACE VIEW LOC_REPORT_DETAIL_VIEW_1
AS
SELECT LR.LOC_CODE, LRT.LOC_REPORT_TYPE, HP.HOST_EMAIL
     , MP.MEMBER_EMAIL, LR.LOC_REPORT_REASON, LR.LOC_REPORT_DATE
     , NVL(LRI.LOC_REPORT_IMG_URL, '#') AS LOC_REPORT_IMG_URL, LR.LOC_REPORT_CODE
     , RPT.REPORT_PROC_TYPE, LRP.LOC_REPORT_PROC_DATE
     , (SELECT COUNT(*)
        FROM HOST_BLACKLIST
        WHERE HOST_EMAIL = HP.HOST_EMAIL) AS BLACK_COUNT
     , HP.HOST_NICKNAME, MP.MEMBER_NICKNAME
FROM LOC_REPORT_TYPE LRT JOIN LOC_REPORT LR
ON LRT.LOC_REPORT_TYPE_CODE = LR.LOC_REPORT_TYPE_CODE
JOIN LOC L
ON LR.LOC_CODE = L.LOC_CODE
JOIN HOST_PROFILE HP
ON HP.HOST_CODE = L.HOST_CODE
JOIN MEMBER_PROFILE MP
ON MP.MEMBER_CODE = LR.MEMBER_CODE
LEFT JOIN LOC_REPORT_IMG LRI
ON LR.LOC_REPORT_CODE = LRI.LOC_REPORT_CODE
JOIN LOC_REPORT_PROC LRP
ON LR.LOC_REPORT_CODE = LRP.LOC_REPORT_CODE
JOIN REPORT_PROC_TYPE RPT
ON RPT.REPORT_PROC_TYPE_CODE = LRP.REPORT_PROC_TYPE_CODE;


--○ 호스트 → 이용자 신고 (예약 신고) 기본정보 뷰(VIEW) 생성
CREATE OR REPLACE VIEW BOOK_REPORT_BASIC_VIEW
AS
SELECT BR.BOOK_CODE, BRT.BOOK_REPORT_TYPE, MP.MEMBER_EMAIL
     , HP.HOST_EMAIL, BR.BOOK_REPORT_DATE
     , (SELECT COUNT(*)
        FROM BOOK_REPORT_PROC
        WHERE BOOK_REPORT_CODE = BR.BOOK_REPORT_CODE) AS RESULT_COUNT
     , (SELECT COUNT(*)
        FROM MEMBER_BLACKLIST
        WHERE MEMBER_EMAIL = MP.MEMBER_EMAIL) AS BLACK_COUNT
    , BR.BOOK_REPORT_CODE
    , HP.HOST_NICKNAME, MP.MEMBER_NICKNAME
FROM BOOK_REPORT_TYPE BRT JOIN BOOK_REPORT BR
ON BRT.BOOK_REPORT_TYPE_CODE = BR.BOOK_REPORT_TYPE_CODE
JOIN BOOK_LIST BL
ON BR.BOOK_CODE = BL.BOOK_CODE
JOIN MEMBER_PROFILE MP
ON BL.MEMBER_CODE = MP.MEMBER_CODE
JOIN HOST_PROFILE HP
ON BR.HOST_CODE = HP.HOST_CODE;


--○ 상세보기 뷰 생성 → RESULT_COUNT == 0 일 때 보여지는 상세보기 팝업창
CREATE OR REPLACE VIEW BOOK_REPORT_DETAIL_VIEW_0
AS
SELECT BR.BOOK_CODE, BRT.BOOK_REPORT_TYPE, MP.MEMBER_EMAIL
     , HP.HOST_EMAIL, BR.BOOK_REPORT_DATE, BR.BOOK_REPORT_REASON
     , NVL(BRI.BOOK_REPORT_IMG_URL, '#') AS BOOK_REPORT_IMG_URL, BR.BOOK_REPORT_CODE
     , HP.HOST_NICKNAME, MP.MEMBER_NICKNAME
FROM BOOK_REPORT_TYPE BRT JOIN BOOK_REPORT BR
ON BRT.BOOK_REPORT_TYPE_CODE = BR.BOOK_REPORT_TYPE_CODE
JOIN BOOK_LIST BL
ON BR.BOOK_CODE = BL.BOOK_CODE
JOIN MEMBER_PROFILE MP
ON BL.MEMBER_CODE = MP.MEMBER_CODE
JOIN HOST_PROFILE HP
ON BR.HOST_CODE = HP.HOST_CODE
LEFT JOIN BOOK_REPORT_IMG BRI
ON BR.BOOK_REPORT_CODE = BRI.BOOK_REPORT_CODE;


--○ 상세보기 뷰 생성 → RESULT_COUNT == 1 일 때 보여지는 상세보기 팝업창
CREATE OR REPLACE VIEW BOOK_REPORT_DETAIL_VIEW_1
AS
SELECT BR.BOOK_CODE, BRT.BOOK_REPORT_TYPE, MP.MEMBER_EMAIL
     , HP.HOST_EMAIL, BR.BOOK_REPORT_DATE, BR.BOOK_REPORT_REASON
     , NVL(BRI.BOOK_REPORT_IMG_URL, '#') AS BOOK_REPORT_IMG_URL, BR.BOOK_REPORT_CODE
     , RPT.REPORT_PROC_TYPE, BRP.BOOK_REPORT_PROC_DATE
     , (SELECT COUNT(*)
        FROM MEMBER_BLACKLIST
        WHERE MEMBER_EMAIL = MP.MEMBER_EMAIL) AS BLACK_COUNT
    , HP.HOST_NICKNAME, MP.MEMBER_NICKNAME
FROM BOOK_REPORT_TYPE BRT JOIN BOOK_REPORT BR
ON BRT.BOOK_REPORT_TYPE_CODE = BR.BOOK_REPORT_TYPE_CODE
JOIN BOOK_LIST BL
ON BR.BOOK_CODE = BL.BOOK_CODE
JOIN MEMBER_PROFILE MP
ON BL.MEMBER_CODE = MP.MEMBER_CODE
JOIN HOST_PROFILE HP
ON BR.HOST_CODE = HP.HOST_CODE
LEFT JOIN BOOK_REPORT_IMG BRI
ON BR.BOOK_REPORT_CODE = BRI.BOOK_REPORT_CODE
JOIN BOOK_REPORT_PROC BRP
ON BRP.BOOK_REPORT_CODE = BR.BOOK_REPORT_CODE
JOIN REPORT_PROC_TYPE RPT
ON BRP.REPORT_PROC_TYPE_CODE = RPT.REPORT_PROC_TYPE_CODE;


--○ BlindManager 페이지

--○ 뷰 생성
CREATE OR REPLACE VIEW BLINDVIEW
AS
SELECT L.LOC_CODE, HP.HOST_EMAIL, HP.HOST_NICKNAME, LT.LOC_TYPE
     , LBI.LOC_NAME, LB.LOC_BLIND_DATE, LB.LOC_BLIND_REASON
     , LB.LOC_BLIND_CODE
FROM LOC_BLIND LB JOIN LOC_BASIC_INFO LBI
ON LB.LOC_CODE = LBI.LOC_CODE
JOIN LOC L
ON LB.LOC_CODE = L.LOC_CODE
JOIN HOST_PROFILE HP
ON L.HOST_CODE = HP.HOST_CODE
JOIN LOC_TYPE LT
ON LBI.LOC_TYPE_CODE = LT.LOC_TYPE_CODE;


--○ search
-- sysdate로 변경해야 한다.
CREATE OR REPLACE VIEW SEARCHVIEW_BEFORE
AS
SELECT L.LOC_CODE, LT.LOC_TYPE, LBI.LOC_NAME, LBI.LOC_ADDR, TN.THUMBNAIL_URL
     , (SELECT COUNT(*)
        FROM REVIEW
        WHERE LOC_CODE = L.LOC_CODE) AS REVIEW_COUNT
     , (SELECT MIN(PACKAGE_PRICE)
        FROM PACKAGE
       WHERE PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
          AND PACKAGE_CODE = AP.PACKAGE_CODE
          AND AP.APPLY_DATE BETWEEN TO_DATE(SYSDATE, 'YYYY-MM-DD') AND (SELECT ADD_MONTHS(SYSDATE,3) FROM DUAL)) AS PRICE
     , (SELECT AVG(REVIEW_RATE)
            FROM REVIEW
            WHERE LOC_CODE = L.LOC_CODE) AS AVG_RATE
     , LDI.MAX_PEOPLE , AP.APPLY_DATE
FROM LOC L JOIN LOC_BASIC_INFO LBI
ON L.LOC_CODE = LBI.LOC_CODE
JOIN LOC_TYPE LT
ON LT.LOC_TYPE_CODE = LBI.LOC_TYPE_CODE
JOIN THUMBNAIL TN
ON LBI.LOC_BASIC_INFO_CODE = TN.LOC_BASIC_INFO_CODE
JOIN PACKAGE_FORM PF
ON L.LOC_CODE = PF.LOC_CODE
JOIN LOC_DETAIL_INFO LDI
ON L.LOC_CODE = LDI.LOC_CODE
LEFT JOIN PACKAGE P
ON PF.PACKAGE_FORM_CODE = P.PACKAGE_FORM_CODE
LEFT JOIN APPLY_PACKAGE AP
ON P.PACKAGE_CODE = AP.PACKAGE_CODE
LEFT JOIN LOC_REMOVE LR
ON LR.LOC_CODE = L.LOC_CODE
WHERE LR.LOC_REMOVE_CODE IS NULL;


CREATE OR REPLACE VIEW SEARCHVIEW
AS
SELECT LOC_CODE, LOC_TYPE, LOC_NAME, LOC_ADDR, THUMBNAIL_URL
     , REVIEW_COUNT , AVG_RATE
     , MAX_PEOPLE , APPLY_DATE
     , MIN(PRICE)OVER(PARTITION BY LOC_CODE) AS PRICE
FROM SEARCHVIEW_BEFORE;


-- ############################################################## 승범

--○ MEMBER 프로필 가져오기
CREATE OR REPLACE VIEW MEMBER_PROFILEVIEW
AS
SELECT MP.MEMBER_EMAIL AS EMAIL, MP.MEMBER_CODE AS CODE
     , MP.MEMBER_PW AS PW, MP.MEMBER_NICKNAME AS NICK
     , MP.MEMBER_NAME AS NAME, MP.MEMBER_TEL AS TEL
     , TO_CHAR(M.MEMBER_SIGN_UP_DATE, 'YYYY-MM-DD') AS CREATEDATE
FROM MEMBER_PROFILE MP, MEMBER M
WHERE MP.MEMBER_CODE = M.MEMBER_CODE;

--○ HOST 프로필 가져오기
CREATE OR REPLACE VIEW HOST_PROFILEVIEW
AS
SELECT HP.HOST_EMAIL AS EMAIL, HP.HOST_CODE AS CODE
     , HP.HOST_PW AS PW, HP.HOST_NICKNAME AS NICK
     , HP.HOST_NAME AS NAME, HP.HOST_TEL AS TEL
     , TO_CHAR(H.HOST_SIGN_UP_DATE, 'YYYY-MM-DD') AS CREATEDATE
FROM HOST_PROFILE HP,  HOST H
WHERE HP.HOST_CODE = H.HOST_CODE;

--○ 오늘의 공간
-- 오늘의 공간에 필요한 정보 뷰
CREATE OR REPLACE VIEW TODAYS_LOC_DEFAULT_VIEW
AS
SELECT L.LOC_CODE AS CODE, BL.BOOK_CODE AS BOOK_CODE
     , AP.APPLY_PACKAGE_CODE AS PACK_CODE
     , LBI.LOC_NAME AS NAME, LDI.MAX_PEOPLE AS MAX
     , R.REVIEW_RATE AS RATE, P.PACKAGE_PRICE AS PRICE
     , LBI.LOC_ADDR AS ADDR, TH.THUMBNAIL_URL AS URL
FROM LOC L JOIN LOC_BASIC_INFO LBI 
  ON L.LOC_CODE = LBI.LOC_CODE
       JOIN THUMBNAIL TH
       ON LBI.LOC_BASIC_INFO_CODE = TH.LOC_BASIC_INFO_CODE
            JOIN LOC_DETAIL_INFO LDI
            ON L.LOC_CODE = LDI.LOC_CODE
                LEFT OUTER JOIN REVIEW R
                ON L.LOC_CODE = R.LOC_CODE
                    JOIN PACKAGE_FORM PF
                    ON L.LOC_CODE = PF.LOC_CODE
                       LEFT OUTER JOIN PACKAGE P
                       ON PF.PACKAGE_FORM_CODE = P.PACKAGE_FORM_CODE
                           LEFT OUTER JOIN APPLY_PACKAGE AP
                           ON P.PACKAGE_CODE = AP.PACKAGE_CODE
                               LEFT OUTER JOIN BOOK_LIST BL
                               ON AP.APPLY_PACKAGE_CODE = BL.APPLY_PACKAGE_CODE
                                    LEFT OUTER JOIN LOC_REMOVE LR
                                    ON L.LOC_CODE = LR.LOC_CODE
                                        LEFT OUTER JOIN LOC_BLIND LB
                                        ON L.LOC_CODE = LB.LOC_CODE
WHERE LR.LOC_REMOVE_CODE IS NULL
  AND LB.LOC_BLIND_CODE IS NULL;

-- 평점순으로 100개 뽑음        
-- 예약 X, 적용 패키지 O(보여주기용)                               
CREATE OR REPLACE VIEW TODAYS_LOC_NOT_REAL_VIEW
AS
SELECT DISTINCT TLV_DEFAULT.CODE, TLV_DEFAULT.NAME
              , TLV_DEFAULT.MAX, TLV_DEFAULT.ADDR, TLV_DEFAULT.URL
              , TLV_AVG.AVG, TLV_MIN.MIN
FROM TODAYS_LOC_DEFAULT_VIEW TLV_DEFAULT 
JOIN (SELECT CODE
      FROM TODAYS_LOC_DEFAULT_VIEW
      WHERE PACK_CODE IS NOT NULL) TLV_AVAILABLE
ON TLV_DEFAULT.CODE = TLV_AVAILABLE.CODE
    JOIN (SELECT CODE, TRUNC(NVL(AVG(RATE), 0), 1) AS AVG
          FROM TODAYS_LOC_DEFAULT_VIEW
          GROUP BY CODE) TLV_AVG
          ON TLV_DEFAULT.CODE = TLV_AVG.CODE
              JOIN (SELECT CODE, NVL(MIN(PRICE), 0) AS MIN
                    FROM TODAYS_LOC_DEFAULT_VIEW
                    GROUP BY CODE) TLV_MIN
                    ON TLV_DEFAULT.CODE = TLV_MIN.CODE
WHERE ROWNUM <= 100
ORDER BY TLV_AVG.AVG DESC;

-- 예약 O, 적용 패키키 O(실제)
CREATE OR REPLACE VIEW TODAYS_LOC_REAL_VIEW
AS
SELECT DISTINCT TLV_DEFAULT.CODE, TLV_DEFAULT.NAME
              , TLV_DEFAULT.MAX, TLV_DEFAULT.ADDR, TLV_DEFAULT.URL
              , TLV_AVG.AVG, TLV_MIN.MIN
FROM TODAYS_LOC_DEFAULT_VIEW TLV_DEFAULT 
JOIN (SELECT CODE
      FROM TODAYS_LOC_DEFAULT_VIEW
      WHERE PACK_CODE IS NOT NULL
        AND BOOK_CODE IS NULL) TLV_AVAILABLE
ON TLV_DEFAULT.CODE = TLV_AVAILABLE.CODE
    JOIN (SELECT CODE, TRUNC(NVL(AVG(RATE), 0), 1) AS AVG
          FROM TODAYS_LOC_DEFAULT_VIEW
          GROUP BY CODE) TLV_AVG
          ON TLV_DEFAULT.CODE = TLV_AVG.CODE
              JOIN (SELECT CODE, NVL(MIN(PRICE), 0) AS MIN
                    FROM TODAYS_LOC_DEFAULT_VIEW
                    GROUP BY CODE) TLV_MIN
                    ON TLV_DEFAULT.CODE = TLV_MIN.CODE
WHERE ROWNUM <= 100
ORDER BY TLV_AVG.AVG DESC;

--○ 이용자 리뷰
CREATE OR REPLACE VIEW TODAYS_REVIEW_DEFAULT_VIEW
AS
SELECT L.LOC_CODE AS CODE, R.REVIEW_CODE AS REVIEW_CODE
     , LBI.LOC_NAME AS NAME, P.PACKAGE_PRICE AS PRICE
     , TH.THUMBNAIL_URL AS URL, R.REVIEW_CONTENT AS CONTENT
     , R.REVIEW_RATE AS RATE
FROM LOC L JOIN LOC_BASIC_INFO LBI 
  ON L.LOC_CODE = LBI.LOC_CODE
       JOIN THUMBNAIL TH
       ON LBI.LOC_BASIC_INFO_CODE = TH.LOC_BASIC_INFO_CODE
            LEFT OUTER JOIN REVIEW R
            ON L.LOC_CODE = R.LOC_CODE
                JOIN PACKAGE_FORM PF
                ON L.LOC_CODE = PF.LOC_CODE
                   LEFT OUTER JOIN PACKAGE P
                   ON PF.PACKAGE_FORM_CODE = P.PACKAGE_FORM_CODE
                       LEFT OUTER JOIN APPLY_PACKAGE AP
                       ON P.PACKAGE_CODE = AP.PACKAGE_CODE
                            LEFT OUTER JOIN LOC_REMOVE LR
                            ON L.LOC_CODE = LR.LOC_CODE
                                LEFT OUTER JOIN LOC_BLIND LB
                                ON L.LOC_CODE = LB.LOC_CODE
                                    LEFT OUTER JOIN REVIEW_REMOVE RVRM
                                    ON R.REVIEW_CODE = RVRM.REVIEW_CODE
WHERE LR.LOC_REMOVE_CODE IS NULL
  AND LB.LOC_BLIND_CODE IS NULL
  AND RVRM.REVIEW_REMOVE_CODE IS NULL;
  

-- 최종 뷰 구성           
CREATE OR REPLACE VIEW TODAYS_REVIEW_VIEW
AS
SELECT DISTINCT TRV_DEFAULT.CODE, TRV_DEFAULT.REVIEW_CODE
              , TRV_DEFAULT.NAME, TRV_MIN.PRICE AS MIN
              , TRV_DEFAULT.URL, TRV_DEFAULT.CONTENT
              , TRV_DEFAULT.RATE
FROM TODAYS_REVIEW_DEFAULT_VIEW TRV_DEFAULT 
JOIN (SELECT CODE, MIN(PRICE) AS PRICE 
      FROM TODAYS_REVIEW_DEFAULT_VIEW 
      GROUP BY CODE) TRV_MIN
ON TRV_DEFAULT.CODE = TRV_MIN.CODE
WHERE TRV_DEFAULT.REVIEW_CODE IS NOT NULL;  


--○ 적용된 패키지를 찾는 쿼리문
-- 뷰로 구성
CREATE OR REPLACE VIEW APPLY_PACKAGE_VIEW
AS
SELECT P.PACKAGE_CODE AS CODE, PF.LOC_CODE AS LOC_CODE
     , AP.APPLY_PACKAGE_CODE AS APPLY_CODE
     , B.BOOK_CODE AS BOOK_CODE, P.PACKAGE_NAME AS NAME
     , P.PACKAGE_START AS TIME_START, P.PACKAGE_END AS TIME_END
     , P.PACKAGE_PRICE AS PRICE
     , TO_CHAR(AP.APPLY_DATE, 'YYYY-MM-DD') AS APPLY_DATE
FROM PACKAGE_FORM PF JOIN PACKAGE P
ON PF.PACKAGE_FORM_CODE = P.PACKAGE_FORM_CODE
        JOIN APPLY_PACKAGE AP 
        ON AP.PACKAGE_CODE = P.PACKAGE_CODE
            LEFT OUTER JOIN BOOK_LIST B
            ON AP.APPLY_PACKAGE_CODE = B.APPLY_PACKAGE_CODE
ORDER BY AP.APPLY_DATE, P.PACKAGE_START;
                               

--○ 공간 리스트 조회
CREATE OR REPLACE VIEW LOC_LIST_VIEW
AS
SELECT H.HOST_CODE AS HOST_CODE, LRM.LOC_REMOVE_CODE AS REMOVE_CODE
     , L.LOC_CODE AS LOC_CODE, LBIF.LOC_NAME AS LOC_NAME
     , TO_CHAR(L.LOC_REG_DATE, 'YYYY.MM.DD') AS LOC_REG_DATE
     , T.THUMBNAIL_URL AS THUMBNAIL_URL
     , NVL(IT.INSPECT_TYPE, '검수대기') AS INSPECT_TYPE
     , (SELECT COUNT(*) 
        FROM LOC_BLIND
        WHERE LOC_CODE = L.LOC_CODE) AS BLIND_CHECK
FROM HOST H JOIN LOC L
ON H.HOST_CODE = L.HOST_CODE
    LEFT OUTER JOIN LOC_REMOVE LRM
    ON LRM.LOC_CODE = L.LOC_CODE
        JOIN LOC_BASIC_INFO LBIF
        ON L.LOC_CODE = LBIF.LOC_CODE
            JOIN THUMBNAIL T
            ON LBIF.LOC_BASIC_INFO_CODE = T.LOC_BASIC_INFO_CODE
                JOIN INSPECT_REG_LIST IR
                ON L.LOC_CODE = IR.LOC_CODE
                    LEFT OUTER JOIN INSPECT_PROC_LIST IP
                    ON IR.INSPECT_REG_CODE = IP.INSPECT_REG_CODE
                        LEFT OUTER JOIN INSPECT_TYPE IT
                        ON IP.INSPECT_TYPE_CODE = IT.INSPECT_TYPE_CODE;
                    
                        

-- ############################################################## 혜지
--<<공간 검수 관리>>
-- 항목 : 검수신청코드 공간명 공간유형 

--공간 검수 관리 뷰(VIEW) 생성 이겅뎅
CREATE OR REPLACE VIEW ADMIN_INSPECT_LIST_VIEW
AS
SELECT IR.INSPECT_REG_CODE, LBIF.LOC_NAME, LOCT.LOC_TYPE
,(SELECT COUNT(*)
FROM INSPECT_PROC_LIST
WHERE INSPECT_REG_CODE = IR.INSPECT_REG_CODE ) AS COUNT
FROM INSPECT_REG_LIST IR JOIN LOC_BASIC_INFO LBIF
    ON IR.LOC_CODE = LBIF.LOC_CODE
        JOIN LOC_TYPE LOCT
            ON LOCT.LOC_TYPE_CODE = LBIF.LOC_TYPE_CODE;

    
--<<공간 검수 상세보기>>
--검수처리 뷰만들기 (URL웹사이트,사업등록증,상세이미지는 따로 )
CREATE OR REPLACE VIEW ADMIN_INSPECT_PR_VIEW
AS
SELECT IR.INSPECT_REG_CODE,LBIF.LOC_NAME,LBIF.LOC_SHORT_INTRO,LBIF.LOC_INTRO,LBIF.LOC_ADDR,LBIF.LOC_DETAIL_ADDR
,LOCT.LOC_TYPE, LDIF.MIN_PEOPLE,LDIF.MAX_PEOPLE
,LC.LOC_TEL,LC.LOC_MAIN_TEL,LC.LOC_EMAIL
,BZ.BIZ_NAME,BZ.BIZ_CEO,BZ.BIZ_CEO_TYPE,BZ.BIZ_MAIN_TYPE,BZ.BIZ_SUB_TYPE,BZ.BIZ_ADDR,BZ.BIZ_LICENSE_NUMBER
,LUI.LOC_USE_HOUR,LUI.LOC_USE_DAY_OFF,LUI.LOC_USE_APPOINT_DAY_OFF
FROM  LOC_BASIC_INFO LBIF JOIN LOC_TYPE LOCT
    ON LBIF.LOC_TYPE_CODE = LOCT.LOC_TYPE_CODE
        JOIN inspect_reg_list IR
            ON LBIF.LOC_CODE = IR.LOC_CODE
                    JOIN LOC_DETAIL_INFO LDIF
                        ON LBIF.LOC_CODE = LDIF.LOC_CODE
                            JOIN LOC_CONTACT LC
                                ON LBIF.LOC_CODE = LC.LOC_CODE
                                    JOIN BIZ_INFO BZ
                                        ON LC.LOC_CODE = BZ.LOC_CODE
                                            JOIN LOC_USE_INFO LUI
                                                ON LC.LOC_CODE = LUI.LOC_CODE;             


--시설안내
CREATE OR REPLACE VIEW FACILITY_INFO_VIEW
AS
SELECT FIF.FACILITY_CONTENT, LBIF.LOC_BASIC_INFO_CODE, IR.INSPECT_REG_CODE 
FROM FACILITY_INFO FIF JOIN LOC_BASIC_INFO LBIF
 ON FIF.LOC_BASIC_INFO_CODE = LBIF.LOC_BASIC_INFO_CODE
    JOIN  INSPECT_REG_LIST IR
        ON IR.LOC_CODE = LBIF.LOC_CODE;
        

--주의사항
CREATE OR REPLACE VIEW CAUTION_VIEW
AS
SELECT CAU.CAUTION_CONTENT, LBIF.LOC_BASIC_INFO_CODE, IR.INSPECT_REG_CODE 
FROM CAUTION CAU JOIN LOC_BASIC_INFO LBIF
 ON CAU.LOC_BASIC_INFO_CODE = LBIF.LOC_BASIC_INFO_CODE
    JOIN  INSPECT_REG_LIST IR
        ON IR.LOC_CODE = LBIF.LOC_CODE;
        

--URL웹사이트
CREATE OR REPLACE VIEW WEB_VIEW
AS
SELECT LW.LOC_WEB_URL, LDIF.LOC_DETAIL_INFO_CODE, IR.INSPECT_REG_CODE 
FROM LOC_WEB LW JOIN LOC_DETAIL_INFO LDIF
    ON  LW.LOC_DETAIL_INFO_CODE= LDIF.LOC_DETAIL_INFO_CODE 
        JOIN  INSPECT_REG_LIST IR
            ON IR.LOC_CODE = LDIF.LOC_CODE;    


--해당 검수대기 공간 패키지 조회 쿼리
--(항목 :  패키지명,패키지 시작시간, 패키지 종료시간,패키지 가격)
CREATE OR REPLACE VIEW INSPECT_PACKAGE_VIEW
AS
SELECT P.PACKAGE_NAME,P.PACKAGE_START,P.PACKAGE_END,IR.INSPECT_REG_CODE
FROM PACKAGE P JOIN PACKAGE_FORM PF
ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
JOIN INSPECT_REG_LIST IR
ON PF.LOC_CODE = IR.LOC_CODE;


--○hostQnaManager

--hostQnaManager 페이지 qna 목록 쿼리문
CREATE OR REPLACE VIEW QNA_REPLY_VIEW
AS
SELECT QR.QNA_REPLY_CODE,Q.LOC_CODE,Q.QNA_CONTENT,QR.QNA_CODE, H.HOST_CODE
,QR.QNA_REPLY_CONTENT,HP.HOST_NICKNAME
,QNA_REPLY_DATE
,(SELECT COUNT(*)
FROM QNA_REPLY_REMOVE
WHERE QNA_REPLY_CODE = QR.QNA_REPLY_CODE ) AS COUNT
FROM QNA Q JOIN QNA_REPLY QR
    ON Q.QNA_CODE = QR.QNA_CODE
        JOIN LOC L
            ON  Q.LOC_CODE = L.LOC_CODE
                JOIN HOST H
                    ON L.HOST_CODE = H.HOST_CODE
                        JOIN HOST_PROFILE HP    
                            ON H.HOST_CODE = HP.HOST_CODE;
                            
                            
--HOST QNA POPUP페이지
CREATE OR REPLACE VIEW QNA_REPLY_SECOND_VIEW
AS
SELECT Q.LOC_CODE,QNA_REPLY_DATE,MP.MEMBER_NICKNAME,Q.QNA_CONTENT,QR.QNA_CODE,HP.HOST_NICKNAME, H.HOST_CODE
,QR.QNA_REPLY_CONTENT,QR.QNA_REPLY_CODE
FROM QNA Q JOIN QNA_REPLY QR
    ON Q.QNA_CODE = QR.QNA_CODE
        JOIN LOC L
            ON  Q.LOC_CODE = L.LOC_CODE
                JOIN HOST H
                    ON L.HOST_CODE = H.HOST_CODE
                        JOIN HOST_PROFILE HP    
                            ON H.HOST_CODE = HP.HOST_CODE
                                JOIN MEMBER_PROFILE MP
                                    ON Q.MEMBER_CODE = MP.MEMBER_CODE;
                                    
                                    
--○hostReviewManager
--hostReviewManager 페이지 Review 목록 쿼리문
CREATE OR REPLACE VIEW RW_REPLY_VIEW
AS
SELECT RVRE.REVIEW_REPLY_CODE,RV.LOC_CODE,RV.REVIEW_CONTENT,RVRE.REVIEW_CODE, H.HOST_CODE
,RVRE.REVIEW_REPLY_CONTENT,HP.HOST_NICKNAME
,REVIEW_REPLY_DATE
,(SELECT COUNT(*)
FROM REVIEW_REPLY_REMOVE
WHERE REVIEW_REPLY_CODE = RVRE.REVIEW_REPLY_CODE ) AS COUNT
FROM REVIEW RV JOIN REVIEW_REPLY RVRE
    ON RV.REVIEW_CODE = RVRE.REVIEW_CODE
        JOIN LOC L
            ON  RV.LOC_CODE = L.LOC_CODE
                JOIN HOST H
                    ON L.HOST_CODE = H.HOST_CODE
                        JOIN HOST_PROFILE HP    
                            ON H.HOST_CODE = HP.HOST_CODE; 
                            
                            
--HOST QNA POPUP페이지
CREATE OR REPLACE VIEW RW_REPLY_SECOND_VIEW
AS
SELECT RV.LOC_CODE,REVIEW_REPLY_DATE,MP.MEMBER_NICKNAME,RV.REVIEW_CONTENT,RVRE.REVIEW_CODE,HP.HOST_NICKNAME, H.HOST_CODE
,RVRE.REVIEW_REPLY_CONTENT,RVRE.REVIEW_REPLY_CODE
FROM REVIEW RV JOIN REVIEW_REPLY RVRE
    ON RV.REVIEW_CODE = RVRE.REVIEW_CODE
        JOIN LOC L
            ON  RV.LOC_CODE = L.LOC_CODE
                JOIN HOST H
                    ON L.HOST_CODE = H.HOST_CODE
                        JOIN HOST_PROFILE HP    
                            ON H.HOST_CODE = HP.HOST_CODE
                                JOIN MEMBER_PROFILE MP
                                    ON RV.MEMBER_CODE = MP.MEMBER_CODE;
                                    
                                    
--○HELP Manager
--HELPManager 페이지 Review 목록 쿼리문
CREATE OR REPLACE VIEW  HELP_VIEW
AS
SELECT  HLP.HELP_CODE, BT.BOARD_TYPE, HLP.HELP_TITLE, HLP.HELP_CONTENT, HLP.HELP_DATE
FROM HELP HLP JOIN BOARD_TYPE BT
ON HLP.BOARD_TYPE_CODE = BT.BOARD_TYPE_CODE;  


--공지사항 뷰 생성
CREATE OR REPLACE VIEW  NOTICE_VIEW
AS
SELECT N.NOTICE_CODE, I.IMPORTANT_NOTICE, N.NOTICE_TITLE, N.NOTICE_CONTENT, N.NOTICE_DATE,N.IMPORTANT_NOTICE_CODE
FROM NOTICE N JOIN IMPORTANT_NOTICE I
ON N.IMPORTANT_NOTICE_CODE = I.IMPORTANT_NOTICE_CODE;


CREATE OR REPLACE VIEW  UNOTICE_VIEW
AS
SELECT N.NOTICE_CODE, I.IMPORTANT_NOTICE, N.NOTICE_TITLE, N.NOTICE_CONTENT, N.NOTICE_DATE,N.IMPORTANT_NOTICE_CODE
FROM NOTICE N JOIN IMPORTANT_NOTICE I
ON N.IMPORTANT_NOTICE_CODE = I.IMPORTANT_NOTICE_CODE;

--사업등록증 (이미지) 조회쿼리
CREATE OR REPLACE VIEW BIZ_IMG_VIEW
AS
SELECT BZ.BIZ_LICENSE_URL, IR.INSPECT_REG_CODE 
FROM BIZ_INFO BZ  JOIN  INSPECT_REG_LIST IR
            ON BZ.LOC_CODE = IR.LOC_CODE;

CREATE OR REPLACE VIEW LOC_IMG_VIEW
AS
SELECT LDIMG.LOC_DETAIL_IMG_URL, LDIF.LOC_DETAIL_INFO_CODE, IR.INSPECT_REG_CODE 
FROM LOC_DETAIL_IMG LDIMG JOIN LOC_DETAIL_INFO LDIF
    ON  LDIMG.LOC_DETAIL_INFO_CODE= LDIF.LOC_DETAIL_INFO_CODE 
        JOIN  INSPECT_REG_LIST IR
            ON IR.LOC_CODE = LDIF.LOC_CODE;

-- ############################################################## 윤상

--※ 이용자 계좌 관리
--① 계좌조회
--○ 계좌조회 뷰생성
CREATE OR REPLACE VIEW VIEW_MEMBER_BANK_INFO
AS
SELECT M.MEMBER_CODE, MBIF.MEMBER_BANK_NUMBER, MBIF.MEMBER_BANK, MBIF.MEMBER_BANK_HOLDER
FROM MEMBER M JOIN MEMBER_BANK_INFO MBIF
     ON M.MEMBER_CODE = MBIF.MEMBER_CODE;
     
     
--※ 이용자 마일리지 내역
--① 사용내역 
-- 뷰 생성
CREATE OR REPLACE VIEW PAYMENT_HISTORY
AS
SELECT L.LOC_CODE, B.MEMBER_CODE, LBIF.LOC_NAME, P.PACKAGE_PRICE, AP.APPLY_DATE
FROM BOOK_PAY_LIST BP 
JOIN BOOK_LIST B
ON BP.BOOK_CODE = B.BOOK_CODE
    JOIN APPLY_PACKAGE AP
    ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
        JOIN PACKAGE P 
        ON AP.PACKAGE_CODE = P.PACKAGE_CODE
            JOIN PACKAGE_FORM PF
            ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                RIGHT OUTER JOIN LOC L 
                ON PF.LOC_CODE = L.LOC_CODE
                    JOIN LOC_BASIC_INFO LBIF
                    ON L.LOC_CODE = LBIF.LOC_CODE;
                    
                    
--② 충전내역 조회
-- 충전내역 조회 뷰
CREATE OR REPLACE VIEW LOAD_REG_HISTORY
AS
(SELECT M.MEMBER_CODE, LR.LOAD_REG_CODE, LRBIF.MEMBER_BANK_NUMBER, MBIF.MEMBER_BANK, LR.LOAD_AMOUNT, LR.LOAD_REG_DATE, LT.LOAD_TYPE, LP.LOAD_PROC_DATE
FROM MEMBER M JOIN MEMBER_PROFILE MP
    ON M.MEMBER_CODE = MP.MEMBER_CODE
        RIGHT OUTER JOIN MEMBER_BANK_INFO MBIF
        ON M.MEMBER_CODE = MBIF.MEMBER_CODE
            RIGHT OUTER JOIN LOAD_REG_BANK_INFO LRBIF
            ON MBIF.MEMBER_BANK_NUMBER = LRBIF.MEMBER_BANK_NUMBER
                RIGHT OUTER JOIN LOAD_REG LR
                ON LRBIF.LOAD_REG_CODE = LR.LOAD_REG_CODE
                    LEFT OUTER JOIN LOAD_PROC LP
                    ON LR.LOAD_REG_CODE = LP.LOAD_REG_CODE
                        LEFT OUTER JOIN LOAD_TYPE LT
                        ON LP.LOAD_TYPE_CODE = LT.LOAD_TYPE_CODE);
                        
                        
--③ 환전내역
-- 환전 내역 조회 뷰
CREATE OR REPLACE VIEW MEMBER_EXCHANGE_HISTORY
AS
SELECT M.MEMBER_CODE, MEBIF.MEMBER_BANK_NUMBER, MBIF.MEMBER_BANK, ME.MEMBER_EXCHANGE_AMOUNT, ME.MEMBER_EXCHANGE_DATE
FROM MEMBER M RIGHT OUTER JOIN MEMBER_EXCHANGE_LIST ME
ON M.MEMBER_CODE = ME.MEMBER_CODE
    JOIN MEMBER_EXCHANGE_BANK_INFO MEBIF
    ON ME.MEMBER_EXCHANGE_CODE = MEBIF.MEMBER_EXCHANGE_CODE
        JOIN MEMBER_BANK_INFO MBIF
        ON MEBIF.MEMBER_BANK_NUMBER = MBIF.MEMBER_BANK_NUMBER;
        
        
--④ 환불내역 --번호,취소유형,공간명,예약일,결제금액,환불금액,환불처리일
-- 이용자 취소 
CREATE OR REPLACE VIEW REFUND_HISTORY
AS
SELECT M.MEMBER_CODE, '이용자취소'AS TYPE
     , LBIF.LOC_NAME, AP.APPLY_DATE
     , P.PACKAGE_PRICE, MCL.MEMBER_CANCEL_DATE
     , (CASE WHEN (TO_DATE(AP.APPLY_DATE, 'YYYY-MM-DD') - TO_DATE(MCL.MEMBER_CANCEL_DATE, 'YYYY-MM-DD')) < 7 
              THEN TRUNC(P.PACKAGE_PRICE * 0.5, -1) 
              ELSE TRUNC(P.PACKAGE_PRICE * 1, -1)
              END)  AS 환불금액  
FROM MEMBER M JOIN BOOK_LIST BL
ON M.MEMBER_CODE = BL.MEMBER_CODE
    JOIN MEMBER_CANCEL_LIST MCL --취소일자구하기
    ON BL.BOOK_CODE = MCL.BOOK_CODE 
        JOIN APPLY_PACKAGE AP -- 예약일 구하기
        ON BL.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
            JOIN PACKAGE P -- 가격구하기
            ON AP.PACKAGE_CODE = P.PACKAGE_CODE
                JOIN PACKAGE_FORM PF 
                ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                    JOIN LOC L
                    ON PF.LOC_CODE = L.LOC_CODE
                        JOIN LOC_BASIC_INFO LBIF -- 공간명 구하기
                        ON L.LOC_CODE = LBIF.LOC_CODE 

UNION
-- 호스트 취소
SELECT M.MEMBER_CODE, '호스트취소'
     , LBIF.LOC_NAME, AP.APPLY_DATE
     , P.PACKAGE_PRICE, HCL.HOST_CANCEL_DATE
     , P.PACKAGE_PRICE AS 환불금액
FROM MEMBER M JOIN BOOK_LIST BL
ON M.MEMBER_CODE = BL.MEMBER_CODE
    JOIN HOST_CANCEL_LIST HCL
    ON BL.BOOK_CODE = HCL.BOOK_CODE
        JOIN APPLY_PACKAGE AP -- 예약일 구하기
        ON BL.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
            JOIN PACKAGE P -- 가격구하기
            ON AP.PACKAGE_CODE = P.PACKAGE_CODE
                JOIN PACKAGE_FORM PF 
                ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                    JOIN LOC L
                    ON PF.LOC_CODE = L.LOC_CODE
                        JOIN LOC_BASIC_INFO LBIF -- 공간명 구하기
                        ON L.LOC_CODE = LBIF.LOC_CODE;
                        
                        
--------------------------------------------------------------------------------
--※ 호스트 계좌 관리
--○ 계좌조회 뷰
CREATE OR REPLACE VIEW VIEW_HOST_BANK_INFO
AS
SELECT H.HOST_CODE, HBIF.HOST_BANK_NUMBER, HBIF.HOST_BANK, HBIF.HOST_BANK_HOLDER
FROM HOST H JOIN HOST_BANK_INFO HBIF
     ON H.HOST_CODE = HBIF.HOST_CODE; 
     
     
--※ 호스트 마일리지 내역
--① 정산내역 
-- 정산내역 뷰
CREATE OR REPLACE VIEW CAL_HISTORY
AS
SELECT H.HOST_CODE, BL.MEMBER_CODE, LBIF.LOC_NAME, P.PACKAGE_PRICE
, BRL.BOOK_REFUND_DATE, AP.APPLY_DATE, HCL.HOST_CANCEL_DATE
,(CASE WHEN BRL.BOOK_REFUND_DATE IS NOT NULL
        THEN '이용자취소'
       WHEN HCL.HOST_CANCEL_DATE IS NOT NULL
        THEN '호스트취소'
        ELSE (CASE WHEN SYSDATE > AP.APPLY_DATE
                    THEN '정산완료'
                    ELSE '정산대기'
                    END)
        END ) AS STATUS
, (CASE WHEN BRL.BOOK_REFUND_DATE IS NOT NULL
        THEN (CASE WHEN (TO_DATE(SYSDATE, 'YYYY-MM-DD') - TO_DATE(BRL.BOOK_REFUND_DATE, 'YYYY-MM-DD')) < 7
                    THEN TRUNC(P.PACKAGE_PRICE * 0.5, -1)
                    ELSE TRUNC(P.PACKAGE_PRICE * 1, -1)
                    END)
        WHEN HCL.HOST_CANCEL_DATE IS NOT NULL
        THEN 0
        ELSE (CASE WHEN SYSDATE > AP.APPLY_DATE
                    THEN P.PACKAGE_PRICE
                    END)
        END ) AS AMOUNT
FROM HOST H JOIN LOC L                     -- 호스트코드 구하기
ON H.HOST_CODE = L.HOST_CODE
    JOIN LOC_BASIC_INFO LBIF                --공간명 구하기
    ON L.LOC_CODE = LBIF.LOC_CODE   
        JOIN PACKAGE_FORM PF
        ON L.LOC_CODE = PF.LOC_CODE
            JOIN PACKAGE P                  -- 가격 구하기
            ON PF.PACKAGE_FORM_CODE = P.PACKAGE_FORM_CODE   
                JOIN APPLY_PACKAGE AP       -- 예약일 구하기
                ON P.PACKAGE_CODE = AP.PACKAGE_CODE 
                    JOIN BOOK_LIST BL       -- 회원코드 구하기
                    ON AP.APPLY_PACKAGE_CODE = BL.APPLY_PACKAGE_CODE
                        LEFT OUTER JOIN BOOK_REFUND_LIST BRL        -- BOOK_REFUND_CODE NULL유무에따라 상태 출력
                        ON BL.BOOK_CODE = BRL.BOOK_CODE
                            LEFT OUTER JOIN HOST_CANCEL_LIST HCL
                            ON BL.BOOK_CODE = HCL.BOOK_CODE;
                            
                                                    
--② 환전내역
CREATE OR REPLACE VIEW HOST_EXCHANGE_HISTORY
AS
SELECT H.HOST_CODE, HEBIF.HOST_BANK_NUMBER, HBIF.HOST_BANK, HE.HOST_EXCHANGE_AMOUNT, HE.HOST_EXCHANGE_DATE
FROM HOST H RIGHT OUTER JOIN HOST_EXCHANGE_LIST HE
ON H.HOST_CODE = HE.HOST_CODE
    JOIN HOST_EXCHANGE_BANK_INFO HEBIF
    ON HE.HOST_EXCHANGE_CODE = HEBIF.HOST_EXCHANGE_CODE
        JOIN HOST_BANK_INFO HBIF
        ON HEBIF.HOST_BANK_NUMBER = HBIF.HOST_BANK_NUMBER;                           


-- 관리자 충전 처리--
--① 충전신청 리스트 조회 뷰
CREATE OR REPLACE VIEW LOAD_REG_LIST
AS
(SELECT LR.LOAD_REG_CODE, MP.MEMBER_EMAIL, LRBIF.MEMBER_BANK_NUMBER, MBIF.MEMBER_BANK, LR.LOAD_AMOUNT, MBIF.MEMBER_BANK_HOLDER, LR.LOAD_REG_DATE, LT.LOAD_TYPE, LP.LOAD_PROC_DATE
FROM MEMBER M JOIN MEMBER_PROFILE MP
    ON M.MEMBER_CODE = MP.MEMBER_CODE
        RIGHT OUTER JOIN MEMBER_BANK_INFO MBIF
        ON M.MEMBER_CODE = MBIF.MEMBER_CODE
            RIGHT OUTER JOIN LOAD_REG_BANK_INFO LRBIF
            ON MBIF.MEMBER_BANK_NUMBER = LRBIF.MEMBER_BANK_NUMBER
                RIGHT OUTER JOIN LOAD_REG LR
                ON LRBIF.LOAD_REG_CODE = LR.LOAD_REG_CODE
                    LEFT OUTER JOIN LOAD_PROC LP
                    ON LR.LOAD_REG_CODE = LP.LOAD_REG_CODE
                        LEFT OUTER JOIN LOAD_TYPE LT
                        ON LP.LOAD_TYPE_CODE = LT.LOAD_TYPE_CODE);
                        
                        

-- ############################################################## 영은
--○ 공간 기본정보 뷰
CREATE OR REPLACE VIEW VIEW_BASIC_INFO
AS      
SELECT LB.LOC_CODE, LB.LOC_NAME, LT.LOC_TYPE
, LB.LOC_SHORT_INTRO, LB.LOC_INTRO
, LB.LOC_ADDR, LB.LOC_DETAIL_ADDR
, LD.MIN_PEOPLE, LD.MAX_PEOPLE
, L.LOC_REG_DATE, H.HOST_NICKNAME, H.HOST_CODE
, W.LOC_WEB_URL, T.THUMBNAIL_URL
FROM LOC_BASIC_INFO LB
JOIN LOC_TYPE LT 
ON LB.LOC_TYPE_CODE = LT.LOC_TYPE_CODE
    JOIN LOC_DETAIL_INFO LD
    ON LB.LOC_CODE = LD.LOC_CODE
        JOIN LOC L
        ON LB.LOC_CODE = L.LOC_CODE
            JOIN HOST_PROFILE H
            ON L.HOST_CODE = H.HOST_CODE
                LEFT JOIN LOC_WEB W
                ON LD.LOC_DETAIL_INFO_CODE = W.LOC_DETAIL_INFO_CODE
                    JOIN THUMBNAIL T
                    ON LB.LOC_BASIC_INFO_CODE = T.LOC_BASIC_INFO_CODE;


            
--○ 공간소개 (이용시간 안내)
CREATE OR REPLACE VIEW VIEW_USING_HOUR
AS
SELECT LOC_USE_HOUR, LOC_USE_DAY_OFF, LOC_USE_APPOINT_DAY_OFF, LOC_CODE
FROM LOC_USE_INFO;


--○ 해당 공간에 적용된 패키지
CREATE OR REPLACE VIEW VIEW_APPLY_PACKAGE_INFO
AS
SELECT PF.LOC_CODE, P.PACKAGE_CODE, P.PACKAGE_FORM_CODE, P.PACKAGE_NAME
, P.PACKAGE_START, P.PACKAGE_END, P.PACKAGE_PRICE, AP.APPLY_DATE
, AP.APPLY_PACKAGE_CODE
, (SELECT COUNT(*) FROM BOOK_LIST B WHERE B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE)
AS COUNT
, (SELECT COUNT(*) FROM MEMBER_CANCEL_LIST MC WHERE B.BOOK_CODE = MC.BOOK_CODE)
AS MEMBER_CANCEL
, (SELECT COUNT(*) FROM HOST_CANCEL_LIST HC WHERE B.BOOK_CODE = HC.BOOK_CODE)
AS HOST_CANCEL
FROM PACKAGE P
JOIN PACKAGE_FORM PF
ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
    JOIN APPLY_PACKAGE AP
    ON P.PACKAGE_CODE = AP.PACKAGE_CODE
        LEFT JOIN BOOK_LIST B
        ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE;



CREATE OR REPLACE VIEW VIEW_FACILITY_INFO
AS
SELECT F.FACILITY_CODE, F.LOC_BASIC_INFO_CODE, F.FACILITY_CONTENT
, L.LOC_CODE 
FROM FACILITY_INFO F
JOIN LOC_BASIC_INFO L
ON F.LOC_BASIC_INFO_CODE = L.LOC_BASIC_INFO_CODE;

--○ 주의사항 뷰
CREATE OR REPLACE VIEW VIEW_CAUTION_CONTENT
AS
SELECT C.CAUTION_CONTENT, L.LOC_CODE
FROM CAUTION C
JOIN LOC_BASIC_INFO L
ON C.LOC_BASIC_INFO_CODE = L.LOC_BASIC_INFO_CODE;

--○ QNA
CREATE OR REPLACE VIEW VIEW_QNA
AS
SELECT Q.LOC_CODE, Q.QNA_CODE, Q.MEMBER_CODE, Q.QNA_CONTENT, Q.QNA_DATE
, NVL(M.MEMBER_NICKNAME, '(알수없음)') AS MEMBER_NICKNAME
, (SELECT COUNT(*) FROM QNA_REPLY QR WHERE Q.QNA_CODE=QR.QNA_CODE) AS REPLYCOUNT
, (SELECT COUNT(*) FROM QNA_REMOVE QRM WHERE Q.QNA_CODE=QRM.QNA_CODE) AS QNAREMOVECOUNT
, (SELECT COUNT(*) FROM QNA_REPLY_REMOVE QRM WHERE QR.QNA_REPLY_CODE=QRM.QNA_REPLY_CODE) AS QNAREPLYREMOVECOUNT
, L.HOST_CODE, QR.QNA_REPLY_CONTENT, QR.QNA_REPLY_DATE, QR.QNA_REPLY_CODE
FROM QNA Q
LEFT JOIN MEMBER_PROFILE M      -- LEFT 조인 해야 탈퇴회원이름 표시가능
ON Q.MEMBER_CODE = M.MEMBER_CODE
    LEFT JOIN QNA_REPLY QR
    ON Q.QNA_CODE = QR.QNA_CODE
        LEFT JOIN LOC L
        ON Q.LOC_CODE = L.LOC_CODE
ORDER BY Q.QNA_CODE DESC;


--○ 리뷰
CREATE OR REPLACE VIEW VIEW_REVIEW
AS
SELECT R.REVIEW_CODE, NVL(M.MEMBER_NICKNAME, '(알수없음)') AS MEMBER_NICKNAME
, R.LOC_CODE, R.REVIEW_RATE, R.REVIEW_CONTENT, R.REVIEW_DATE
, RVIMG.REVIEW_IMG_URL
, (SELECT COUNT(*) FROM REVIEW_IMG RVIMG
    WHERE R.REVIEW_CODE=RVIMG.REVIEW_CODE) AS RVIMGCOUNT
, (SELECT COUNT(*) FROM REVIEW_REMOVE RVRM 
    WHERE R.REVIEW_CODE=RVRM.REVIEW_CODE) AS REVIEWREMOVECOUNT
, (SELECT COUNT(*) FROM REVIEW_REPLY RR 
    WHERE R.REVIEW_CODE=RR.REVIEW_CODE) AS REPLYCOUNT
, (SELECT COUNT(*) FROM REVIEW_REPLY_REMOVE RRM 
    WHERE RR.REVIEW_REPLY_CODE=RRM.REVIEW_REPLY_CODE) AS REPLYREMOVECOUNT
, M.MEMBER_CODE, RR.REVIEW_REPLY_CONTENT, RR.REVIEW_REPLY_DATE, L.HOST_CODE
, RR.REVIEW_REPLY_CODE
FROM REVIEW R
LEFT JOIN MEMBER_PROFILE M
ON R.MEMBER_CODE = M.MEMBER_CODE
    LEFT JOIN REVIEW_IMG RVIMG
    ON R.REVIEW_CODE = RVIMG.REVIEW_CODE
        LEFT JOIN REVIEW_REPLY RR
        ON R.REVIEW_CODE = RR.REVIEW_CODE
            JOIN LOC L
            ON R.LOC_CODE = L.LOC_CODE
ORDER BY R.REVIEW_CODE DESC;


--○ 이용자 이용내역여부 확인(버튼 만드려고 했던거같음)
CREATE OR REPLACE VIEW VIEW_MEMBER_BOOK
AS
SELECT NVL((MEMBER_CANCEL+ HOST_CANCEL), 0) AS COUNT
, AA.MEMBER_CODE, AA.APPLY_PACKAGE_CODE, AA.LOC_CODE
, AA.APPLY_DATE
FROM
(SELECT DISTINCT B.MEMBER_CODE, A.APPLY_PACKAGE_CODE, F.LOC_CODE
, A.APPLY_DATE
, (SELECT COUNT(*) FROM HOST_CANCEL_LIST HC WHERE B.BOOK_CODE = HC.BOOK_CODE) AS HOST_CANCEL
, (SELECT COUNT(*) FROM MEMBER_CANCEL_LIST MC WHERE B.BOOK_CODE = MC.BOOK_CODE) AS MEMBER_CANCEL
FROM BOOK_LIST B
JOIN APPLY_PACKAGE A
ON B.APPLY_PACKAGE_CODE = A.APPLY_PACKAGE_CODE
    JOIN PACKAGE P
    ON A.PACKAGE_CODE = P.PACKAGE_CODE
        JOIN PACKAGE_FORM F
        ON P.PACKAGE_FORM_CODE = F.PACKAGE_FORM_CODE
            JOIN REVIEW R
            ON B.MEMBER_CODE = R.MEMBER_CODE
            WHERE A.APPLY_DATE < SYSDATE) AA;


--------------------------------------------------------------------------------
--※ BOOKAPPLY.JSP

--○ 사업자 정보 + 연락처 뷰
CREATE OR REPLACE VIEW VIEW_BIZ_CONTACT
AS
SELECT DISTINCT B.BIZ_NAME, B.BIZ_CEO, B.BIZ_CEO_TYPE,
B.BIZ_MAIN_TYPE, B.BIZ_SUB_TYPE, B.BIZ_LICENSE_NUMBER
, LC.LOC_EMAIL, LC.LOC_TEL, LC.LOC_MAIN_TEL
, B.BIZ_ADDR, B.LOC_CODE
FROM BIZ_INFO B
    JOIN LOC_CONTACT LC
    ON B.LOC_CODE = LC.LOC_CODE;

    
--------------------------------------------------------------------------------
--※ BOOKLIST.JSP
CREATE OR REPLACE VIEW VIEW_BOOKLIST
AS
SELECT DISTINCT B.BOOK_CODE, B.MEMBER_CODE, A.APPLY_PACKAGE_CODE, F.LOC_CODE
, TO_DATE(A.APPLY_DATE,'YYYY-MM-DD') AS APPLY_DATE, BOOK_DATE, P.PACKAGE_CODE, P.PACKAGE_NAME
, P.PACKAGE_START, P.PACKAGE_END
, NVL(P.PACKAGE_END, 0) - NVL(P.PACKAGE_START, 0) AS BOOK_HOUR
, (SELECT COUNT(*) FROM HOST_CANCEL_LIST HC WHERE B.BOOK_CODE = HC.BOOK_CODE) AS HOST_CANCEL
, (SELECT COUNT(*) FROM MEMBER_CANCEL_LIST MC WHERE B.BOOK_CODE = MC.BOOK_CODE) AS MEMBER_CANCEL
, (SELECT COUNT(*) FROM BOOK_REFUND_LIST BRF WHERE B.BOOK_CODE = BRF.BOOK_CODE) AS REFUND
, LBIF.LOC_NAME, AB.ACTUAL_BOOKER, AB.ACTUAL_BOOKER_TEL
, B.BOOK_PEOPLE, B.BOOK_REQ, P.PACKAGE_PRICE
, BZ.BIZ_NAME, BZ.BIZ_CEO, BZ.BIZ_LICENSE_NUMBER
, MC.MEMBER_CANCEL_REASON, HC.HOST_CANCEL_REASON
, MP.MEMBER_EMAIL, LBIF.LOC_ADDR, LBIF.LOC_DETAIL_ADDR
, MP.MEMBER_NICKNAME
FROM BOOK_LIST B
JOIN APPLY_PACKAGE A
ON B.APPLY_PACKAGE_CODE = A.APPLY_PACKAGE_CODE
    JOIN PACKAGE P
    ON A.PACKAGE_CODE = P.PACKAGE_CODE
        JOIN PACKAGE_FORM F
        ON P.PACKAGE_FORM_CODE = F.PACKAGE_FORM_CODE
            JOIN LOC_BASIC_INFO LBIF
            ON F.LOC_CODE = LBIF.LOC_CODE
                JOIN ACTUAL_BOOKER AB
                ON B.BOOK_CODE=AB.BOOK_CODE
                    JOIN BIZ_INFO BZ
                    ON F.LOC_CODE = BZ.LOC_CODE
                        LEFT JOIN HOST_CANCEL_LIST HC
                        ON B.BOOK_CODE = HC.BOOK_CODE
                            LEFT JOIN MEMBER_CANCEL_LIST MC
                            ON B.BOOK_CODE = MC.BOOK_CODE
                                JOIN MEMBER_PROFILE MP
                                ON B.MEMBER_CODE = MP.MEMBER_CODE;


----------------------------------------------------------------------------------------------------------------
--※ USERQNALIST.JSP
--○ 이용자 QNA LIST
CREATE OR REPLACE VIEW VIEW_USER_QNA
AS
SELECT Q.QNA_CODE, Q.LOC_CODE, Q.MEMBER_CODE
, Q.QNA_CONTENT, Q.QNA_DATE, LBIF.LOC_NAME
, (SELECT COUNT(*) AS FROM QNA_REMOVE QRM WHERE Q.QNA_CODE = QRM.QNA_CODE) AS REMOVECOUNT
FROM QNA Q
JOIN LOC L
ON Q.LOC_CODE = L.LOC_CODE
    JOIN LOC_BASIC_INFO LBIF
    ON L.LOC_CODE = LBIF.LOC_CODE
ORDER BY QNA_CODE DESC;
    

--※ USERREVIEWLIST.JSP
--○ 이용자 REVIEW LIST
CREATE OR REPLACE VIEW VIEW_USER_REVIEW
AS
SELECT R.REVIEW_CODE, R.MEMBER_CODE
, R.REVIEW_CONTENT, R.REVIEW_RATE, R.REVIEW_DATE, LBIF.LOC_NAME
, (SELECT COUNT(*) FROM REVIEW_REMOVE RVRM WHERE R.REVIEW_CODE = RVRM.REVIEW_CODE) AS REMOVECOUNT
FROM REVIEW R
JOIN LOC L
ON R.LOC_CODE = L.LOC_CODE
    JOIN LOC_BASIC_INFO LBIF
    ON L.LOC_CODE = LBIF.LOC_CODE
ORDER BY REVIEW_CODE DESC;

--------------------------------------------------------------------------------
--※ BOOKAPPLYNOTICE.JSP
CREATE OR REPLACE VIEW VIEW_BOOKAPPLYNOTICE
AS
SELECT A.ACTUAL_BOOKER, A.ACTUAL_BOOKER_TEL, B.BOOK_PEOPLE, B.BOOK_REQ
, AP.APPLY_DATE, P.PACKAGE_NAME, P.PACKAGE_START, P.PACKAGE_END
, P.PACKAGE_PRICE, B.BOOK_CODE, B.MEMBER_CODE
FROM BOOK_LIST B
    JOIN ACTUAL_BOOKER A
    ON B.BOOK_CODE = A.BOOK_CODE
        JOIN APPLY_PACKAGE AP
        ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
            LEFT JOIN PACKAGE P
            ON AP.PACKAGE_CODE = P.PACKAGE_CODE;
            
--------------------------------------------------------------------------------
--※ HOSTBLACKLISTMANAGER.JSP
CREATE OR REPLACE VIEW VIEW_HOSTBLACKLIST
AS
SELECT H.HOST_CODE, H.HOST_EMAIL, H.HOST_NICKNAME
, HB.HOST_BLACKLIST_REASON
, (SELECT COUNT(*) FROM HOST_BLACKLIST HB 
    WHERE H.HOST_EMAIL=HB.HOST_EMAIL) AS YESBLACK
FROM HOST_PROFILE H
    LEFT JOIN HOST_BLACKLIST HB
    ON H.HOST_EMAIL = HB.HOST_EMAIL;

--○ 호스트 신고내역 확인
CREATE OR REPLACE VIEW VIEW_HOST_REPORTDETAILS
AS
SELECT H.HOST_CODE, L.LOC_CODE, LR.LOC_REPORT_CODE
, LR.MEMBER_CODE, LR.LOC_REPORT_REASON, LR.LOC_REPORT_DATE
, LRPT.LOC_REPORT_TYPE, RPPT.REPORT_PROC_TYPE
FROM HOST H
LEFT JOIN LOC L
ON H.HOST_CODE = L.HOST_CODE
    JOIN LOC_REPORT LR
    ON L.LOC_CODE = LR.LOC_CODE
        JOIN LOC_REPORT_TYPE LRPT
        ON LR.LOC_REPORT_TYPE_CODE=LRPT.LOC_REPORT_TYPE_CODE
            LEFT JOIN LOC_REPORT_PROC LRPP
            ON LR.LOC_REPORT_CODE=LRPP.LOC_REPORT_CODE
                LEFT JOIN REPORT_PROC_TYPE RPPT
                ON LRPP.REPORT_PROC_TYPE_CODE=RPPT.REPORT_PROC_TYPE_CODE;
                
                
--------------------------------------------------------------------------------
--○ 이용자 블랙리스트 여부 확인 
CREATE OR REPLACE VIEW VIEW_MEMBERBLACKLIST
AS
SELECT M.MEMBER_CODE, M.MEMBER_EMAIL, M.MEMBER_NICKNAME
, MB.MEMBER_BLACKLIST_REASON
, (SELECT COUNT(*) FROM MEMBER_BLACKLIST MB 
    WHERE M.MEMBER_EMAIL=MB.MEMBER_EMAIL) AS YESBLACK
FROM MEMBER_PROFILE M
    LEFT JOIN MEMBER_BLACKLIST MB
    ON M.MEMBER_EMAIL = MB.MEMBER_EMAIL;
    
--○ 이용자 신고내역 뷰 
CREATE OR REPLACE VIEW VIEW_MEMBER_REPORTDETAILS
AS
SELECT B.BOOK_REPORT_CODE, B.BOOK_CODE, BR.BOOK_REPORT_TYPE
, B.BOOK_REPORT_REASON, B.BOOK_REPORT_DATE, BL.MEMBER_CODE
, RPT.REPORT_PROC_TYPE
FROM BOOK_REPORT B
JOIN BOOK_REPORT_TYPE BR
ON B.BOOK_REPORT_TYPE_CODE = BR.BOOK_REPORT_TYPE_CODE
    LEFT JOIN BOOK_REPORT_PROC BRP
    ON B.BOOK_REPORT_CODE = BRP.BOOK_REPORT_CODE
        JOIN BOOK_LIST BL
        ON B.BOOK_CODE = BL.BOOK_CODE
            LEFT JOIN REPORT_PROC_TYPE RPT
            ON BRP.REPORT_PROC_TYPE_CODE = RPT.REPORT_PROC_TYPE_CODE;
            
--------------------------------------------------------------------------------
--○ MESSENGER 구 DIRECT MESSAGE
--○ 예약코드로 닉네임 검색
CREATE OR REPLACE VIEW VIEW_BOOK_NICKNAME
AS
SELECT M.MSG_CODE, M.BOOK_CODE
, B.MEMBER_CODE, HP.HOST_NICKNAME
, MP.MEMBER_NICKNAME
FROM MSG M
JOIN BOOK_LIST B
ON M.BOOK_CODE = B.BOOK_CODE
    JOIN APPLY_PACKAGE AP
    ON B.APPLY_PACKAGE_CODE=AP.APPLY_PACKAGE_CODE
        JOIN PACKAGE P
        ON AP.PACKAGE_CODE = P.PACKAGE_CODE
            JOIN PACKAGE_FORM PF
            ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                JOIN LOC L
                ON PF.LOC_CODE = L.LOC_CODE
                    JOIN HOST_PROFILE HP
                    ON L.HOST_CODE = HP.HOST_CODE
                        JOIN MEMBER_PROFILE MP
                        ON B.MEMBER_CODE = MP.MEMBER_CODE;


--○ 메신저 전체 조회
CREATE OR REPLACE VIEW VIEW_MESSENGER
AS
SELECT H.MSG_CODE
, H.HOST_MSG_CONTENT AS MSG_CONTENT, H.HOST_MSG_DATE AS MSG_DATE
, M.BOOK_CODE
, H.HOST_MSG_INFO_CODE AS MSG_INFO_CODE
, AP.APPLY_DATE
, HP.HOST_CODE AS SENDER_CODE
, HP.HOST_NICKNAME AS SENDER
, (SELECT COUNT(*) FROM HOST_MSG_IMG HI
    WHERE H.HOST_MSG_INFO_CODE = HI.HOST_MSG_INFO_CODE) AS IMGCOUNT
, HI.HOST_MSG_IMG_URL AS MSG_IMG_URL
, CASE WHEN SUBSTR(HP.HOST_CODE, 0, 1) = 'H'
       THEN 0   -- 호스트면 0
       ELSE 1   -- 멤버면 1
       END AS HORM
FROM MSG M
    JOIN HOST_MSG_INFO H
    ON M.MSG_CODE = H.MSG_CODE
        JOIN BOOK_LIST B
        ON M.BOOK_CODE = B.BOOK_CODE
            JOIN APPLY_PACKAGE AP
            ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
                JOIN PACKAGE P
                ON AP.PACKAGE_CODE = P.PACKAGE_CODE
                    JOIN PACKAGE_FORM PF
                    ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                        JOIN LOC L
                        ON PF.LOC_CODE = L.LOC_CODE
                            JOIN HOST_PROFILE HP
                            ON L.HOST_CODE = HP.HOST_CODE
                                JOIN MEMBER_PROFILE M 
                                ON B.MEMBER_CODE = M.MEMBER_CODE
                                    LEFT JOIN HOST_MSG_IMG HI
                                    ON H.HOST_MSG_INFO_CODE = HI.HOST_MSG_INFO_CODE
UNION
SELECT MM.MSG_CODE
, MM.MEMBER_MSG_CONTENT, MM.MEMBER_MSG_DATE
, M.BOOK_CODE
, MM.MEMBER_MSG_INFO_CODE
, AP.APPLY_DATE
, B.MEMBER_CODE -- 송신자
, M.MEMBER_NICKNAME
, (SELECT COUNT(*) FROM MEMBER_MSG_IMG MI
    WHERE MM.MEMBER_MSG_INFO_CODE = MI.MEMBER_MSG_INFO_CODE) AS M_IMGCOUNT
, MI.MEMBER_MSG_IMG_URL
, CASE WHEN SUBSTR(B.MEMBER_CODE, 0, 1) = 'M'
       THEN 1
       ELSE 0
       END
FROM MEMBER_MSG_INFO MM
    JOIN MSG M
    ON MM.MSG_CODE = M.MSG_CODE
        JOIN BOOK_LIST B
        ON M.BOOK_CODE = B.BOOK_CODE
            JOIN APPLY_PACKAGE AP
            ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
                JOIN PACKAGE P
                ON AP.PACKAGE_CODE = P.PACKAGE_CODE
                    JOIN PACKAGE_FORM PF
                    ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                        JOIN LOC L
                        ON PF.LOC_CODE = L.LOC_CODE
                            JOIN HOST_PROFILE HP
                            ON L.HOST_CODE = HP.HOST_CODE
                                JOIN MEMBER_PROFILE M 
                                ON B.MEMBER_CODE = M.MEMBER_CODE
                                    LEFT JOIN MEMBER_MSG_IMG MI
                                    ON MM.MEMBER_MSG_INFO_CODE = MI.MEMBER_MSG_INFO_CODE
ORDER BY MSG_DATE;
          


--○ 메신저 본인확인
CREATE OR REPLACE VIEW VIEW_CHECKMSG
AS
SELECT M.BOOK_CODE, B.MEMBER_CODE, L.HOST_CODE
FROM MSG M
JOIN BOOK_LIST B
ON M.BOOK_CODE = B.BOOK_CODE
    JOIN APPLY_PACKAGE AP
    ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
        JOIN PACKAGE P
        ON AP.PACKAGE_CODE = P.PACKAGE_CODE
            JOIN PACKAGE_FORM PF
            ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                JOIN LOC L
                ON PF.LOC_CODE = L.LOC_CODE;


