SELECT USER
FROM DUAL;

--<<관리자 로그인>>
SELECT ADMIN_NICKNAME 
FROM ADMIN WHERE ADMIN_ID = 'admin_lookation01' 
AND ADMIN_PW = 'java006$';
--==>> 관리자_1

-- 확인
SELECT ADMIN_NICKNAME  FROM ADMIN WHERE ADMIN_ID = 'admin_lookation01' AND ADMIN_PW = 'java006$'
;


--<<공간 검수 관리>>
-- 항목 : 검수신청코드 공간명 공간유형 

--공간 검수 관리 뷰(VIEW) 생성 이겅뎅
CREATE OR REPLACE VIEW ADMIN_INSPECT_LIST_VIEW
AS
SELECT IR.INSPECT_REG_CODE, LBIF.LOC_NAME, LOCT.LOC_TYPE
,(SELECT COUNT(*)
FROM INSPECT_PROC_LIST
WHERE INSPECT_REG_CODE = IR.INSPECT_REG_CODE ) AS COUNT
FROM INSPECT_REG_LIST IR JOIN LOC_BASIC_INFO LBIF
    ON IR.LOC_CODE = LBIF.LOC_CODE
        JOIN LOC_TYPE LOCT
            ON LOCT.LOC_TYPE_CODE = LBIF.LOC_TYPE_CODE;


SELECT *
FROM ADMIN_INSPECT_LIST_VIEW;

SELECT *
FROM inspect_REG_list;
-- * 확인
SELECT INSPECT_REG_CODE,LOC_NAME,LOC_TYPE,COUNT
FROM ADMIN_INSPECT_LIST_VIEW
WHERE COUNT<1;

--확인용 데이터 입력
INSERT INTO INSPECT_REG_LIST(INSPECT_REG_CODE, LOC_CODE, INSPECT_REG_DATE)
VALUES(F_CODE('IR', IR_SEQ.NEXTVAL), 'L000001', SYSDATE); 
COMMIT;

--<<공간 검수 상세보기>>

--검수처리 뷰만들기 (URL웹사이트,사업등록증,상세이미지는 따로 )

CREATE OR REPLACE VIEW ADMIN_INSPECT_PR_VIEW
AS
SELECT IR.INSPECT_REG_CODE,LBIF.LOC_NAME,LBIF.LOC_SHORT_INTRO,LBIF.LOC_INTRO,LBIF.LOC_ADDR,LBIF.LOC_DETAIL_ADDR
,LOCT.LOC_TYPE, LDIF.MIN_PEOPLE,LDIF.MAX_PEOPLE
,LC.LOC_TEL,LC.LOC_MAIN_TEL,LC.LOC_EMAIL
,BZ.BIZ_NAME,BZ.BIZ_CEO,BZ.BIZ_CEO_TYPE,BZ.BIZ_MAIN_TYPE,BZ.BIZ_SUB_TYPE,BZ.BIZ_ADDR,BZ.BIZ_LICENSE_NUMBER
,LUI.LOC_USE_HOUR,LUI.LOC_USE_DAY_OFF,LUI.LOC_USE_APPOINT_DAY_OFF
FROM  LOC_BASIC_INFO LBIF JOIN LOC_TYPE LOCT
    ON LBIF.LOC_TYPE_CODE = LOCT.LOC_TYPE_CODE
        JOIN inspect_reg_list IR
            ON LBIF.LOC_CODE = IR.LOC_CODE
                    JOIN LOC_DETAIL_INFO LDIF
                        ON LBIF.LOC_CODE = LDIF.LOC_CODE
                            JOIN LOC_CONTACT LC
                                ON LBIF.LOC_CODE = LC.LOC_CODE
                                    JOIN BIZ_INFO BZ
                                        ON LC.LOC_CODE = BZ.LOC_CODE
                                            JOIN LOC_USE_INFO LUI
                                                ON LC.LOC_CODE = LUI.LOC_CODE
                                                        ; 

 --확인
 SELECT INSPECT_REG_CODE,LOC_NAME,LOC_SHORT_INTRO,LOC_INTRO,LOC_ADDR,LOC_DETAIL_ADDR
,LOC_TYPE,MIN_PEOPLE,MAX_PEOPLE
,LOC_TEL,LOC_MAIN_TEL,LOC_EMAIL
,BIZ_NAME,BIZ_CEO,BIZ_CEO_TYPE,BIZ_MAIN_TYPE,BIZ_SUB_TYPE,BIZ_ADDR,BIZ_LICENSE_NUMBER
,LOC_USE_HOUR,LOC_USE_DAY_OFF,LOC_USE_APPOINT_DAY_OFF
FROM ADMIN_INSPECT_PR_VIEW
where INSPECT_REG_CODE='IR000001';

DROP VIEW ADMIN_INSPECT_PR_VIEW;


DESC FACILITY_INFO;
FACILITY_CONTENT,CAUTION_CONTENT
FIF.FACILITY_CONTENT,CAU.CAUTION_CONTENT
,


                   
                   
--시설안내
CREATE OR REPLACE VIEW FACILITY_INFO_VIEW
AS
SELECT FIF.FACILITY_CONTENT, LBIF.LOC_BASIC_INFO_CODE, IR.INSPECT_REG_CODE 
FROM FACILITY_INFO FIF JOIN LOC_BASIC_INFO LBIF
 ON FIF.LOC_BASIC_INFO_CODE = LBIF.LOC_BASIC_INFO_CODE
    JOIN  INSPECT_REG_LIST IR
        ON IR.LOC_CODE = LBIF.LOC_CODE;
        
--확인
SELECT FACILITY_CONTENT FROM FACILITY_INFO_VIEW
WHERE INSPECT_REG_CODE='IR000001';

--주의사항
CREATE OR REPLACE VIEW CAUTION_VIEW
AS
SELECT CAU.CAUTION_CONTENT, LBIF.LOC_BASIC_INFO_CODE, IR.INSPECT_REG_CODE 
FROM CAUTION CAU JOIN LOC_BASIC_INFO LBIF
 ON CAU.LOC_BASIC_INFO_CODE = LBIF.LOC_BASIC_INFO_CODE
    JOIN  INSPECT_REG_LIST IR
        ON IR.LOC_CODE = LBIF.LOC_CODE
--==>>View CAUTION_VIEW이(가) 생성되었습니다.

--확인
SELECT CAUTION_CONTENT FROM CAUTION_VIEW
WHERE INSPECT_REG_CODE='IR000001';

--URL웹사이트
CREATE OR REPLACE VIEW WEB_VIEW
AS
SELECT LW.LOC_WEB_URL, LDIF.LOC_DETAIL_INFO_CODE, IR.INSPECT_REG_CODE 
FROM LOC_WEB LW JOIN LOC_DETAIL_INFO LDIF
    ON  LW.LOC_DETAIL_INFO_CODE= LDIF.LOC_DETAIL_INFO_CODE 
        JOIN  INSPECT_REG_LIST IR
            ON IR.LOC_CODE = LDIF.LOC_CODE;
            
--확인
SELECT LOC_WEB_URL FROM WEB_VIEW
WHERE INSPECT_REG_CODE='IR000001';

--사업등록증 (이미지) 조회쿼리
--이미지링크 목록 조회 쿼리

--해당 검수대기 공간 검수 승인/반려 시, 검수처리내역 INSERT 쿼리문
INSERT INTO INSPECT_PROC_LIST (INSPECT_PROC_CODE, INSPECT_REG_CODE, INSPECT_TYPE_CODE
,INSPECT_PROC_REASON ,INSPECT_PROC_DATE)
VALUES (F_CODE('IP', IP_SEQ.NEXTVAL), 'IR000005', 'IT000001','검수가반려된거', SYSDATE); 


----------------------------------------------------------------------------------<<혹시각각메소드생성해서할지몰라서놔둠>>
--해당 검수대기 공간 기본정보 조회 쿼리
--(공간명, 공간한줄소개,  공간주소, 공간상세주소,공간유형, 시설안내, 주의사항 )
SELECT LBIF.LOC_NAME,LBIF.LOC_SHORT_INTRO,LBIF.LOC_ADDR,LBIF.LOC_DETAIL_ADDR,LOCT.LOC_TYPE,FIF.FACILITY_CONTENT,CAU.CAUTION_CONTENT 
FROM LOC_BASIC_INFO LBIF JOIN LOC_TYPE LOCT
    ON LBIF.LOC_TYPE_CODE = LOCT.LOC_TYPE_CODE
        JOIN FACILITY_INFO FIF
            ON LBIF.LOC_BASIC_INFO_CODE =  FIF.LOC_BASIC_INFO_CODE
                JOIN CAUTION CAU
                    ON LBIF.LOC_BASIC_INFO_CODE =  CAU.LOC_BASIC_INFO_CODE; 

--해당 검수대기 공간 상세정보 조회 쿼리
--(항목 : 최소인원,최대인원,공간웹사이트)
SELECT LDIF.MIN_PEOPLE,LDIF.MAX_PEOPLE,LW.LOC_WEB_URL
FROM LOC_DETAIL_INFO LDIF JOIN LOC_WEB LW
    ON LDIF.LOC_DETAIL_INFO_CODE = LW.LOC_DETAIL_INFO_CODE
    ;

--해당 검수대기 공간 패키지 조회 쿼리
--(항목 :  패키지명,패키지 시작시간, 패키지 종료시간,패키지 가격)
CREATE OR REPLACE VIEW INSPECT_PACKAGE_VIEW
AS
SELECT P.PACKAGE_NAME,P.PACKAGE_START,P.PACKAGE_END,IR.INSPECT_REG_CODE
FROM PACKAGE P JOIN PACKAGE_FORM PF
ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
JOIN INSPECT_REG_LIST IR
ON PF.LOC_CODE = IR.LOC_CODE;
where Inspect_reg_code='IR000001';

SELECT PACKAGE_NAME, PACKAGE_START,PACKAGE_END
FROM INSPECT_PACKAGE_VIEW
where Inspect_reg_code='IR000001';

DROP VIEW INSPECT_PACKAGE_VIEW;

INSPECT_REG_LIST
--해당 검수대기 공간 연락처 조회 쿼리
--(항목 : 휴대폰, 대표전화, 이메일 )
SELECT LOC_TEL, LOC_MAIN_TEL,LOC_EMAIL
FROM LOC_CONTACT;

-- 해당 검수대기 공간 사업자정보 조회 쿼리
--(항목 : 상호명, 대표자명, 사업자유형, 주업태, 주종목, 사업장주소, 사업자등록번호, 사업자등록증)
SELECT BIZ_NAME,BIZ_CEO,BIZ_CEO_TYPE,BIZ_MAIN_TYPE,BIZ_SUB_TYPE,BIZ_ADDR,BIZ_LICENSE_NUMBER,BIZ_LICENSE_URL
FROM BIZ_INFO;

--해당 검수대기 공간 이용안내 조회 쿼리
--(이용시간,정기휴무,지정휴무일)
SELECT LOC_USE_HOUR,LOC_USE_DAY_OFF,OC_USE_APPOINT_DAY_OFF
FROM LOC_USE_INFO;


SELECT PF.LOC_CODE, P.PACKAGE_CODE, P.PACKAGE_FORM_CODE, P.PACKAGE_NAME
, P.PACKAGE_START, P.PACKAGE_END, P.PACKAGE_PRICE, AP.APPLY_DATE
FROM PACKAGE P
JOIN PACKAGE_FORM PF
ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
    JOIN APPLY_PACKAGE AP
    ON P.PACKAGE_CODE = AP.PACKAGE_CODE
WHERE PF.LOC_CODE = 'L000001';



--==============================================================

--○hostQnaManager

--hostQnaManager 페이지 qna 목록 쿼리문
CREATE OR REPLACE VIEW QNA_REPLY_VIEW
AS
SELECT QR.QNA_REPLY_CODE,Q.LOC_CODE,Q.QNA_CONTENT,QR.QNA_CODE, H.HOST_CODE
,QR.QNA_REPLY_CONTENT,HP.HOST_NICKNAME
,QNA_REPLY_DATE
,(SELECT COUNT(*)
FROM QNA_REPLY_REMOVE
WHERE QNA_REPLY_CODE = QR.QNA_REPLY_CODE ) AS COUNT
FROM QNA Q JOIN QNA_REPLY QR
    ON Q.QNA_CODE = QR.QNA_CODE
        JOIN LOC L
            ON  Q.LOC_CODE = L.LOC_CODE
                JOIN HOST H
                    ON L.HOST_CODE = H.HOST_CODE
                        JOIN HOST_PROFILE HP    
                            ON H.HOST_CODE = HP.HOST_CODE;
                            
--확인
SELECT QNA_REPLY_CODE,QNA_CONTENT,QNA_REPLY_CONTENT,HOST_NICKNAME,QNA_REPLY_DATE,loc_code
FROM QNA_REPLY_VIEW;
WHERE LOC_CODE='L000001';

--확인용 데이터 입력
INSERT INTO QNA_REPLY (QNA_REPLY_CODE, QNA_CODE, QNA_REPLY_CONTENT, QNA_REPLY_DATE)
VALUES (F_CODE('QRE', QRE_SEQ.NEXTVAL), 'Q000001', '열한번째....그만할까', sysdate);            

commit;             

--HOST QNA POPUP페이지
CREATE OR REPLACE VIEW QNA_REPLY_SECOND_VIEW
AS
SELECT Q.LOC_CODE,QNA_REPLY_DATE,MP.MEMBER_NICKNAME,Q.QNA_CONTENT,QR.QNA_CODE,HP.HOST_NICKNAME, H.HOST_CODE
,QR.QNA_REPLY_CONTENT,QR.QNA_REPLY_CODE
FROM QNA Q JOIN QNA_REPLY QR
    ON Q.QNA_CODE = QR.QNA_CODE
        JOIN LOC L
            ON  Q.LOC_CODE = L.LOC_CODE
                JOIN HOST H
                    ON L.HOST_CODE = H.HOST_CODE
                        JOIN HOST_PROFILE HP    
                            ON H.HOST_CODE = HP.HOST_CODE
                                JOIN MEMBER_PROFILE MP
                                    ON Q.MEMBER_CODE = MP.MEMBER_CODE;
--==>>View QNA_REPLY_SECOND_VIEW이(가) 생성되었습니다.



--확인
SELECT LOC_CODE, QNA_REPLY_DATE, MEMBER_NICKNAME, QNA_CONTENT
		,HOST_NICKNAME,QNA_REPLY_CONTENT
		FROM QNA_REPLY_SECOND_VIEW
		WHERE QNA_REPLY_CODE ='QRE000001';

--시퀀스
CREATE SEQUENCE QRRM_SEQ;

--HOST QNA 해당 항목 삭제
INSERT INTO QNA_REPLY_REMOVE(QNA_REPLY_REMOVE_CODE, QNA_REPLY_CODE, QNA_REPLY_REMOVE_DATE)
		VALUES (F_CODE('QRRM', QRRM_SEQ.NEXTVAL), 'QRE000001', SYSDATE);
        
--==============================================================

--○hostReviewManager

--hostReviewManager 페이지 Review 목록 쿼리문
CREATE OR REPLACE VIEW RW_REPLY_VIEW
AS
SELECT RVRE.REVIEW_REPLY_CODE,RV.LOC_CODE,RV.REVIEW_CONTENT,RVRE.REVIEW_CODE, H.HOST_CODE
,RVRE.REVIEW_REPLY_CONTENT,HP.HOST_NICKNAME
,REVIEW_REPLY_DATE
,(SELECT COUNT(*)
FROM REVIEW_REPLY_REMOVE
WHERE REVIEW_REPLY_CODE = RVRE.REVIEW_REPLY_CODE ) AS COUNT
FROM REVIEW RV JOIN REVIEW_REPLY RVRE
    ON RV.REVIEW_CODE = RVRE.REVIEW_CODE
        JOIN LOC L
            ON  RV.LOC_CODE = L.LOC_CODE
                JOIN HOST H
                    ON L.HOST_CODE = H.HOST_CODE
                        JOIN HOST_PROFILE HP    
                            ON H.HOST_CODE = HP.HOST_CODE;
 -->>View RW_REPLY_VIEW이(가) 생성되었습니다.                     
                            
--확인
SELECT REVIEW_REPLY_CODE,REVIEW_CONTENT,REVIEW_REPLY_CONTENT,HOST_NICKNAME,REVIEW_REPLY_DATE
FROM RW_REPLY_VIEW
WHERE LOC_CODE='L000001';
 
 DROP VIEW RW_REPLY_VIEW;                   

--HOST QNA POPUP페이지
CREATE OR REPLACE VIEW RW_REPLY_SECOND_VIEW
AS
SELECT RV.LOC_CODE,REVIEW_REPLY_DATE,MP.MEMBER_NICKNAME,RV.REVIEW_CONTENT,RVRE.REVIEW_CODE,HP.HOST_NICKNAME, H.HOST_CODE
,RVRE.REVIEW_REPLY_CONTENT,RVRE.REVIEW_REPLY_CODE
FROM REVIEW RV JOIN REVIEW_REPLY RVRE
    ON RV.REVIEW_CODE = RVRE.REVIEW_CODE
        JOIN LOC L
            ON  RV.LOC_CODE = L.LOC_CODE
                JOIN HOST H
                    ON L.HOST_CODE = H.HOST_CODE
                        JOIN HOST_PROFILE HP    
                            ON H.HOST_CODE = HP.HOST_CODE
                                JOIN MEMBER_PROFILE MP
                                    ON RV.MEMBER_CODE = MP.MEMBER_CODE;
--==>>View RW_REPLY_SECOND_VIEW이(가) 생성되었습니다.

-- 뷰 삭제                
-- DROP VIEW RW_REPLY_SECOND_VIEW;   

--확인
SELECT LOC_CODE, REVIEW_REPLY_DATE, MEMBER_NICKNAME, REVIEW_CONTENT
		,HOST_NICKNAME,REVIEW_REPLY_CONTENT
		FROM RW_REPLY_SECOND_VIEW
		WHERE REVIEW_REPLY_CODE ='RVRE000001';

CREATE SEQUENCE RVRERM_SEQ;

--HOST QNA 해당 항목 삭제
INSERT INTO REVIEW_REPLY_REMOVE(REVIEW_REPLY_REMOVE_CODE, REVIEW_REPLY_CODE, REVIEW_REPLY_REMOVE_DATE)
		VALUES (F_CODE('RVRERM', RVRERM_SEQ.NEXTVAL), '호스트REVIEW코드', SYSDATE);

                    
--==============================================================

--○HELP Manager

--HELPManager 페이지 Review 목록 쿼리문
CREATE OR REPLACE VIEW  HELP_VIEW
AS
SELECT  HLP.HELP_CODE, BT.BOARD_TYPE, HLP.HELP_TITLE, HLP.HELP_CONTENT, HLP.HELP_DATE
FROM HELP HLP JOIN BOARD_TYPE BT
ON HLP.BOARD_TYPE_CODE = BT.BOARD_TYPE_CODE;

 -->>View HELP_VIEW이(가) 생성되었습니다.                     
                            
--확인
SELECT HELP_CODE, BOARD_TYPE, HELP_TITLE, HELP_CONTENT, HELP_DATE
FROM HELP_VIEW
WHERE HELP_CODE='HLP000001';

SELECT HELP_CODE, BOARD_TYPE, HELP_TITLE, HELP_DATE
FROM HELP_VIEW
ORDER BY HELP_DATE DESC;

SELECT *
FROM BOARD_TYPE;

--도움말 글 작성
REVIEW_REPLY_REMOVE(REVIEW_REPLY_REMOVE_CODE, REVIEW_REPLY_CODE, REVIEW_REPLY_REMOVE_DATE)
		VALUES (F_CODE('RVRERM', RVRERM_SEQ.NEXTVAL), '호스트REVIEW코드', SYSDATE);

INSERT INTO HELP(HELP_CODE,BOARD_TYPE_CODE,HELP_TITLE,HELP_CONTENT,HELP_DATE)
    VALUES(F_CODE('HLP',HLP_SEQ.NEXTVAL),'BT000001','룩케이션을즐기는방법','룩케이션을즐기고싶다고요?',SYSDATE);
    COMMIT;

-- 도움말 삭제   
DELETE FROM HELP WHERE HELP_CODE = 'HLP000006';

--도움말 수정
UPDATE help
SET board_type_code = 'BT000001'
  		  , help_title = '룩케이션그만하는법'
          , help_content = '그마안~!'
          , help_date = sysdate
WHERE HELP_CODE = 'HLP000003';

--확인
SELECT HELP_CODE,BOARD_TYPE_CODE,HELP_TITLE,HELP_CONTENT,HELP_DATE
		FROM HELP
		WHERE HELP_CODE =  'HLP000001';
        
        
-- 공지사항
select notice_code,important_notice_code,notice_title ,notice_content,notice_date
from notice;

--공지사항 뷰 생성
CREATE OR REPLACE VIEW  NOTICE_VIEW
AS
SELECT N.NOTICE_CODE, I.IMPORTANT_NOTICE, N.NOTICE_TITLE, N.NOTICE_CONTENT, N.NOTICE_DATE,N.IMPORTANT_NOTICE_CODE
FROM NOTICE N JOIN IMPORTANT_NOTICE I
ON N.IMPORTANT_NOTICE_CODE = I.IMPORTANT_NOTICE_CODE;
--==>>View NOTICE_VIEW이(가) 생성되었습니다.

-- 공지사항 조회
SELECT NOTICE_CODE, IMPORTANT_NOTICE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_DATE
FROM NOTICE_VIEW
;

--공지사항 등록 
INSERT INTO NOTICE (NOTICE_CODE, IMPORTANT_NOTICE_CODE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_DATE)
    	VALUES(F_CODE('N',N_SEQ.NEXTVAL),#{important_notice_code},#{notice_title},#{notice_content},SYSDATE);

--데이터 넣어보기         
INSERT INTO NOTICE(NOTICE_CODE, IMPORTANT_NOTICE_CODE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_DATE)
VALUES(F_CODE('N',N_SEQ.NEXTVAL),'IN000001','또또또일반공지', '그만그만그만그만',SYSDATE);

SELECT *
FROM NOTICE;

--공지사항 삭제
DELETE FROM NOTICE WHERE NOTICE_CODE = 'N000003';

commit;

--공지사항 수정
UPDATE NOTICE SET IMPORTANT_NOTICE_CODE = 'IN000002'
  		  , NOTICE_TITLE = '일반공지입니다'
          , NOTICE_CONTENT = '그러렴그러렴그러렴'
          , NOTICE_DATE = SYSDATE
		WHERE NOTICE_CODE = 'N000010';

        
UPDATE NOTICE SET IMPORTANT_NOTICE_CODE = #{important_notice_code}
  		  , NOTICE_TITLE = #{notice_title}
          , NOTICE_CONTENT = #{notice_content}
          , NOTICE_DATE = SYSDATE
		WHERE NOTICE_CODE = #{notice_code}

CREATE OR REPLACE VIEW  UNOTICE_VIEW
AS
SELECT N.NOTICE_CODE, I.IMPORTANT_NOTICE, N.NOTICE_TITLE, N.NOTICE_CONTENT, N.NOTICE_DATE,N.IMPORTANT_NOTICE_CODE
FROM NOTICE N JOIN IMPORTANT_NOTICE I
ON N.IMPORTANT_NOTICE_CODE = I.IMPORTANT_NOTICE_CODE;
--==>>View UNOTICE_VIEW이(가) 생성되었습니다.

--Notice(유저들 [1.중요/2.일반]- 최근 날짜순 공지사항) 목록 쿼리문
SELECT NOTICE_CODE, IMPORTANT_NOTICE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_DATE,IMPORTANT_NOTICE_CODE
FROM UNOTICE_VIEW
ORDER BY IMPORTANT_NOTICE_CODE ASC , NOTICE_DATE DESC 
;
		

SELECT NOTICE_CODE, IMPORTANT_NOTICE, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_DATE,IMPORTANT_NOTICE_CODE
FROM UNOTICE_VIEW
WHERE NOTICE_CODE= 'N000009';
---------------------------------------------------------

INSERT INTO QNA_REPLY (QNA_REPLY_CODE, QNA_CODE, QNA_REPLY_CONTENT, QNA_REPLY_DATE)
VALUES (F_CODE('QRE', QRE_SEQ.NEXTVAL), 'Q000002', '테스트테스트.', TO_DATE('2020-12-27','YYYY-MM-DD'));         

INSERT INTO REVIEW_REPLY(REVIEW_REPLY_CODE, REVIEW_CODE, REVIEW_REPLY_CONTENT
          , REVIEW_REPLY_DATE)
VALUES(F_CODE('RVRE', RVRE_SEQ.NEXTVAL), 'RV000001', '테스트해보자해보자해보자'
     , TO_DATE('2021-01-18', 'YYYY-MM-DD'));

SELECT HELP_CODE, HELP_TITLE, HELP_CONTENT, HELP_DATE
FROM HELP_VIEW
WHERE HELP_CODE='HLP000009';

----------------------------=========================================

--○ MEMBER 프로필 가져오기
CREATE OR REPLACE VIEW MEMBER_PROFILEVIEW
AS
SELECT MP.MEMBER_EMAIL AS EMAIL, MP.MEMBER_CODE AS CODE
     , MP.MEMBER_PW AS PW, MP.MEMBER_NICKNAME AS NICK
     , MP.MEMBER_NAME AS NAME, MP.MEMBER_TEL AS TEL
     , TO_CHAR(M.MEMBER_SIGN_UP_DATE, 'YYYY-MM-DD') AS CREATEDATE
FROM MEMBER_PROFILE MP, MEMBER M
WHERE MP.MEMBER_CODE = M.MEMBER_CODE;


--○ HOST 프로필 가져오기
CREATE OR REPLACE VIEW HOST_PROFILEVIEW
AS
SELECT HP.HOST_EMAIL AS EMAIL, HP.HOST_CODE AS CODE
     , HP.HOST_PW AS PW, HP.HOST_NICKNAME AS NICK
     , HP.HOST_NAME AS NAME, HP.HOST_TEL AS TEL
     , TO_CHAR(H.HOST_SIGN_UP_DATE, 'YYYY-MM-DD') AS CREATEDATE
FROM HOST_PROFILE HP,  HOST H
WHERE HP.HOST_CODE = H.HOST_CODE;



