--○ 공간 기본정보 뷰
CREATE OR REPLACE VIEW VIEW_BASIC_INFO
AS      
SELECT LB.LOC_CODE, LB.LOC_NAME, LT.LOC_TYPE
, LB.LOC_SHORT_INTRO, LB.LOC_INTRO
, LB.LOC_ADDR, LB.LOC_DETAIL_ADDR
, LD.MIN_PEOPLE, LD.MAX_PEOPLE
, L.LOC_REG_DATE, H.HOST_NICKNAME, H.HOST_CODE
, W.LOC_WEB_URL, T.THUMBNAIL_URL
FROM LOC_BASIC_INFO LB
JOIN LOC_TYPE LT 
ON LB.LOC_TYPE_CODE = LT.LOC_TYPE_CODE
    JOIN LOC_DETAIL_INFO LD
    ON LB.LOC_CODE = LD.LOC_CODE
        JOIN LOC L
        ON LB.LOC_CODE = L.LOC_CODE
            JOIN HOST_PROFILE H
            ON L.HOST_CODE = H.HOST_CODE
                LEFT JOIN LOC_WEB W
                ON LD.LOC_DETAIL_INFO_CODE = W.LOC_DETAIL_INFO_CODE
                    JOIN THUMBNAIL T
                    ON LB.LOC_BASIC_INFO_CODE = T.LOC_BASIC_INFO_CODE;
--○ 공간소개 (이용시간 안내)
CREATE OR REPLACE VIEW VIEW_USING_HOUR
AS
SELECT LOC_USE_HOUR, LOC_USE_DAY_OFF, LOC_USE_APPOINT_DAY_OFF, LOC_CODE
FROM LOC_USE_INFO;
--==>> View VIEW_USING_HOUR이(가) 생성되었습니다.

--○ 해당 공간에 적용된 패키지
CREATE OR REPLACE VIEW VIEW_APPLY_PACKAGE_INFO
AS
SELECT PF.LOC_CODE, P.PACKAGE_CODE, P.PACKAGE_FORM_CODE, P.PACKAGE_NAME
, P.PACKAGE_START, P.PACKAGE_END, P.PACKAGE_PRICE, AP.APPLY_DATE
, AP.APPLY_PACKAGE_CODE
, (SELECT COUNT(*) FROM BOOK_LIST B WHERE B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE)
AS COUNT
, (SELECT COUNT(*) FROM MEMBER_CANCEL_LIST MC WHERE B.BOOK_CODE = MC.BOOK_CODE)
AS MEMBER_CANCEL
, (SELECT COUNT(*) FROM HOST_CANCEL_LIST HC WHERE B.BOOK_CODE = HC.BOOK_CODE)
AS HOST_CANCEL
FROM PACKAGE P
JOIN PACKAGE_FORM PF
ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
    JOIN APPLY_PACKAGE AP
    ON P.PACKAGE_CODE = AP.PACKAGE_CODE
        LEFT JOIN BOOK_LIST B
        ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE;

--○ 시설안내
CREATE OR REPLACE VIEW VIEW_FACILITY_INFO
AS
SELECT F.FACILITY_CODE, F.LOC_BASIC_INFO_CODE, F.FACILITY_CONTENT
, L.LOC_CODE 
FROM FACILITY_INFO F
JOIN LOC_BASIC_INFO L
ON F.LOC_BASIC_INFO_CODE = L.LOC_BASIC_INFO_CODE;

--○ 주의사항 뷰
CREATE OR REPLACE VIEW VIEW_CAUTION_CONTENT
AS
SELECT C.CAUTION_CONTENT, L.LOC_CODE
FROM CAUTION C
JOIN LOC_BASIC_INFO L
ON C.LOC_BASIC_INFO_CODE = L.LOC_BASIC_INFO_CODE;


--○ QNA
CREATE OR REPLACE VIEW VIEW_QNA
AS
SELECT Q.LOC_CODE, Q.QNA_CODE, Q.MEMBER_CODE, Q.QNA_CONTENT, Q.QNA_DATE
, NVL(M.MEMBER_NICKNAME, '(알수없음)') AS MEMBER_NICKNAME
, (SELECT COUNT(*) FROM QNA_REPLY QR WHERE Q.QNA_CODE=QR.QNA_CODE) AS REPLYCOUNT
, (SELECT COUNT(*) FROM QNA_REMOVE QRM WHERE Q.QNA_CODE=QRM.QNA_CODE) AS QNAREMOVECOUNT
, (SELECT COUNT(*) FROM QNA_REPLY_REMOVE QRM WHERE QR.QNA_REPLY_CODE=QRM.QNA_REPLY_CODE) AS QNAREPLYREMOVECOUNT
, L.HOST_CODE, QR.QNA_REPLY_CONTENT, QR.QNA_REPLY_DATE, QR.QNA_REPLY_CODE
FROM QNA Q
LEFT JOIN MEMBER_PROFILE M      -- LEFT 조인 해야 탈퇴회원이름 표시가능
ON Q.MEMBER_CODE = M.MEMBER_CODE
    LEFT JOIN QNA_REPLY QR
    ON Q.QNA_CODE = QR.QNA_CODE
        LEFT JOIN LOC L
        ON Q.LOC_CODE = L.LOC_CODE
ORDER BY Q.QNA_CODE DESC;


--○ 리뷰
CREATE OR REPLACE VIEW VIEW_REVIEW
AS
SELECT R.REVIEW_CODE, NVL(M.MEMBER_NICKNAME, '(알수없음)') AS MEMBER_NICKNAME
, R.LOC_CODE, R.REVIEW_RATE, R.REVIEW_CONTENT, R.REVIEW_DATE
, RVIMG.REVIEW_IMG_URL
, (SELECT COUNT(*) FROM REVIEW_IMG RVIMG
    WHERE R.REVIEW_CODE=RVIMG.REVIEW_CODE) AS RVIMGCOUNT
, (SELECT COUNT(*) FROM REVIEW_REMOVE RVRM 
    WHERE R.REVIEW_CODE=RVRM.REVIEW_CODE) AS REVIEWREMOVECOUNT
, (SELECT COUNT(*) FROM REVIEW_REPLY RR 
    WHERE R.REVIEW_CODE=RR.REVIEW_CODE) AS REPLYCOUNT
, (SELECT COUNT(*) FROM REVIEW_REPLY_REMOVE RRM 
    WHERE RR.REVIEW_REPLY_CODE=RRM.REVIEW_REPLY_CODE) AS REPLYREMOVECOUNT
, M.MEMBER_CODE, RR.REVIEW_REPLY_CONTENT, RR.REVIEW_REPLY_DATE, L.HOST_CODE
, RR.REVIEW_REPLY_CODE
FROM REVIEW R
LEFT JOIN MEMBER_PROFILE M
ON R.MEMBER_CODE = M.MEMBER_CODE
    LEFT JOIN REVIEW_IMG RVIMG
    ON R.REVIEW_CODE = RVIMG.REVIEW_CODE
        LEFT JOIN REVIEW_REPLY RR
        ON R.REVIEW_CODE = RR.REVIEW_CODE
            JOIN LOC L
            ON R.LOC_CODE = L.LOC_CODE
ORDER BY R.REVIEW_CODE DESC;
--==>> View VIEW_REVIEW이(가) 생성되었습니다.



--○ 이용자 이용내역여부 확인(버튼 만드려고 했던거같음)
CREATE OR REPLACE VIEW VIEW_MEMBER_BOOK
AS
SELECT NVL((MEMBER_CANCEL+ HOST_CANCEL), 0) AS COUNT
, AA.MEMBER_CODE, AA.APPLY_PACKAGE_CODE, AA.LOC_CODE
, AA.APPLY_DATE
FROM
(SELECT DISTINCT B.MEMBER_CODE, A.APPLY_PACKAGE_CODE, F.LOC_CODE
, A.APPLY_DATE
, (SELECT COUNT(*) FROM HOST_CANCEL_LIST HC WHERE B.BOOK_CODE = HC.BOOK_CODE) AS HOST_CANCEL
, (SELECT COUNT(*) FROM MEMBER_CANCEL_LIST MC WHERE B.BOOK_CODE = MC.BOOK_CODE) AS MEMBER_CANCEL
FROM BOOK_LIST B
JOIN APPLY_PACKAGE A
ON B.APPLY_PACKAGE_CODE = A.APPLY_PACKAGE_CODE
    JOIN PACKAGE P
    ON A.PACKAGE_CODE = P.PACKAGE_CODE
        JOIN PACKAGE_FORM F
        ON P.PACKAGE_FORM_CODE = F.PACKAGE_FORM_CODE
            JOIN REVIEW R
            ON B.MEMBER_CODE = R.MEMBER_CODE
            WHERE A.APPLY_DATE < SYSDATE) AA;
--==>> View VIEW_MEMBER_BOOK이(가) 생성되었습니다.
--------------------------------------------------------------------------------
--※ BOOKAPPLY.JSP

--○ 사업자 정보 + 연락처 뷰
CREATE OR REPLACE VIEW VIEW_BIZ_CONTACT
AS
SELECT DISTINCT B.BIZ_NAME, B.BIZ_CEO, B.BIZ_CEO_TYPE,
B.BIZ_MAIN_TYPE, B.BIZ_SUB_TYPE, B.BIZ_LICENSE_NUMBER
, LC.LOC_EMAIL, LC.LOC_TEL, LC.LOC_MAIN_TEL
, B.BIZ_ADDR, B.LOC_CODE
FROM BIZ_INFO B
    JOIN LOC_CONTACT LC
    ON B.LOC_CODE = LC.LOC_CODE;

    
--------------------------------------------------------------------------------
--※ BOOKLIST.JSP
CREATE OR REPLACE VIEW VIEW_BOOKLIST
AS
SELECT DISTINCT B.BOOK_CODE, B.MEMBER_CODE, A.APPLY_PACKAGE_CODE, F.LOC_CODE
, TO_DATE(A.APPLY_DATE,'YYYY-MM-DD') AS APPLY_DATE, BOOK_DATE, P.PACKAGE_CODE, P.PACKAGE_NAME
, P.PACKAGE_START, P.PACKAGE_END
, NVL(P.PACKAGE_END, 0) - NVL(P.PACKAGE_START, 0) AS BOOK_HOUR
, (SELECT COUNT(*) FROM HOST_CANCEL_LIST HC WHERE B.BOOK_CODE = HC.BOOK_CODE) AS HOST_CANCEL
, (SELECT COUNT(*) FROM MEMBER_CANCEL_LIST MC WHERE B.BOOK_CODE = MC.BOOK_CODE) AS MEMBER_CANCEL
, (SELECT COUNT(*) FROM BOOK_REFUND_LIST BRF WHERE B.BOOK_CODE = BRF.BOOK_CODE) AS REFUND
, LBIF.LOC_NAME, AB.ACTUAL_BOOKER, AB.ACTUAL_BOOKER_TEL
, B.BOOK_PEOPLE, B.BOOK_REQ, P.PACKAGE_PRICE
, BZ.BIZ_NAME, BZ.BIZ_CEO, BZ.BIZ_LICENSE_NUMBER
, MC.MEMBER_CANCEL_REASON, HC.HOST_CANCEL_REASON
, MP.MEMBER_EMAIL, LBIF.LOC_ADDR, LBIF.LOC_DETAIL_ADDR
, MP.MEMBER_NICKNAME
FROM BOOK_LIST B
JOIN APPLY_PACKAGE A
ON B.APPLY_PACKAGE_CODE = A.APPLY_PACKAGE_CODE
    JOIN PACKAGE P
    ON A.PACKAGE_CODE = P.PACKAGE_CODE
        JOIN PACKAGE_FORM F
        ON P.PACKAGE_FORM_CODE = F.PACKAGE_FORM_CODE
            JOIN LOC_BASIC_INFO LBIF
            ON F.LOC_CODE = LBIF.LOC_CODE
                JOIN ACTUAL_BOOKER AB
                ON B.BOOK_CODE=AB.BOOK_CODE
                    JOIN BIZ_INFO BZ
                    ON F.LOC_CODE = BZ.LOC_CODE
                        LEFT JOIN HOST_CANCEL_LIST HC
                        ON B.BOOK_CODE = HC.BOOK_CODE
                            LEFT JOIN MEMBER_CANCEL_LIST MC
                            ON B.BOOK_CODE = MC.BOOK_CODE
                                JOIN MEMBER_PROFILE MP
                                ON B.MEMBER_CODE = MP.MEMBER_CODE;
----------------------------------------------------------------------------------------------------------------

--※ USERQNALIST.JSP
--○ 이용자 QNA LIST
CREATE OR REPLACE VIEW VIEW_USER_QNA
AS
SELECT Q.QNA_CODE, Q.LOC_CODE, Q.MEMBER_CODE
, Q.QNA_CONTENT, Q.QNA_DATE, LBIF.LOC_NAME
, (SELECT COUNT(*) AS FROM QNA_REMOVE QRM WHERE Q.QNA_CODE = QRM.QNA_CODE) AS REMOVECOUNT
FROM QNA Q
JOIN LOC L
ON Q.LOC_CODE = L.LOC_CODE
    JOIN LOC_BASIC_INFO LBIF
    ON L.LOC_CODE = LBIF.LOC_CODE
ORDER BY QNA_CODE DESC;
    
COMMIT;
select * from admin;

--※ USERREVIEWLIST.JSP
--○ 이용자 REVIEW LIST
CREATE OR REPLACE VIEW VIEW_USER_REVIEW
AS
SELECT R.REVIEW_CODE, R.MEMBER_CODE
, R.REVIEW_CONTENT, R.REVIEW_RATE, R.REVIEW_DATE, LBIF.LOC_NAME
, (SELECT COUNT(*) FROM REVIEW_REMOVE RVRM WHERE R.REVIEW_CODE = RVRM.REVIEW_CODE) AS REMOVECOUNT
FROM REVIEW R
JOIN LOC L
ON R.LOC_CODE = L.LOC_CODE
    JOIN LOC_BASIC_INFO LBIF
    ON L.LOC_CODE = LBIF.LOC_CODE
ORDER BY REVIEW_CODE DESC;
--==>> View VIEW_USER_REVIEW이(가) 생성되었습니다.

--------------------------------------------------------------------------------

--※ BOOKAPPLYNOTICE.JSP

CREATE OR REPLACE VIEW VIEW_BOOKAPPLYNOTICE
AS
SELECT A.ACTUAL_BOOKER, A.ACTUAL_BOOKER_TEL, B.BOOK_PEOPLE, B.BOOK_REQ
, AP.APPLY_DATE, P.PACKAGE_NAME, P.PACKAGE_START, P.PACKAGE_END
, P.PACKAGE_PRICE, B.BOOK_CODE, B.MEMBER_CODE
FROM BOOK_LIST B
    JOIN ACTUAL_BOOKER A
    ON B.BOOK_CODE = A.BOOK_CODE
        JOIN APPLY_PACKAGE AP
        ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
            LEFT JOIN PACKAGE P
            ON AP.PACKAGE_CODE = P.PACKAGE_CODE;
            
--------------------------------------------------------------------------------

--※ HOSTBLACKLISTMANAGER.JSP
CREATE OR REPLACE VIEW VIEW_HOSTBLACKLIST
AS
SELECT H.HOST_CODE, H.HOST_EMAIL, H.HOST_NICKNAME
, HB.HOST_BLACKLIST_REASON
, (SELECT COUNT(*) FROM HOST_BLACKLIST HB 
    WHERE H.HOST_EMAIL=HB.HOST_EMAIL) AS YESBLACK
FROM HOST_PROFILE H
    LEFT JOIN HOST_BLACKLIST HB
    ON H.HOST_EMAIL = HB.HOST_EMAIL;

--○ 호스트 신고내역 확인
CREATE OR REPLACE VIEW VIEW_HOST_REPORTDETAILS
AS
SELECT H.HOST_CODE, L.LOC_CODE, LR.LOC_REPORT_CODE
, LR.MEMBER_CODE, LR.LOC_REPORT_REASON, LR.LOC_REPORT_DATE
, LRPT.LOC_REPORT_TYPE, RPPT.REPORT_PROC_TYPE
FROM HOST H
LEFT JOIN LOC L
ON H.HOST_CODE = L.HOST_CODE
    JOIN LOC_REPORT LR
    ON L.LOC_CODE = LR.LOC_CODE
        JOIN LOC_REPORT_TYPE LRPT
        ON LR.LOC_REPORT_TYPE_CODE=LRPT.LOC_REPORT_TYPE_CODE
            LEFT JOIN LOC_REPORT_PROC LRPP
            ON LR.LOC_REPORT_CODE=LRPP.LOC_REPORT_CODE
                LEFT JOIN REPORT_PROC_TYPE RPPT
                ON LRPP.REPORT_PROC_TYPE_CODE=RPPT.REPORT_PROC_TYPE_CODE;
                
                
--------------------------------------------------------------------------------
--○ 이용자 블랙리스트 여부 확인 

CREATE OR REPLACE VIEW VIEW_MEMBERBLACKLIST
AS
SELECT M.MEMBER_CODE, M.MEMBER_EMAIL, M.MEMBER_NICKNAME
, MB.MEMBER_BLACKLIST_REASON
, (SELECT COUNT(*) FROM MEMBER_BLACKLIST MB 
    WHERE M.MEMBER_EMAIL=MB.MEMBER_EMAIL) AS YESBLACK
FROM MEMBER_PROFILE M
    LEFT JOIN MEMBER_BLACKLIST MB
    ON M.MEMBER_EMAIL = MB.MEMBER_EMAIL;
    
--○ 이용자 신고내역 뷰 
CREATE OR REPLACE VIEW VIEW_MEMBER_REPORTDETAILS
AS
SELECT B.BOOK_REPORT_CODE, B.BOOK_CODE, BR.BOOK_REPORT_TYPE
, B.BOOK_REPORT_REASON, B.BOOK_REPORT_DATE, BL.MEMBER_CODE
, RPT.REPORT_PROC_TYPE
FROM BOOK_REPORT B
JOIN BOOK_REPORT_TYPE BR
ON B.BOOK_REPORT_TYPE_CODE = BR.BOOK_REPORT_TYPE_CODE
    LEFT JOIN BOOK_REPORT_PROC BRP
    ON B.BOOK_REPORT_CODE = BRP.BOOK_REPORT_CODE
        JOIN BOOK_LIST BL
        ON B.BOOK_CODE = BL.BOOK_CODE
            LEFT JOIN REPORT_PROC_TYPE RPT
            ON BRP.REPORT_PROC_TYPE_CODE = RPT.REPORT_PROC_TYPE_CODE;
--------------------------------------------------------------------------------
--○ MESSENGER 구 DIRECT MESSAGE
--○ 예약코드로 닉네임 검색
CREATE OR REPLACE VIEW VIEW_BOOK_NICKNAME
AS
SELECT M.MSG_CODE, M.BOOK_CODE
, B.MEMBER_CODE, HP.HOST_NICKNAME
, MP.MEMBER_NICKNAME
FROM MSG M
JOIN BOOK_LIST B
ON M.BOOK_CODE = B.BOOK_CODE
    JOIN APPLY_PACKAGE AP
    ON B.APPLY_PACKAGE_CODE=AP.APPLY_PACKAGE_CODE
        JOIN PACKAGE P
        ON AP.PACKAGE_CODE = P.PACKAGE_CODE
            JOIN PACKAGE_FORM PF
            ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                JOIN LOC L
                ON PF.LOC_CODE = L.LOC_CODE
                    JOIN HOST_PROFILE HP
                    ON L.HOST_CODE = HP.HOST_CODE
                        JOIN MEMBER_PROFILE MP
                        ON B.MEMBER_CODE = MP.MEMBER_CODE;


--○ 메신저 전체 조회
CREATE OR REPLACE VIEW VIEW_MESSENGER
AS
SELECT H.MSG_CODE
, H.HOST_MSG_CONTENT AS MSG_CONTENT, H.HOST_MSG_DATE AS MSG_DATE
, M.BOOK_CODE
, H.HOST_MSG_INFO_CODE AS MSG_INFO_CODE
, AP.APPLY_DATE
, HP.HOST_CODE AS SENDER_CODE
, HP.HOST_NICKNAME AS SENDER
, (SELECT COUNT(*) FROM HOST_MSG_IMG HI
    WHERE H.HOST_MSG_INFO_CODE = HI.HOST_MSG_INFO_CODE) AS IMGCOUNT
, HI.HOST_MSG_IMG_URL AS MSG_IMG_URL
, CASE WHEN SUBSTR(HP.HOST_CODE, 0, 1) = 'H'
       THEN 0   -- 호스트면 0
       ELSE 1   -- 멤버면 1
       END AS HORM
FROM MSG M
    JOIN HOST_MSG_INFO H
    ON M.MSG_CODE = H.MSG_CODE
        JOIN BOOK_LIST B
        ON M.BOOK_CODE = B.BOOK_CODE
            JOIN APPLY_PACKAGE AP
            ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
                JOIN PACKAGE P
                ON AP.PACKAGE_CODE = P.PACKAGE_CODE
                    JOIN PACKAGE_FORM PF
                    ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                        JOIN LOC L
                        ON PF.LOC_CODE = L.LOC_CODE
                            JOIN HOST_PROFILE HP
                            ON L.HOST_CODE = HP.HOST_CODE
                                JOIN MEMBER_PROFILE M 
                                ON B.MEMBER_CODE = M.MEMBER_CODE
                                    LEFT JOIN HOST_MSG_IMG HI
                                    ON H.HOST_MSG_INFO_CODE = HI.HOST_MSG_INFO_CODE
UNION
SELECT MM.MSG_CODE
, MM.MEMBER_MSG_CONTENT, MM.MEMBER_MSG_DATE
, M.BOOK_CODE
, MM.MEMBER_MSG_INFO_CODE
, AP.APPLY_DATE
, B.MEMBER_CODE -- 송신자
, M.MEMBER_NICKNAME
, (SELECT COUNT(*) FROM MEMBER_MSG_IMG MI
    WHERE MM.MEMBER_MSG_INFO_CODE = MI.MEMBER_MSG_INFO_CODE) AS M_IMGCOUNT
, MI.MEMBER_MSG_IMG_URL
, CASE WHEN SUBSTR(B.MEMBER_CODE, 0, 1) = 'M'
       THEN 1
       ELSE 0
       END
FROM MEMBER_MSG_INFO MM
    JOIN MSG M
    ON MM.MSG_CODE = M.MSG_CODE
        JOIN BOOK_LIST B
        ON M.BOOK_CODE = B.BOOK_CODE
            JOIN APPLY_PACKAGE AP
            ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
                JOIN PACKAGE P
                ON AP.PACKAGE_CODE = P.PACKAGE_CODE
                    JOIN PACKAGE_FORM PF
                    ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                        JOIN LOC L
                        ON PF.LOC_CODE = L.LOC_CODE
                            JOIN HOST_PROFILE HP
                            ON L.HOST_CODE = HP.HOST_CODE
                                JOIN MEMBER_PROFILE M 
                                ON B.MEMBER_CODE = M.MEMBER_CODE
                                    LEFT JOIN MEMBER_MSG_IMG MI
                                    ON MM.MEMBER_MSG_INFO_CODE = MI.MEMBER_MSG_INFO_CODE
ORDER BY MSG_DATE;

--○ 메신저 본인확인
CREATE OR REPLACE VIEW VIEW_CHECKMSG
AS
SELECT M.BOOK_CODE, B.MEMBER_CODE, L.HOST_CODE
FROM MSG M
JOIN BOOK_LIST B
ON M.BOOK_CODE = B.BOOK_CODE
    JOIN APPLY_PACKAGE AP
    ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
        JOIN PACKAGE P
        ON AP.PACKAGE_CODE = P.PACKAGE_CODE
            JOIN PACKAGE_FORM PF
            ON P.PACKAGE_FORM_CODE = PF.PACKAGE_FORM_CODE
                JOIN LOC L
                ON PF.LOC_CODE = L.LOC_CODE;
