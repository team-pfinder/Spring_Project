--○ 호스트 탈퇴 : 삭제된 공간 테이블에 INSERT 
CREATE OR REPLACE PROCEDURE PRC_DEL_LOC_INSERT
(
    V_HOST_CODE IN LOC.HOST_CODE%TYPE
)
IS
    V_LOC_CODE LOC_REMOVE.LOC_CODE%TYPE;
    
    CURSOR C1 
    IS
        SELECT LOC_CODE
        FROM LOC 
        WHERE HOST_CODE = V_HOST_CODE;
BEGIN
    OPEN C1;
    
    LOOP
        FETCH C1 INTO V_LOC_CODE;
        EXIT WHEN C1%NOTFOUND;
    
    -- 해당 공간코드만큼 LOC_REMOVE 테이블에 INSERT 
        INSERT INTO LOC_REMOVE(LOC_REMOVE_CODE, LOC_CODE, LOC_REMOVE_DATE)
        VALUES(F_CODE('LRM', LRM_SEQ.NEXTVAL), V_LOC_CODE, SYSDATE);
    
    END LOOP;
    
    CLOSE C1;
    COMMIT;
    
END PRC_DEL_LOC_INSERT;

--○ 호스트 탈퇴 : 마일리지 잔액 확인
CREATE OR REPLACE PROCEDURE PRC_HOST_MILEAGE
(
    V_HOST_CODE IN LOC.HOST_CODE%TYPE
,   V_CHANGE OUT PACKAGE.PACKAGE_PRICE%TYPE
)
IS  
    V_MILEAGE PACKAGE.PACKAGE_PRICE%TYPE;
BEGIN
    SELECT
    (
        SELECT NVL(SUM(P.PACKAGE_PRICE), 0)
        FROM CAL C 
        JOIN BOOK_LIST B
        ON C.BOOK_CODE = B.BOOK_CODE
        JOIN APPLY_PACKAGE AP
        ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
        JOIN PACKAGE P
        ON AP.PACKAGE_CODE = P.PACKAGE_CODE
        WHERE HOST_CODE = V_HOST_CODE
    )
    -
    (
        SELECT NVL(SUM(HOST_EXCHANGE_AMOUNT), 0)
        FROM HOST_EXCHANGE_LIST
        WHERE HOST_CODE=V_HOST_CODE
    ) INTO V_MILEAGE
    FROM DUAL;
    
    V_CHANGE := V_MILEAGE;
END PRC_HOST_MILEAGE;



--○ 이용자 탈퇴 : 마일리지 잔액 확인
CREATE OR REPLACE PROCEDURE PRC_MEMBER_MILEAGE
(
    V_MEMBER_CODE IN BOOK_LIST.MEMBER_CODE%TYPE
,   V_CHANGE OUT PACKAGE.PACKAGE_PRICE%TYPE
)
IS  
    V_MILEAGE PACKAGE.PACKAGE_PRICE%TYPE;
BEGIN
    SELECT 
    (
        SELECT NVL(SUM(LR.LOAD_AMOUNT), 0)
        FROM LOAD_PROC LP
        JOIN LOAD_REG LR
        ON LP.LOAD_REG_CODE = LR.LOAD_REG_CODE
        WHERE LP.LOAD_TYPE_CODE='LT000001' AND LR.MEMBER_CODE = V_MEMBER_CODE
    )
    -
    (
        SELECT NVL(SUM(P.PACKAGE_PRICE), 0)
        FROM BOOK_PAY_LIST BP
        JOIN BOOK_LIST B
        ON BP.BOOK_CODE = B.BOOK_CODE
        JOIN APPLY_PACKAGE AP
        ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
        JOIN PACKAGE P 
        ON AP.PACKAGE_CODE = P.PACKAGE_CODE
        WHERE B.MEMBER_CODE = V_MEMBER_CODE
    )
    +                
    (
        SELECT NVL(SUM(P.PACKAGE_PRICE), 0)
        FROM HOST_CANCEL_LIST HC
        JOIN BOOK_REFUND_LIST BR
        ON HC.BOOK_CODE = BR.BOOK_CODE
            JOIN BOOK_LIST B
            ON BR.BOOK_CODE = B.BOOK_CODE
                JOIN APPLY_PACKAGE AP
                ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
                    JOIN PACKAGE P
                    ON AP.PACKAGE_CODE = P.PACKAGE_CODE
                    WHERE B.MEMBER_CODE = V_MEMBER_CODE
    )
    +
    (
        SELECT NVL(SUM
        (CASE WHEN (TO_DATE(AP.APPLY_DATE, 'YYYY-MM-DD') - TO_DATE(MC.MEMBER_CANCEL_DATE, 'YYYY-MM-DD')) < 7 
              THEN TRUNC(P.PACKAGE_PRICE * 0.5, -1) 
              ELSE TRUNC(P.PACKAGE_PRICE * 1, -1)
              END), 0)
        FROM MEMBER_CANCEL_LIST MC
        JOIN BOOK_REFUND_LIST BR
        ON MC.BOOK_CODE = BR.BOOK_CODE
            JOIN BOOK_LIST B
            ON BR.BOOK_CODE = B.BOOK_CODE
                JOIN APPLY_PACKAGE AP
                ON B.APPLY_PACKAGE_CODE = AP.APPLY_PACKAGE_CODE
                    JOIN PACKAGE P
                    ON AP.PACKAGE_CODE = P.PACKAGE_CODE
                    WHERE B.MEMBER_CODE = V_MEMBER_CODE
    )
    -
    (
        SELECT NVL(SUM(MEMBER_EXCHANGE_AMOUNT), 0)
        FROM MEMBER_EXCHANGE_LIST
        WHERE MEMBER_CODE = V_MEMBER_CODE
    ) 
    INTO V_MILEAGE
    FROM DUAL;

    V_CHANGE := V_MILEAGE;
    
END PRC_MEMBER_MILEAGE;
--------------------------------------------------------------------------------
--○ 예약 신청 : 예약코드 받아 예약자 테이블, 결제, 메세지 테이블에 insert
CREATE OR REPLACE PROCEDURE PRC_BOOK_CODE_INSERT
(
    V_MEMBER_CODE IN BOOK_LIST.MEMBER_CODE%TYPE
,   V_ACTUAL_BOOKER IN ACTUAL_BOOKER.ACTUAL_BOOKER%TYPE
,   V_ACTUAL_BOOKER_TEL IN ACTUAL_BOOKER.ACTUAL_BOOKER_TEL%TYPE
)
IS
    V_BOOK_CODE BOOK_LIST.BOOK_CODE%TYPE;

BEGIN
    -- 예약번호 확인
    SELECT BOOK_CODE INTO V_BOOK_CODE 
    FROM
    (SELECT BOOK_CODE FROM BOOK_LIST WHERE MEMBER_CODE=V_MEMBER_CODE
    ORDER BY BOOK_CODE DESC)
    WHERE ROWNUM=1;
    
    -- 실예약자 테이블에 추가
    INSERT INTO ACTUAL_BOOKER (ACTUAL_BOOKER_CODE, BOOK_CODE, ACTUAL_BOOKER
    , ACTUAL_BOOKER_TEL)
    VALUES(F_CODE('AB', AB_SEQ.NEXTVAL), V_BOOK_CODE, V_ACTUAL_BOOKER
    , V_ACTUAL_BOOKER_TEL);
    
    -- 메시지 테이블에 추가
    INSERT INTO MSG(MSG_CODE, BOOK_CODE)
    VALUES(F_CODE('MSG', MSG_SEQ.NEXTVAL), V_BOOK_CODE);
    
    -- 결제내역 테이블에 추가
    INSERT INTO BOOK_PAY_LIST(BOOK_PAY_CODE, BOOK_CODE, BOOK_PAY_DATE)
    VALUES(F_CODE('BP', BP_SEQ.NEXTVAL), V_BOOK_CODE, SYSDATE);

    COMMIT;
    
END PRC_BOOK_CODE_INSERT;


--------------------------------------------------------------------------------
--○ 메시지에서 이미지 전송(이용자)
CREATE OR REPLACE PROCEDURE PRC_M_MSG_IMG
(
    V_BOOK_CODE IN BOOK_LIST.BOOK_CODE%TYPE
,   V_MSG_IMG_URL IN MEMBER_MSG_IMG.MEMBER_MSG_IMG_URL%TYPE
)
IS
    V_MSG_CODE      MEMBER_MSG_INFO.MSG_CODE%TYPE;
    V_MSG_INFO_CODE MEMBER_MSG_INFO.MEMBER_MSG_INFO_CODE%TYPE;
BEGIN
    -- 메신저 코드 검색
    SELECT MSG_CODE INTO V_MSG_CODE
    FROM MSG
    WHERE BOOK_CODE=V_BOOK_CODE;
    
    -- 텍스트가 NULL로 된 메시지 보내기
    INSERT INTO MEMBER_MSG_INFO(MEMBER_MSG_INFO_CODE, MSG_CODE, MEMBER_MSG_DATE)
    VALUES(F_CODE('MMIF', MMIF_SEQ.NEXTVAL), V_MSG_CODE, SYSDATE);

    -- 방금 보낸 메시지 번호 얻기
    -- ROWNUM 시간순으로 내림차순 정렬하고 첫번째값
    SELECT MSG_INFO_CODE INTO V_MSG_INFO_CODE
    FROM
    (SELECT A.MSG_INFO_CODE, A.BOOK_CODE
    FROM VIEW_MESSENGER A
    ORDER BY A.MSG_DATE DESC)
    WHERE ROWNUM = 1 AND BOOK_CODE=V_BOOK_CODE;

    -- 이미지 추가
    INSERT INTO MEMBER_MSG_IMG(MEMBER_MSG_IMG_CODE, MEMBER_MSG_INFO_CODE, MEMBER_MSG_IMG_URL)
    VALUES(F_CODE('MMIM', MMIF_SEQ.NEXTVAL), V_MSG_INFO_CODE, V_MSG_IMG_URL);
    
    COMMIT;
    
END PRC_M_MSG_IMG;

--------------------------------------------------------------------------------
--○ 메시지에서 이미지 전송(호스트)
CREATE OR REPLACE PROCEDURE PRC_H_MSG_IMG
(
    V_BOOK_CODE IN BOOK_LIST.BOOK_CODE%TYPE
,   V_MSG_IMG_URL IN HOST_MSG_IMG.HOST_MSG_IMG_URL%TYPE
)
IS
    V_MSG_CODE      HOST_MSG_INFO.MSG_CODE%TYPE;
    V_MSG_INFO_CODE HOST_MSG_INFO.HOST_MSG_INFO_CODE%TYPE;
BEGIN
    -- 메신저 코드 검색
    SELECT MSG_CODE INTO V_MSG_CODE
    FROM MSG
    WHERE BOOK_CODE=V_BOOK_CODE;
    
    -- 텍스트가 NULL로 된 메시지 보내기
    INSERT INTO HOST_MSG_INFO(HOST_MSG_INFO_CODE, MSG_CODE, HOST_MSG_DATE)
    VALUES(F_CODE('HMIF', HMIF_SEQ.NEXTVAL), V_MSG_CODE, SYSDATE);
    
    -- 방금 보낸 메시지 번호 얻기
    -- ROWNUM 시간순으로 내림차순 정렬하고 첫번째값
    SELECT MSG_INFO_CODE INTO V_MSG_INFO_CODE
    FROM
    (SELECT A.MSG_INFO_CODE, A.BOOK_CODE
    FROM VIEW_MESSENGER A
    ORDER BY A.MSG_DATE DESC)
    WHERE ROWNUM = 1 AND BOOK_CODE=V_BOOK_CODE;

    -- 이미지 추가
    INSERT INTO HOST_MSG_IMG(HOST_MSG_IMG_CODE, HOST_MSG_INFO_CODE, HOST_MSG_IMG_URL)
    VALUES(F_CODE('HMIM', MMIF_SEQ.NEXTVAL), V_MSG_INFO_CODE, V_MSG_IMG_URL);
    
    COMMIT;
    
END PRC_H_MSG_IMG;


--------------------------------------------------------------------------------

--○ 리뷰에서 이미지 전송
CREATE OR REPLACE PROCEDURE PRC_REVIEW_IMG
(
    V_LOC_CODE          IN REVIEW.LOC_CODE%TYPE
,   V_MEMBER_CODE       IN REVIEW.MEMBER_CODE%TYPE
,   V_REVIEW_RATE       IN REVIEW.REVIEW_RATE%TYPE
,   V_REVIEW_CONTENT    IN REVIEW.REVIEW_CONTENT%TYPE
,   V_REVIEW_IMG_URL    IN REVIEW_IMG.REVIEW_IMG_URL%TYPE
)
IS
    V_REVIEW_CODE       REVIEW.REVIEW_CODE%TYPE;
BEGIN
    -- 리뷰 텍스트들만 먼저 보내기 
    INSERT INTO REVIEW(REVIEW_CODE, LOC_CODE, MEMBER_CODE, REVIEW_RATE, REVIEW_CONTENT
    , REVIEW_DATE)
    VALUES(F_CODE('RV', RV_SEQ.NEXTVAL), V_LOC_CODE
    , V_MEMBER_CODE, V_REVIEW_RATE, V_REVIEW_CONTENT, SYSDATE);
    
    -- 방금 보낸 리뷰 번호 얻기
    SELECT REVIEW_CODE INTO V_REVIEW_CODE
    FROM
    (SELECT A.REVIEW_CODE, A.MEMBER_CODE
    FROM REVIEW A
    ORDER BY A.REVIEW_DATE DESC)
    WHERE ROWNUM = 1 AND MEMBER_CODE=V_MEMBER_CODE;

    -- 이미지 추가
    INSERT INTO REVIEW_IMG(REVIEW_IMG_CODE, REVIEW_CODE, REVIEW_IMG_URL)
    VALUES(F_CODE('RVIMG', RVIMG_SEQ.NEXTVAL), V_REVIEW_CODE, V_REVIEW_IMG_URL);

    COMMIT;
    
END PRC_REVIEW_IMG;