-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- HOST Table Create SQL
CREATE TABLE HOST
(
    HOST_CODE            VARCHAR2(15)    , 
    HOST_SIGN_UP_DATE    DATE            , 
    CONSTRAINT HOST_PK PRIMARY KEY (HOST_CODE)
)
;

COMMENT ON TABLE HOST IS '회원(호스트) H'
;

COMMENT ON COLUMN HOST.HOST_CODE IS '회원코드(호스트)'
;

COMMENT ON COLUMN HOST.HOST_SIGN_UP_DATE IS '가입일자'
;


-- HOST Table Create SQL
CREATE TABLE LOC
(
    LOC_CODE        VARCHAR2(15)    , 
    HOST_CODE       VARCHAR2(15)    , 
    LOC_REG_DATE    DATE            , 
    CONSTRAINT LOC_PK PRIMARY KEY (LOC_CODE)
)
;

COMMENT ON TABLE LOC IS '공간 L'
;

COMMENT ON COLUMN LOC.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN LOC.HOST_CODE IS '회원코드(호스트)'
;

COMMENT ON COLUMN LOC.LOC_REG_DATE IS '공간등록일자'
;

ALTER TABLE LOC
    ADD CONSTRAINT FK_LOC_HOST_CODE_HOST_HOST_COD FOREIGN KEY (HOST_CODE)
        REFERENCES HOST (HOST_CODE)
;


-- HOST Table Create SQL
CREATE TABLE MEMBER
(
    MEMBER_CODE            VARCHAR2(15)    , 
    MEMBER_SIGN_UP_DATE    DATE            , 
    CONSTRAINT MEMBER_PK PRIMARY KEY (MEMBER_CODE)
)
;

COMMENT ON TABLE MEMBER IS '회원(이용자) M'
;

COMMENT ON COLUMN MEMBER.MEMBER_CODE IS '회원코드(이용자)'
;

COMMENT ON COLUMN MEMBER.MEMBER_SIGN_UP_DATE IS '가입일자'
;


-- HOST Table Create SQL
CREATE TABLE PACKAGE_FORM
(
    PACKAGE_FORM_CODE    VARCHAR2(15)    , 
    LOC_CODE             VARCHAR2(15)    , 
    CONSTRAINT PACKAGE_FORM_PK PRIMARY KEY (PACKAGE_FORM_CODE)
)
;

COMMENT ON TABLE PACKAGE_FORM IS '패키지 양식 PF'
;

COMMENT ON COLUMN PACKAGE_FORM.PACKAGE_FORM_CODE IS '패키지양식코드'
;

COMMENT ON COLUMN PACKAGE_FORM.LOC_CODE IS '공간코드'
;

ALTER TABLE PACKAGE_FORM
    ADD CONSTRAINT FK_PACKAGE_FORM_LOC_CODE_LOC_L FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE PACKAGE
(
    PACKAGE_CODE         VARCHAR2(15)    , 
    PACKAGE_FORM_CODE    VARCHAR2(15)    , 
    PACKAGE_NAME         VARCHAR2(180)   , 
    PACKAGE_START        NUMBER(2)       , 
    PACKAGE_END          NUMBER(2)       , 
    PACKAGE_PRICE        NUMBER(14)       , 
    CONSTRAINT PACKAGE_PK PRIMARY KEY (PACKAGE_CODE)
)
;


COMMENT ON TABLE PACKAGE IS '패키지 P'
;

COMMENT ON COLUMN PACKAGE.PACKAGE_CODE IS '패키지코드'
;

COMMENT ON COLUMN PACKAGE.PACKAGE_FORM_CODE IS '패키지양식코드'
;

COMMENT ON COLUMN PACKAGE.PACKAGE_NAME IS '패키지명'
;

COMMENT ON COLUMN PACKAGE.PACKAGE_START IS '패키지시작시간'
;

COMMENT ON COLUMN PACKAGE.PACKAGE_END IS '패키지종료시간'
;

COMMENT ON COLUMN PACKAGE.PACKAGE_PRICE IS '패키지가격'
;

ALTER TABLE PACKAGE
    ADD CONSTRAINT FK_PACKAGE_PACKAGE_FORM_CODE_P FOREIGN KEY (PACKAGE_FORM_CODE)
        REFERENCES PACKAGE_FORM (PACKAGE_FORM_CODE)
;


-- HOST Table Create SQL
CREATE TABLE APPLY_PACKAGE
(
    APPLY_PACKAGE_CODE    VARCHAR2(15)    , 
    PACKAGE_CODE          VARCHAR2(15)    , 
    APPLY_DATE            DATE            , 
    CONSTRAINT APPLY_PACKAGE_PK PRIMARY KEY (APPLY_PACKAGE_CODE)
)
;

COMMENT ON TABLE APPLY_PACKAGE IS '적용된 패키지 AP'
;

COMMENT ON COLUMN APPLY_PACKAGE.APPLY_PACKAGE_CODE IS '적용된패키지코드'
;

COMMENT ON COLUMN APPLY_PACKAGE.PACKAGE_CODE IS '패키지코드'
;

COMMENT ON COLUMN APPLY_PACKAGE.APPLY_DATE IS '적용일자'
;

ALTER TABLE APPLY_PACKAGE
    ADD CONSTRAINT FK_APPLY_PACKAGE_PACKAGE_CODE_ FOREIGN KEY (PACKAGE_CODE)
        REFERENCES PACKAGE (PACKAGE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE BOOK_LIST
(
    BOOK_CODE             VARCHAR2(15)     , 
    MEMBER_CODE           VARCHAR2(15)     , 
    APPLY_PACKAGE_CODE    VARCHAR2(15)     , 
    BOOK_PEOPLE           NUMBER(2)        , 
    BOOK_DATE             DATE             , 
    BOOK_REQ              VARCHAR2(300)    , 
    CONSTRAINT BOOK_LIST_PK PRIMARY KEY (BOOK_CODE)
)
;

COMMENT ON TABLE BOOK_LIST IS '예약내역 BC'
;

COMMENT ON COLUMN BOOK_LIST.BOOK_CODE IS '예약코드'
;

COMMENT ON COLUMN BOOK_LIST.MEMBER_CODE IS '회원코드(이용자)'
;

COMMENT ON COLUMN BOOK_LIST.APPLY_PACKAGE_CODE IS '적용된 패키지 코드'
;

COMMENT ON COLUMN BOOK_LIST.BOOK_PEOPLE IS '인원수'
;

COMMENT ON COLUMN BOOK_LIST.BOOK_DATE IS '예약 신청시간'
;

COMMENT ON COLUMN BOOK_LIST.BOOK_REQ IS '요청사항'
;

ALTER TABLE BOOK_LIST
    ADD CONSTRAINT FK_BOOK_LIST_MEMBER_CODE_MEMBE FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;

ALTER TABLE BOOK_LIST
    ADD CONSTRAINT FK_BOOK_LIST_APPLY_PACKAGE_COD FOREIGN KEY (APPLY_PACKAGE_CODE)
        REFERENCES APPLY_PACKAGE (APPLY_PACKAGE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_TYPE
(
    LOC_TYPE_CODE    VARCHAR2(15)    , 
    LOC_TYPE         VARCHAR2(30)    , 
    CONSTRAINT LOC_TYPE_PK PRIMARY KEY (LOC_TYPE_CODE)
)
;

COMMENT ON TABLE LOC_TYPE IS '공간분류 LOCT'
;

COMMENT ON COLUMN LOC_TYPE.LOC_TYPE_CODE IS '공간분류코드'
;

COMMENT ON COLUMN LOC_TYPE.LOC_TYPE IS '공간 유형'
;


-- HOST Table Create SQL
CREATE TABLE LOC_BASIC_INFO
(
    LOC_BASIC_INFO_CODE    VARCHAR2(15)      , 
    LOC_CODE               VARCHAR2(15)      , 
    LOC_TYPE_CODE          VARCHAR2(15)      , 
    LOC_NAME               VARCHAR2(180)     , 
    LOC_SHORT_INTRO        VARCHAR2(300)     , 
    LOC_INTRO              VARCHAR2(4000)    , 
    LOC_ADDR               VARCHAR2(200)     , 
    LOC_DETAIL_ADDR        VARCHAR2(180)      , 
    CONSTRAINT LOC_BASIC_INFO_PK PRIMARY KEY (LOC_BASIC_INFO_CODE)
)
;

COMMENT ON TABLE LOC_BASIC_INFO IS '기본정보 LBIF'
;

COMMENT ON COLUMN LOC_BASIC_INFO.LOC_BASIC_INFO_CODE IS '기본정보코드'
;

COMMENT ON COLUMN LOC_BASIC_INFO.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN LOC_BASIC_INFO.LOC_TYPE_CODE IS '공간분류코드'
;

COMMENT ON COLUMN LOC_BASIC_INFO.LOC_NAME IS '공간명'
;

COMMENT ON COLUMN LOC_BASIC_INFO.LOC_SHORT_INTRO IS '공간한줄소개'
;

COMMENT ON COLUMN LOC_BASIC_INFO.LOC_INTRO IS '공간소개'
;

COMMENT ON COLUMN LOC_BASIC_INFO.LOC_ADDR IS '주소'
;

COMMENT ON COLUMN LOC_BASIC_INFO.LOC_DETAIL_ADDR IS '상세주소'
;

ALTER TABLE LOC_BASIC_INFO
    ADD CONSTRAINT FK_LOC_BASIC_INFO_LOC_CODE_LOC FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;

ALTER TABLE LOC_BASIC_INFO
    ADD CONSTRAINT FK_LOC_BASIC_INFO_LOC_TYPE_COD FOREIGN KEY (LOC_TYPE_CODE)
        REFERENCES LOC_TYPE (LOC_TYPE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE REVIEW
(
    REVIEW_CODE       VARCHAR2(15)      , 
    LOC_CODE          VARCHAR2(15)      , 
    MEMBER_CODE       VARCHAR2(15)      , 
    REVIEW_RATE       NUMBER(1)         , 
    REVIEW_CONTENT    VARCHAR2(3000)    , 
    REVIEW_DATE       DATE              , 
    CONSTRAINT REVIEW_PK PRIMARY KEY (REVIEW_CODE)
)
;

COMMENT ON TABLE REVIEW IS '리뷰(이용자) RV'
;

COMMENT ON COLUMN REVIEW.REVIEW_CODE IS '리뷰코드'
;

COMMENT ON COLUMN REVIEW.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN REVIEW.MEMBER_CODE IS '회원코드'
;

COMMENT ON COLUMN REVIEW.REVIEW_RATE IS '평점'
;

COMMENT ON COLUMN REVIEW.REVIEW_CONTENT IS '리뷰내용'
;

COMMENT ON COLUMN REVIEW.REVIEW_DATE IS '리뷰 작성 일자'
;

ALTER TABLE REVIEW
    ADD CONSTRAINT FK_REVIEW_MEMBER_CODE_MEMBER_M FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;

ALTER TABLE REVIEW
    ADD CONSTRAINT FK_REVIEW_LOC_CODE_LOC_LOC_COD FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE IMPORTANT_NOTICE
(
    IMPORTANT_NOTICE_CODE    VARCHAR2(15)    , 
    IMPORTANT_NOTICE         VARCHAR2(20)    , 
    CONSTRAINT IMPORTANT_NOTICE_PK PRIMARY KEY (IMPORTANT_NOTICE_CODE)
)
;

COMMENT ON TABLE IMPORTANT_NOTICE IS '중요공지 분류 IN'
;

COMMENT ON COLUMN IMPORTANT_NOTICE.IMPORTANT_NOTICE_CODE IS '중요분류코드'
;

COMMENT ON COLUMN IMPORTANT_NOTICE.IMPORTANT_NOTICE IS '공지 유형'
;


-- HOST Table Create SQL
CREATE TABLE QNA
(
    QNA_CODE       VARCHAR2(15)      , 
    LOC_CODE       VARCHAR2(15)      , 
    MEMBER_CODE    VARCHAR2(15)      , 
    QNA_CONTENT    VARCHAR2(3000)    , 
    QNA_DATE       DATE              , 
    CONSTRAINT QNA_PK PRIMARY KEY (QNA_CODE)
)
;

COMMENT ON TABLE QNA IS 'Q_AND_A(이용자) Q'
;

COMMENT ON COLUMN QNA.QNA_CODE IS 'Q_AND_A코드'
;

COMMENT ON COLUMN QNA.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN QNA.MEMBER_CODE IS '회원코드'
;

COMMENT ON COLUMN QNA.QNA_CONTENT IS '내용'
;

COMMENT ON COLUMN QNA.QNA_DATE IS 'Q_AND_A 작성일자'
;

ALTER TABLE QNA
    ADD CONSTRAINT FK_QNA_MEMBER_CODE_MEMBER_MEMB FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;

ALTER TABLE QNA
    ADD CONSTRAINT FK_QNA_LOC_CODE_LOC_LOC_CODE FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_REPORT_TYPE
(
    LOC_REPORT_TYPE_CODE    VARCHAR2(15)    , 
    LOC_REPORT_TYPE         VARCHAR2(50)    , 
    CONSTRAINT LOC_REPORT_TYPE_PK PRIMARY KEY (LOC_REPORT_TYPE_CODE)
)
;

COMMENT ON TABLE LOC_REPORT_TYPE IS '신고유형분류(공간) LRPT'
;

COMMENT ON COLUMN LOC_REPORT_TYPE.LOC_REPORT_TYPE_CODE IS '신고유형분류코드'
;

COMMENT ON COLUMN LOC_REPORT_TYPE.LOC_REPORT_TYPE IS '신고 유형'
;


-- HOST Table Create SQL
CREATE TABLE BOOK_REPORT_TYPE
(
    BOOK_REPORT_TYPE_CODE    VARCHAR2(15)    , 
    BOOK_REPORT_TYPE         VARCHAR2(50)    , 
    CONSTRAINT BOOK_REPORT_TYPE_PK PRIMARY KEY (BOOK_REPORT_TYPE_CODE)
)
;

COMMENT ON TABLE BOOK_REPORT_TYPE IS '신고유형분류(예약내역) BRPT'
;

COMMENT ON COLUMN BOOK_REPORT_TYPE.BOOK_REPORT_TYPE_CODE IS '신고유형분류코드'
;

COMMENT ON COLUMN BOOK_REPORT_TYPE.BOOK_REPORT_TYPE IS '신고 유형'
;


-- HOST Table Create SQL
CREATE TABLE MEMBER_BANK_INFO
(
    MEMBER_BANK_NUMBER    VARCHAR2(20)    , 
    MEMBER_CODE           VARCHAR2(15)    , 
    MEMBER_BANK           VARCHAR2(40)    , 
    MEMBER_BANK_HOLDER    VARCHAR2(30)    , 
    CONSTRAINT MEMBER_BANK_INFO_PK PRIMARY KEY (MEMBER_BANK_NUMBER)
)
;

COMMENT ON TABLE MEMBER_BANK_INFO IS '계좌정보(이용자)'
;

COMMENT ON COLUMN MEMBER_BANK_INFO.MEMBER_BANK_NUMBER IS '계좌번호'
;

COMMENT ON COLUMN MEMBER_BANK_INFO.MEMBER_CODE IS '회원코드(이용자)'
;

COMMENT ON COLUMN MEMBER_BANK_INFO.MEMBER_BANK IS '은행명'
;

COMMENT ON COLUMN MEMBER_BANK_INFO.MEMBER_BANK_HOLDER IS '예금주'
;

ALTER TABLE MEMBER_BANK_INFO
    ADD CONSTRAINT FK_MEMBER_BANK_INFO_MEMBER_COD FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOAD_REG
(
    LOAD_REG_CODE    VARCHAR2(15)    , 
    MEMBER_CODE      VARCHAR2(15)    , 
    LOAD_AMOUNT      NUMBER(7)       , 
    LOAD_REG_DATE    DATE            , 
    CONSTRAINT LOAD_REG_PK PRIMARY KEY (LOAD_REG_CODE)
)
;

COMMENT ON TABLE LOAD_REG IS '마일리지 충전신청 내역(이용자) LR'
;

COMMENT ON COLUMN LOAD_REG.LOAD_REG_CODE IS '충전신청코드'
;

COMMENT ON COLUMN LOAD_REG.MEMBER_CODE IS '회원코드'
;

COMMENT ON COLUMN LOAD_REG.LOAD_AMOUNT IS '충전신청액수'
;

COMMENT ON COLUMN LOAD_REG.LOAD_REG_DATE IS '충전신청일자'
;

ALTER TABLE LOAD_REG
    ADD CONSTRAINT FK_LOAD_REG_MEMBER_CODE_MEMBER FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;


-- HOST Table Create SQL
CREATE TABLE NOTICE
(
    NOTICE_CODE              VARCHAR2(15)      , 
    IMPORTANT_NOTICE_CODE    VARCHAR2(15)      , 
    NOTICE_TITLE             VARCHAR2(120)      , 
    NOTICE_CONTENT           VARCHAR2(3000)    , 
    NOTICE_DATE              DATE              , 
    CONSTRAINT NOTICE_PK PRIMARY KEY (NOTICE_CODE)
)
;


COMMENT ON TABLE NOTICE IS '공지사항 N'
;

COMMENT ON COLUMN NOTICE.NOTICE_CODE IS '공지사항 코드'
;

COMMENT ON COLUMN NOTICE.IMPORTANT_NOTICE_CODE IS '중요분류코드'
;

COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '제목'
;

COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '내용'
;

COMMENT ON COLUMN NOTICE.NOTICE_DATE IS '작성일자'
;

ALTER TABLE NOTICE
    ADD CONSTRAINT FK_NOTICE_IMPORTANT_NOTICE_COD FOREIGN KEY (IMPORTANT_NOTICE_CODE)
        REFERENCES IMPORTANT_NOTICE (IMPORTANT_NOTICE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE MSG
(
    MSG_CODE     VARCHAR2(15)    , 
    BOOK_CODE    VARCHAR2(15)    , 
    CONSTRAINT MSG_PK PRIMARY KEY (MSG_CODE)
)
;

COMMENT ON TABLE MSG IS '메신저 MSG'
;

COMMENT ON COLUMN MSG.MSG_CODE IS '메신저코드'
;

COMMENT ON COLUMN MSG.BOOK_CODE IS '예약코드'
;

ALTER TABLE MSG
    ADD CONSTRAINT FK_MSG_BOOK_CODE_BOOK_LIST_BOO FOREIGN KEY (BOOK_CODE)
        REFERENCES BOOK_LIST (BOOK_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_DETAIL_INFO
(
    LOC_DETAIL_INFO_CODE    VARCHAR2(15)    , 
    LOC_CODE                VARCHAR2(15)    , 
    MIN_PEOPLE              NUMBER(2)       , 
    MAX_PEOPLE              NUMBER(2)       , 
    CONSTRAINT LOC_DETAIL_INFO_PK PRIMARY KEY (LOC_DETAIL_INFO_CODE)
)
;

COMMENT ON TABLE LOC_DETAIL_INFO IS '상세정보 LDIF'
;

COMMENT ON COLUMN LOC_DETAIL_INFO.LOC_DETAIL_INFO_CODE IS '상세정보코드'
;

COMMENT ON COLUMN LOC_DETAIL_INFO.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN LOC_DETAIL_INFO.MIN_PEOPLE IS '최소 수용인원'
;

COMMENT ON COLUMN LOC_DETAIL_INFO.MAX_PEOPLE IS '최대 수용인원'
;

ALTER TABLE LOC_DETAIL_INFO
    ADD CONSTRAINT FK_LOC_DETAIL_INFO_LOC_CODE_LO FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_REPORT
(
    LOC_REPORT_CODE         VARCHAR2(15)     , 
    LOC_CODE                VARCHAR2(15)     , 
    LOC_REPORT_TYPE_CODE    VARCHAR2(15)     , 
    MEMBER_CODE             VARCHAR2(15)     , 
    LOC_REPORT_REASON       VARCHAR2(300)    , 
    LOC_REPORT_DATE         DATE             , 
    CONSTRAINT LOC_REPORT_PK PRIMARY KEY (LOC_REPORT_CODE)
)
;

COMMENT ON TABLE LOC_REPORT IS '신고접수(이용자)(공간게시물) LRP'
;

COMMENT ON COLUMN LOC_REPORT.LOC_REPORT_CODE IS '신고접수코드'
;

COMMENT ON COLUMN LOC_REPORT.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN LOC_REPORT.LOC_REPORT_TYPE_CODE IS '신고유형분류코드'
;

COMMENT ON COLUMN LOC_REPORT.MEMBER_CODE IS '회원코드(신고자)(이용자)'
;

COMMENT ON COLUMN LOC_REPORT.LOC_REPORT_REASON IS '신고사유'
;

COMMENT ON COLUMN LOC_REPORT.LOC_REPORT_DATE IS '신고일자'
;

ALTER TABLE LOC_REPORT
    ADD CONSTRAINT FK_LOC_REPORT_LOC_REPORT_TYPE_ FOREIGN KEY (LOC_REPORT_TYPE_CODE)
        REFERENCES LOC_REPORT_TYPE (LOC_REPORT_TYPE_CODE)
;

ALTER TABLE LOC_REPORT
    ADD CONSTRAINT FK_LOC_REPORT_MEMBER_CODE_MEMB FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;

ALTER TABLE LOC_REPORT
    ADD CONSTRAINT FK_LOC_REPORT_LOC_CODE_LOC_LOC FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE REPORT_PROC_TYPE
(
    REPORT_PROC_TYPE_CODE    VARCHAR2(15)    , 
    REPORT_PROC_TYPE         VARCHAR2(20)    , 
    CONSTRAINT REPORT_PROC_TYPE_PK PRIMARY KEY (REPORT_PROC_TYPE_CODE)
)
;

COMMENT ON TABLE REPORT_PROC_TYPE IS '신고처리분류 RPPT'
;

COMMENT ON COLUMN REPORT_PROC_TYPE.REPORT_PROC_TYPE_CODE IS '신고처리분류코드'
;

COMMENT ON COLUMN REPORT_PROC_TYPE.REPORT_PROC_TYPE IS '처리 유형'
;


-- HOST Table Create SQL
CREATE TABLE BOOK_REPORT
(
    BOOK_REPORT_CODE         VARCHAR2(15)     , 
    BOOK_CODE                VARCHAR2(15)     , 
    BOOK_REPORT_TYPE_CODE    VARCHAR2(15)     , 
    HOST_CODE                VARCHAR2(15)     , 
    BOOK_REPORT_REASON       VARCHAR2(300)    , 
    BOOK_REPORT_DATE         DATE             , 
    CONSTRAINT BOOK_REPORT_PK PRIMARY KEY (BOOK_REPORT_CODE)
)
;

COMMENT ON TABLE BOOK_REPORT IS '신고접수(이용자)(예약내역) BRP'
;

COMMENT ON COLUMN BOOK_REPORT.BOOK_REPORT_CODE IS '신고접수코드'
;

COMMENT ON COLUMN BOOK_REPORT.BOOK_CODE IS '예약코드'
;

COMMENT ON COLUMN BOOK_REPORT.BOOK_REPORT_TYPE_CODE IS '신고유형분류코드'
;

COMMENT ON COLUMN BOOK_REPORT.HOST_CODE IS '회원코드(신고자)(호스트)'
;

COMMENT ON COLUMN BOOK_REPORT.BOOK_REPORT_REASON IS '신고사유'
;

COMMENT ON COLUMN BOOK_REPORT.BOOK_REPORT_DATE IS '신고일자'
;

ALTER TABLE BOOK_REPORT
    ADD CONSTRAINT FK_BOOK_REPORT_BOOK_REPORT_TYP FOREIGN KEY (BOOK_REPORT_TYPE_CODE)
        REFERENCES BOOK_REPORT_TYPE (BOOK_REPORT_TYPE_CODE)
;

ALTER TABLE BOOK_REPORT
    ADD CONSTRAINT FK_BOOK_REPORT_BOOK_CODE_BOOK_ FOREIGN KEY (BOOK_CODE)
        REFERENCES BOOK_LIST (BOOK_CODE)
;

ALTER TABLE BOOK_REPORT
    ADD CONSTRAINT FK_BOOK_REPORT_HOST_CODE_HOST_ FOREIGN KEY (HOST_CODE)
        REFERENCES HOST (HOST_CODE)
;


-- HOST Table Create SQL
CREATE TABLE BOARD_TYPE
(
    BOARD_TYPE_CODE    VARCHAR2(15)    , 
    BOARD_TYPE         VARCHAR2(30)    , 
    CONSTRAINT BOARD_TYPE_PK PRIMARY KEY (BOARD_TYPE_CODE)
)
;

COMMENT ON TABLE BOARD_TYPE IS '게시물 분류 BT'
;

COMMENT ON COLUMN BOARD_TYPE.BOARD_TYPE_CODE IS '게시물분류코드'
;

COMMENT ON COLUMN BOARD_TYPE.BOARD_TYPE IS '게시물 유형'
;


-- HOST Table Create SQL
CREATE TABLE MEMBER_EXCHANGE_LIST
(
    MEMBER_EXCHANGE_CODE      VARCHAR2(15)    , 
    MEMBER_CODE               VARCHAR2(15)    , 
    MEMBER_EXCHANGE_AMOUNT    NUMBER(18)       , 
    MEMBER_EXCHANGE_DATE      DATE            , 
    CONSTRAINT MEMBER_EXCHANGE_LIST_PK PRIMARY KEY (MEMBER_EXCHANGE_CODE)
)
;


COMMENT ON TABLE MEMBER_EXCHANGE_LIST IS '마일리지 환전 내역(이용자) ME'
;

COMMENT ON COLUMN MEMBER_EXCHANGE_LIST.MEMBER_EXCHANGE_CODE IS '환전내역코드'
;

COMMENT ON COLUMN MEMBER_EXCHANGE_LIST.MEMBER_CODE IS '회원코드'
;

COMMENT ON COLUMN MEMBER_EXCHANGE_LIST.MEMBER_EXCHANGE_AMOUNT IS '환전액수'
;

COMMENT ON COLUMN MEMBER_EXCHANGE_LIST.MEMBER_EXCHANGE_DATE IS '환전일자'
;

ALTER TABLE MEMBER_EXCHANGE_LIST
    ADD CONSTRAINT FK_MEMBER_EXCHANGE_LIST_MEMBER FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOAD_TYPE
(
    LOAD_TYPE_CODE    VARCHAR2(15)    , 
    LOAD_TYPE         VARCHAR2(20)    , 
    CONSTRAINT LOAD_TYPE_PK PRIMARY KEY (LOAD_TYPE_CODE)
)
;

COMMENT ON TABLE LOAD_TYPE IS '마일리지 충전 분류 LT'
;

COMMENT ON COLUMN LOAD_TYPE.LOAD_TYPE_CODE IS '마일리지 충전 분류 코드'
;

COMMENT ON COLUMN LOAD_TYPE.LOAD_TYPE IS '유형'
;


-- HOST Table Create SQL
CREATE TABLE HOST_EXCHANGE_LIST
(
    HOST_EXCHANGE_CODE      VARCHAR2(15)    , 
    HOST_CODE               VARCHAR2(15)    , 
    HOST_EXCHANGE_AMOUNT    NUMBER(18)       , 
    HOST_EXCHANGE_DATE      DATE            , 
    CONSTRAINT HOST_EXCHANGE_LIST_PK PRIMARY KEY (HOST_EXCHANGE_CODE)
)
;

COMMENT ON TABLE HOST_EXCHANGE_LIST IS '마일리지 환전 내역(호스트) HE'
;

COMMENT ON COLUMN HOST_EXCHANGE_LIST.HOST_EXCHANGE_CODE IS '환전내역코드'
;

COMMENT ON COLUMN HOST_EXCHANGE_LIST.HOST_CODE IS '회원코드'
;

COMMENT ON COLUMN HOST_EXCHANGE_LIST.HOST_EXCHANGE_AMOUNT IS '환전액수'
;

COMMENT ON COLUMN HOST_EXCHANGE_LIST.HOST_EXCHANGE_DATE IS '환전일자'
;

ALTER TABLE HOST_EXCHANGE_LIST
    ADD CONSTRAINT FK_HOST_EXCHANGE_LIST_HOST_COD FOREIGN KEY (HOST_CODE)
        REFERENCES HOST (HOST_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HOST_BANK_INFO
(
    HOST_BANK_NUMBER    VARCHAR2(20)    , 
    HOST_CODE           VARCHAR2(15)    , 
    HOST_BANK           VARCHAR2(40)    , 
    HOST_BANK_HOLDER    VARCHAR2(30)    , 
    CONSTRAINT HOST_BANK_INFO_PK PRIMARY KEY (HOST_BANK_NUMBER)
)
;

COMMENT ON TABLE HOST_BANK_INFO IS '계좌정보(호스트)'
;

COMMENT ON COLUMN HOST_BANK_INFO.HOST_BANK_NUMBER IS '계좌번호'
;

COMMENT ON COLUMN HOST_BANK_INFO.HOST_CODE IS '회원코드(호스트)'
;

COMMENT ON COLUMN HOST_BANK_INFO.HOST_BANK IS '은행명'
;

COMMENT ON COLUMN HOST_BANK_INFO.HOST_BANK_HOLDER IS '예금주'
;

ALTER TABLE HOST_BANK_INFO
    ADD CONSTRAINT FK_HOST_BANK_INFO_HOST_CODE_HO FOREIGN KEY (HOST_CODE)
        REFERENCES HOST (HOST_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HELP
(
    HELP_CODE          VARCHAR2(15)      , 
    BOARD_TYPE_CODE    VARCHAR2(15)      , 
    HELP_TITLE         VARCHAR2(60)      , 
    HELP_CONTENT       VARCHAR2(3000)    , 
    HELP_DATE          DATE              , 
    CONSTRAINT HELP_PK PRIMARY KEY (HELP_CODE)
)
;

COMMENT ON TABLE HELP IS '도움말 HLP'
;

COMMENT ON COLUMN HELP.HELP_CODE IS '도움말 코드'
;

COMMENT ON COLUMN HELP.BOARD_TYPE_CODE IS '게시물분류코드'
;

COMMENT ON COLUMN HELP.HELP_TITLE IS '제목'
;

COMMENT ON COLUMN HELP.HELP_CONTENT IS '내용'
;

COMMENT ON COLUMN HELP.HELP_DATE IS '작성일자'
;

ALTER TABLE HELP
    ADD CONSTRAINT FK_HELP_BOARD_TYPE_CODE_BOARD_ FOREIGN KEY (BOARD_TYPE_CODE)
        REFERENCES BOARD_TYPE (BOARD_TYPE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE MEMBER_MSG_INFO
(
    MEMBER_MSG_INFO_CODE    VARCHAR2(15)      , 
    MSG_CODE                VARCHAR2(15)      , 
    MEMBER_MSG_CONTENT      VARCHAR2(1500)    , 
    MEMBER_MSG_DATE         DATE              , 
    CONSTRAINT MEMBER_MSG_INFO_PK PRIMARY KEY (MEMBER_MSG_INFO_CODE)
)
;

COMMENT ON TABLE MEMBER_MSG_INFO IS '메신저정보(이용자) MMIF'
;

COMMENT ON COLUMN MEMBER_MSG_INFO.MEMBER_MSG_INFO_CODE IS '메신저정보코드'
;

COMMENT ON COLUMN MEMBER_MSG_INFO.MSG_CODE IS '메신저코드'
;

COMMENT ON COLUMN MEMBER_MSG_INFO.MEMBER_MSG_CONTENT IS '내용'
;

COMMENT ON COLUMN MEMBER_MSG_INFO.MEMBER_MSG_DATE IS '메신저일자'
;

ALTER TABLE MEMBER_MSG_INFO
    ADD CONSTRAINT FK_MEMBER_MSG_INFO_MSG_CODE_MS FOREIGN KEY (MSG_CODE)
        REFERENCES MSG (MSG_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HOST_MSG_INFO
(
    HOST_MSG_INFO_CODE    VARCHAR2(15)      , 
    MSG_CODE              VARCHAR2(15)      , 
    HOST_MSG_CONTENT      VARCHAR2(1500)    , 
    HOST_MSG_DATE         DATE              , 
    CONSTRAINT HOST_MSG_INFO_PK PRIMARY KEY (HOST_MSG_INFO_CODE)
)
;

COMMENT ON TABLE HOST_MSG_INFO IS '메신저정보(호스트) HMIF'
;

COMMENT ON COLUMN HOST_MSG_INFO.HOST_MSG_INFO_CODE IS '메신저정보코드'
;

COMMENT ON COLUMN HOST_MSG_INFO.MSG_CODE IS '메신저코드'
;

COMMENT ON COLUMN HOST_MSG_INFO.HOST_MSG_CONTENT IS '내용'
;

COMMENT ON COLUMN HOST_MSG_INFO.HOST_MSG_DATE IS '메신저일자'
;

ALTER TABLE HOST_MSG_INFO
    ADD CONSTRAINT FK_HOST_MSG_INFO_MSG_CODE_MSG_ FOREIGN KEY (MSG_CODE)
        REFERENCES MSG (MSG_CODE)
;


-- HOST Table Create SQL
CREATE TABLE INSPECT_TYPE
(
    INSPECT_TYPE_CODE    VARCHAR2(15)    , 
    INSPECT_TYPE         VARCHAR2(20)    , 
    CONSTRAINT INSPECT_TYPE_PK PRIMARY KEY (INSPECT_TYPE_CODE)
)
;

COMMENT ON TABLE INSPECT_TYPE IS '검수분류 IT'
;

COMMENT ON COLUMN INSPECT_TYPE.INSPECT_TYPE_CODE IS '검수분류코드'
;

COMMENT ON COLUMN INSPECT_TYPE.INSPECT_TYPE IS '검수 유형'
;


-- HOST Table Create SQL
CREATE TABLE INSPECT_REG_LIST
(
    INSPECT_REG_CODE    VARCHAR2(15)    , 
    LOC_CODE            VARCHAR2(15)    , 
    INSPECT_REG_DATE    DATE            , 
    CONSTRAINT INSPECT_REG_LIST_PK PRIMARY KEY (INSPECT_REG_CODE)
)
;

COMMENT ON TABLE INSPECT_REG_LIST IS '검수신청내역 IR'
;

COMMENT ON COLUMN INSPECT_REG_LIST.INSPECT_REG_CODE IS '검수신청코드'
;

COMMENT ON COLUMN INSPECT_REG_LIST.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN INSPECT_REG_LIST.INSPECT_REG_DATE IS '검수신청일자'
;

ALTER TABLE INSPECT_REG_LIST
    ADD CONSTRAINT FK_INSPECT_REG_LIST_LOC_CODE_L FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE QNA_REPLY
(
    QNA_REPLY_CODE       VARCHAR2(15)      , 
    QNA_CODE             VARCHAR2(15)      , 
    QNA_REPLY_CONTENT    VARCHAR2(3000)    , 
    QNA_REPLY_DATE       DATE              , 
    CONSTRAINT QNA_REPLY_PK PRIMARY KEY (QNA_REPLY_CODE)
)
;

COMMENT ON TABLE QNA_REPLY IS 'Q_AND_A답글(호스트) QRE'
;

COMMENT ON COLUMN QNA_REPLY.QNA_REPLY_CODE IS 'Q_AND_A답글코드'
;

COMMENT ON COLUMN QNA_REPLY.QNA_CODE IS 'Q_AND_A코드'
;

COMMENT ON COLUMN QNA_REPLY.QNA_REPLY_CONTENT IS 'Q_AND_A 답글내용'
;

COMMENT ON COLUMN QNA_REPLY.QNA_REPLY_DATE IS 'Q_AND_A작성일자'
;

ALTER TABLE QNA_REPLY
    ADD CONSTRAINT FK_QNA_REPLY_QNA_CODE_QNA_QNA_ FOREIGN KEY (QNA_CODE)
        REFERENCES QNA (QNA_CODE)
;


-- HOST Table Create SQL
CREATE TABLE REVIEW_REPLY
(
    REVIEW_REPLY_CODE       VARCHAR2(15)      , 
    REVIEW_CODE             VARCHAR2(15)      , 
    REVIEW_REPLY_CONTENT    VARCHAR2(3000)    , 
    REVIEW_REPLY_DATE       DATE              , 
    CONSTRAINT REVIEW_REPLY_PK PRIMARY KEY (REVIEW_REPLY_CODE)
)
;

COMMENT ON TABLE REVIEW_REPLY IS '리뷰답글(호스트) RVRE'
;

COMMENT ON COLUMN REVIEW_REPLY.REVIEW_REPLY_CODE IS '리뷰답글코드'
;

COMMENT ON COLUMN REVIEW_REPLY.REVIEW_CODE IS '리뷰코드'
;

COMMENT ON COLUMN REVIEW_REPLY.REVIEW_REPLY_CONTENT IS '리뷰답글내용'
;

COMMENT ON COLUMN REVIEW_REPLY.REVIEW_REPLY_DATE IS '리뷰답글작성일자'
;

ALTER TABLE REVIEW_REPLY
    ADD CONSTRAINT FK_REVIEW_REPLY_REVIEW_CODE_RE FOREIGN KEY (REVIEW_CODE)
        REFERENCES REVIEW (REVIEW_CODE)
;



-- HOST Table Create SQL
CREATE TABLE MEMBER_PROFILE
(
    MEMBER_EMAIL       VARCHAR2(320)    , 
    MEMBER_CODE        VARCHAR2(15)     , 
    MEMBER_PW          VARCHAR2(30)     , 
    MEMBER_NICKNAME    VARCHAR2(18)     , 
    MEMBER_NAME        VARCHAR2(30)     , 
    MEMBER_TEL         VARCHAR2(13)     , 
    CONSTRAINT MEMBER_PROFILE_PK PRIMARY KEY (MEMBER_EMAIL)
)
;

COMMENT ON TABLE MEMBER_PROFILE IS '프로필정보(이용자)'
;

COMMENT ON COLUMN MEMBER_PROFILE.MEMBER_EMAIL IS '가입 이메일'
;

COMMENT ON COLUMN MEMBER_PROFILE.MEMBER_CODE IS '회원코드(이용자)'
;

COMMENT ON COLUMN MEMBER_PROFILE.MEMBER_PW IS '비밀번호'
;

COMMENT ON COLUMN MEMBER_PROFILE.MEMBER_NICKNAME IS '닉네임'
;

COMMENT ON COLUMN MEMBER_PROFILE.MEMBER_NAME IS '이름'
;

COMMENT ON COLUMN MEMBER_PROFILE.MEMBER_TEL IS '연락처'
;

ALTER TABLE MEMBER_PROFILE
    ADD CONSTRAINT FK_MEMBER_PROFILE_MEMBER_CODE_ FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;


-- HOST Table Create SQL
CREATE TABLE MEMBER_WITHDRAW
(
    MEMBER_WITHDRAW_CODE    VARCHAR2(15)    , 
    MEMBER_CODE             VARCHAR2(15)    , 
    MEMBER_WITHDRAW_DATE    DATE            , 
    CONSTRAINT MEMBER_WITHDRAW_PK PRIMARY KEY (MEMBER_WITHDRAW_CODE)
)
;

COMMENT ON TABLE MEMBER_WITHDRAW IS '탈퇴(이용자) MW'
;

COMMENT ON COLUMN MEMBER_WITHDRAW.MEMBER_WITHDRAW_CODE IS '탈퇴코드'
;

COMMENT ON COLUMN MEMBER_WITHDRAW.MEMBER_CODE IS '회원코드(이용자)'
;

COMMENT ON COLUMN MEMBER_WITHDRAW.MEMBER_WITHDRAW_DATE IS '탈퇴일자'
;

ALTER TABLE MEMBER_WITHDRAW
    ADD CONSTRAINT FK_MEMBER_WITHDRAW_MEMBER_CODE FOREIGN KEY (MEMBER_CODE)
        REFERENCES MEMBER (MEMBER_CODE)
;


-- HOST Table Create SQL
CREATE TABLE MEMBER_BLACKLIST
(
    MEMBER_EMAIL               VARCHAR2(320)    , 
    MEMBER_BLACKLIST_REASON    VARCHAR2(300)    , 
    MEMBER_BLACKLIST_DATE      DATE             , 
    CONSTRAINT MEMBER_BLACKLIST_PK PRIMARY KEY (MEMBER_EMAIL)
)
;

COMMENT ON TABLE MEMBER_BLACKLIST IS '블랙리스트(이용자)'
;

COMMENT ON COLUMN MEMBER_BLACKLIST.MEMBER_EMAIL IS '가입 이메일'
;

COMMENT ON COLUMN MEMBER_BLACKLIST.MEMBER_BLACKLIST_REASON IS '블랙리스트 전환 사유'
;

COMMENT ON COLUMN MEMBER_BLACKLIST.MEMBER_BLACKLIST_DATE IS '블랙리스트 전환일'
;


-- HOST Table Create SQL
CREATE TABLE LOAD_PROC
(
    LOAD_PROC_CODE    VARCHAR2(15)    , 
    LOAD_REG_CODE     VARCHAR2(15)    , 
    LOAD_TYPE_CODE    VARCHAR2(15)    , 
    LOAD_PROC_DATE    DATE            , 
    CONSTRAINT LOAD_PROC_PK PRIMARY KEY (LOAD_PROC_CODE)
)
;

COMMENT ON TABLE LOAD_PROC IS '충전처리내역(이용자) LP'
;

COMMENT ON COLUMN LOAD_PROC.LOAD_PROC_CODE IS '충전처리코드'
;

COMMENT ON COLUMN LOAD_PROC.LOAD_REG_CODE IS '충전신청코드'
;

COMMENT ON COLUMN LOAD_PROC.LOAD_TYPE_CODE IS '마일리지 충전 분류 코드'
;

COMMENT ON COLUMN LOAD_PROC.LOAD_PROC_DATE IS '충전처리일자'
;

ALTER TABLE LOAD_PROC
    ADD CONSTRAINT FK_LOAD_PROC_LOAD_REG_CODE_LOA FOREIGN KEY (LOAD_REG_CODE)
        REFERENCES LOAD_REG (LOAD_REG_CODE)
;

ALTER TABLE LOAD_PROC
    ADD CONSTRAINT FK_LOAD_PROC_LOAD_TYPE_CODE_LO FOREIGN KEY (LOAD_TYPE_CODE)
        REFERENCES LOAD_TYPE (LOAD_TYPE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HOST_PROFILE
(
    HOST_EMAIL       VARCHAR2(320)    , 
    HOST_CODE        VARCHAR2(15)     , 
    HOST_PW          VARCHAR2(30)     , 
    HOST_NICKNAME    VARCHAR2(18)     , 
    HOST_NAME        VARCHAR2(30)     , 
    HOST_TEL         VARCHAR2(13)     , 
    CONSTRAINT HOST_PROFILE_PK PRIMARY KEY (HOST_EMAIL)
)
;

COMMENT ON TABLE HOST_PROFILE IS '프로필정보(호스트)'
;

COMMENT ON COLUMN HOST_PROFILE.HOST_EMAIL IS '가입 이메일'
;

COMMENT ON COLUMN HOST_PROFILE.HOST_CODE IS '회원코드(호스트)'
;

COMMENT ON COLUMN HOST_PROFILE.HOST_PW IS '비밀번호'
;

COMMENT ON COLUMN HOST_PROFILE.HOST_NICKNAME IS '닉네임'
;

COMMENT ON COLUMN HOST_PROFILE.HOST_NAME IS '이름'
;

COMMENT ON COLUMN HOST_PROFILE.HOST_TEL IS '연락처'
;

ALTER TABLE HOST_PROFILE
    ADD CONSTRAINT FK_HOST_PROFILE_HOST_CODE_HOST FOREIGN KEY (HOST_CODE)
        REFERENCES HOST (HOST_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HOST_WITHDRAW
(
    HOST_WITHDRAW_CODE    VARCHAR2(15)    , 
    HOST_CODE             VARCHAR2(15)    , 
    HOST_WITHDRAW_DATE    DATE            , 
    CONSTRAINT HOST_WITHDRAW_PK PRIMARY KEY (HOST_WITHDRAW_CODE)
)
;

COMMENT ON TABLE HOST_WITHDRAW IS '회원탈퇴(호스트) HW'
;

COMMENT ON COLUMN HOST_WITHDRAW.HOST_WITHDRAW_CODE IS '회원탈퇴코드'
;

COMMENT ON COLUMN HOST_WITHDRAW.HOST_CODE IS '회원코드(호스트)'
;

COMMENT ON COLUMN HOST_WITHDRAW.HOST_WITHDRAW_DATE IS '탈퇴일자'
;

ALTER TABLE HOST_WITHDRAW
    ADD CONSTRAINT FK_HOST_WITHDRAW_HOST_CODE_HOS FOREIGN KEY (HOST_CODE)
        REFERENCES HOST (HOST_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HOST_BLACKLIST
(
    HOST_EMAIL               VARCHAR2(320)    , 
    HOST_BLACKLIST_REASON    VARCHAR2(300)    , 
    HOST_BLACKLIST_DATE      DATE             , 
    CONSTRAINT HOST_BLACKLIST_PK PRIMARY KEY (HOST_EMAIL)
)
;

COMMENT ON TABLE HOST_BLACKLIST IS '블랙리스트(호스트)'
;

COMMENT ON COLUMN HOST_BLACKLIST.HOST_EMAIL IS '가입 이메일'
;

COMMENT ON COLUMN HOST_BLACKLIST.HOST_BLACKLIST_REASON IS '블랙리스트 사유'
;

COMMENT ON COLUMN HOST_BLACKLIST.HOST_BLACKLIST_DATE IS '블랙리스트 전환일'
;


-- HOST Table Create SQL
CREATE TABLE ADMIN
(
    ADMIN_ID          VARCHAR2(18)    , 
    ADMIN_PW          VARCHAR2(15)    , 
    ADMIN_NICKNAME    VARCHAR2(18)    , 
    CONSTRAINT ADMIN_PK PRIMARY KEY (ADMIN_ID)
)
;

COMMENT ON TABLE ADMIN IS '관리자'
;

COMMENT ON COLUMN ADMIN.ADMIN_ID IS '아이디'
;

COMMENT ON COLUMN ADMIN.ADMIN_PW IS '비밀번호'
;

COMMENT ON COLUMN ADMIN.ADMIN_NICKNAME IS '닉네임'
;


-- HOST Table Create SQL
CREATE TABLE NOTICE_IMG
(
    NOTICE_IMG_CODE    VARCHAR2(15)      , 
    NOTICE_CODE        VARCHAR2(15)      , 
    NOTICE_IMG_URL     VARCHAR2(500)    , 
    CONSTRAINT NOTICE_IMG_PK PRIMARY KEY (NOTICE_IMG_CODE)
)
;

COMMENT ON TABLE NOTICE_IMG IS '이미지(공지사항) NIMG'
;

COMMENT ON COLUMN NOTICE_IMG.NOTICE_IMG_CODE IS '이미지코드'
;

COMMENT ON COLUMN NOTICE_IMG.NOTICE_CODE IS '공지사항 코드'
;

COMMENT ON COLUMN NOTICE_IMG.NOTICE_IMG_URL IS '이미지 링크(url)'
;

ALTER TABLE NOTICE_IMG
    ADD CONSTRAINT FK_NOTICE_IMG_NOTICE_CODE_NOTI FOREIGN KEY (NOTICE_CODE)
        REFERENCES NOTICE (NOTICE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE ATTACHMENT
(
    ATTACHMENT_CODE    VARCHAR2(15)      , 
    NOTICE_CODE        VARCHAR2(15)      , 
    ATTACHMENT_URL     VARCHAR2(500)    , 
    CONSTRAINT ATTACHMENT_PK PRIMARY KEY (ATTACHMENT_CODE)
)
;


COMMENT ON TABLE ATTACHMENT IS '첨부파일(공지사항) AT'
;

COMMENT ON COLUMN ATTACHMENT.ATTACHMENT_CODE IS '첨부파일코드'
;

COMMENT ON COLUMN ATTACHMENT.NOTICE_CODE IS '공지사항 코드'
;

COMMENT ON COLUMN ATTACHMENT.ATTACHMENT_URL IS '첨부파일 링크(url)'
;

ALTER TABLE ATTACHMENT
    ADD CONSTRAINT FK_ATTACHMENT_NOTICE_CODE_NOTI FOREIGN KEY (NOTICE_CODE)
        REFERENCES NOTICE (NOTICE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HELP_IMG
(
    HELP_IMG_CODE    VARCHAR2(15)      , 
    HELP_CODE        VARCHAR2(15)      , 
    HELP_IMG_URL     VARCHAR2(500)    , 
    CONSTRAINT HELP_IMG_PK PRIMARY KEY (HELP_IMG_CODE)
)
;

COMMENT ON TABLE HELP_IMG IS '이미지(도움말) HLPIMG'
;

COMMENT ON COLUMN HELP_IMG.HELP_IMG_CODE IS '이미지코드'
;

COMMENT ON COLUMN HELP_IMG.HELP_CODE IS '도움말 코드'
;

COMMENT ON COLUMN HELP_IMG.HELP_IMG_URL IS '이미지 링크(url)'
;

ALTER TABLE HELP_IMG
    ADD CONSTRAINT FK_HELP_IMG_HELP_CODE_HELP_HEL FOREIGN KEY (HELP_CODE)
        REFERENCES HELP (HELP_CODE)
;


-- HOST Table Create SQL
CREATE TABLE MEMBER_MSG_IMG
(
    MEMBER_MSG_IMG_CODE     VARCHAR2(15)      , 
    MEMBER_MSG_INFO_CODE    VARCHAR2(15)      , 
    MEMBER_MSG_IMG_URL      VARCHAR2(500)     , 
    CONSTRAINT MEMBER_MSG_IMG_PK PRIMARY KEY (MEMBER_MSG_IMG_CODE)
)
;

COMMENT ON TABLE MEMBER_MSG_IMG IS '이미지(메신저정보(이용자)) MMIMG'
;

COMMENT ON COLUMN MEMBER_MSG_IMG.MEMBER_MSG_IMG_CODE IS '이미지코드'
;

COMMENT ON COLUMN MEMBER_MSG_IMG.MEMBER_MSG_INFO_CODE IS '메신저정보코드'
;

COMMENT ON COLUMN MEMBER_MSG_IMG.MEMBER_MSG_IMG_URL IS '이미지 링크(url)'
;

ALTER TABLE MEMBER_MSG_IMG
    ADD CONSTRAINT FK_MEMBER_MSG_IMG_MEMBER_MSG_I FOREIGN KEY (MEMBER_MSG_INFO_CODE)
        REFERENCES MEMBER_MSG_INFO (MEMBER_MSG_INFO_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HOST_MSG_IMG
(
    HOST_MSG_IMG_CODE     VARCHAR2(15)      , 
    HOST_MSG_INFO_CODE    VARCHAR2(15)      , 
    HOST_MSG_IMG_URL      VARCHAR2(500)    , 
    CONSTRAINT HOST_MSG_IMG_PK PRIMARY KEY (HOST_MSG_IMG_CODE)
)
;

COMMENT ON TABLE HOST_MSG_IMG IS '이미지(메신저정보(호스트)) HMIMG'
;

COMMENT ON COLUMN HOST_MSG_IMG.HOST_MSG_IMG_CODE IS '이미지코드'
;

COMMENT ON COLUMN HOST_MSG_IMG.HOST_MSG_INFO_CODE IS '메신저정보코드'
;

COMMENT ON COLUMN HOST_MSG_IMG.HOST_MSG_IMG_URL IS '이미지 링크(url)'
;

ALTER TABLE HOST_MSG_IMG
    ADD CONSTRAINT FK_HOST_MSG_IMG_HOST_MSG_INFO_ FOREIGN KEY (HOST_MSG_INFO_CODE)
        REFERENCES HOST_MSG_INFO (HOST_MSG_INFO_CODE)
;


-- HOST Table Create SQL
CREATE TABLE HOST_CANCEL_LIST
(
    HOST_CANCEL_CODE      VARCHAR2(15)     , 
    BOOK_CODE             VARCHAR2(15)     , 
    HOST_CANCEL_REASON    VARCHAR2(300)    , 
    HOST_CANCEL_DATE      DATE             , 
    CONSTRAINT HOST_CANCEL_LIST_PK PRIMARY KEY (HOST_CANCEL_CODE)
)
;

COMMENT ON TABLE HOST_CANCEL_LIST IS '예약취소내역(호스트) HC0000'
;

COMMENT ON COLUMN HOST_CANCEL_LIST.HOST_CANCEL_CODE IS '예약취소코드'
;

COMMENT ON COLUMN HOST_CANCEL_LIST.BOOK_CODE IS '예약코드'
;

COMMENT ON COLUMN HOST_CANCEL_LIST.HOST_CANCEL_REASON IS '취소사유'
;

COMMENT ON COLUMN HOST_CANCEL_LIST.HOST_CANCEL_DATE IS '취소일자'
;

ALTER TABLE HOST_CANCEL_LIST
    ADD CONSTRAINT FK_HOST_CANCEL_LIST_BOOK_CODE_ FOREIGN KEY (BOOK_CODE)
        REFERENCES BOOK_LIST (BOOK_CODE)
;


-- HOST Table Create SQL
CREATE TABLE BOOK_REFUND_LIST
(
    BOOK_REFUND_CODE    VARCHAR2(15)    , 
    BOOK_CODE           VARCHAR2(15)    , 
    BOOK_REFUND_DATE    DATE            , 
    CONSTRAINT BOOK_REFUND_LIST_PK PRIMARY KEY (BOOK_REFUND_CODE)
)
;

COMMENT ON TABLE BOOK_REFUND_LIST IS '예약 환불 내역(이용자) BRF'
;

COMMENT ON COLUMN BOOK_REFUND_LIST.BOOK_REFUND_CODE IS '환불코드'
;

COMMENT ON COLUMN BOOK_REFUND_LIST.BOOK_CODE IS '예약코드'
;

COMMENT ON COLUMN BOOK_REFUND_LIST.BOOK_REFUND_DATE IS '환불일자'
;

ALTER TABLE BOOK_REFUND_LIST
    ADD CONSTRAINT FK_BOOK_REFUND_LIST_BOOK_CODE_ FOREIGN KEY (BOOK_CODE)
        REFERENCES BOOK_LIST (BOOK_CODE)
;


-- HOST Table Create SQL
CREATE TABLE ACTUAL_BOOKER
(
    ACTUAL_BOOKER_CODE    VARCHAR2(15)    , 
    BOOK_CODE             VARCHAR2(15)    , 
    ACTUAL_BOOKER         VARCHAR2(30)    , 
    ACTUAL_BOOKER_TEL     VARCHAR2(13)    , 
    CONSTRAINT ACTUAL_BOOKER_PK PRIMARY KEY (ACTUAL_BOOKER_CODE)
)
;

COMMENT ON TABLE ACTUAL_BOOKER IS '실예약자 AB'
;

COMMENT ON COLUMN ACTUAL_BOOKER.ACTUAL_BOOKER_CODE IS '실예약자 코드'
;

COMMENT ON COLUMN ACTUAL_BOOKER.BOOK_CODE IS '예약코드'
;

COMMENT ON COLUMN ACTUAL_BOOKER.ACTUAL_BOOKER IS '예약자명'
;

COMMENT ON COLUMN ACTUAL_BOOKER.ACTUAL_BOOKER_TEL IS '예약자 연락처'
;

ALTER TABLE ACTUAL_BOOKER
    ADD CONSTRAINT FK_ACTUAL_BOOKER_BOOK_CODE_BOO FOREIGN KEY (BOOK_CODE)
        REFERENCES BOOK_LIST (BOOK_CODE)
;


-- HOST Table Create SQL
CREATE TABLE MEMBER_CANCEL_LIST
(
    MEMBER_CANCEL_CODE      VARCHAR2(15)     , 
    BOOK_CODE               VARCHAR2(15)     , 
    MEMBER_CANCEL_REASON    VARCHAR2(300)    , 
    MEMBER_CANCEL_DATE      DATE             , 
    CONSTRAINT MEMBER_CANCEL_LIST_PK PRIMARY KEY (MEMBER_CANCEL_CODE)
)
;

COMMENT ON TABLE MEMBER_CANCEL_LIST IS '예약취소내역(이용자) MC'
;

COMMENT ON COLUMN MEMBER_CANCEL_LIST.MEMBER_CANCEL_CODE IS '예약취소코드'
;

COMMENT ON COLUMN MEMBER_CANCEL_LIST.BOOK_CODE IS '예약코드'
;

COMMENT ON COLUMN MEMBER_CANCEL_LIST.MEMBER_CANCEL_REASON IS '취소사유'
;

COMMENT ON COLUMN MEMBER_CANCEL_LIST.MEMBER_CANCEL_DATE IS '취소일자'
;

ALTER TABLE MEMBER_CANCEL_LIST
    ADD CONSTRAINT FK_MEMBER_CANCEL_LIST_BOOK_COD FOREIGN KEY (BOOK_CODE)
        REFERENCES BOOK_LIST (BOOK_CODE)
;


-- HOST Table Create SQL
CREATE TABLE Book_Pay_List
(
    BOOK_PAY_CODE    VARCHAR2(15)    , 
    BOOK_CODE        VARCHAR2(15)    , 
    BOOK_PAY_DATE    DATE            , 
    CONSTRAINT BOOK_PAY_LIST_PK PRIMARY KEY (BOOK_PAY_CODE)
)
;

COMMENT ON TABLE Book_Pay_List IS '예약 결제 내역(이용자) BP'
;

COMMENT ON COLUMN Book_Pay_List.BOOK_PAY_CODE IS '결제코드'
;

COMMENT ON COLUMN Book_Pay_List.BOOK_CODE IS '예약코드'
;

COMMENT ON COLUMN Book_Pay_List.BOOK_PAY_DATE IS '결제일자'
;

ALTER TABLE Book_Pay_List
    ADD CONSTRAINT FK_Book_Pay_List_BOOK_CODE_BOO FOREIGN KEY (BOOK_CODE)
        REFERENCES BOOK_LIST (BOOK_CODE)
;


-- HOST Table Create SQL
CREATE TABLE INSPECT_PROC_LIST
(
    INSPECT_PROC_CODE      VARCHAR2(15)     , 
    INSPECT_REG_CODE       VARCHAR2(15)     , 
    INSPECT_TYPE_CODE      VARCHAR2(15)     , 
    INSPECT_PROC_REASON    VARCHAR2(300)    , 
    INSPECT_PROC_DATE      DATE             , 
    CONSTRAINT INSPECT_PROC_LIST_PK PRIMARY KEY (INSPECT_PROC_CODE)
)
;

COMMENT ON TABLE INSPECT_PROC_LIST IS '검수처리내역 IP'
;

COMMENT ON COLUMN INSPECT_PROC_LIST.INSPECT_PROC_CODE IS '검수처리코드'
;

COMMENT ON COLUMN INSPECT_PROC_LIST.INSPECT_REG_CODE IS '검수신청코드'
;

COMMENT ON COLUMN INSPECT_PROC_LIST.INSPECT_TYPE_CODE IS '검수분류코드'
;

COMMENT ON COLUMN INSPECT_PROC_LIST.INSPECT_PROC_REASON IS '검수처리사유'
;

COMMENT ON COLUMN INSPECT_PROC_LIST.INSPECT_PROC_DATE IS '검수처리일자'
;

ALTER TABLE INSPECT_PROC_LIST
    ADD CONSTRAINT FK_INSPECT_PROC_LIST_INSPECT_R FOREIGN KEY (INSPECT_REG_CODE)
        REFERENCES INSPECT_REG_LIST (INSPECT_REG_CODE)
;

ALTER TABLE INSPECT_PROC_LIST
    ADD CONSTRAINT FK_INSPECT_PROC_LIST_INSPECT_T FOREIGN KEY (INSPECT_TYPE_CODE)
        REFERENCES INSPECT_TYPE (INSPECT_TYPE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE PACKAGE_REMOVE
(
    PACKAGE_REMOVE_CODE    VARCHAR2(15)    , 
    PACKAGE_CODE           VARCHAR2(15)    , 
    PACKAGE_REMOVE_DATE    DATE            , 
    CONSTRAINT PACKAGE_REMOVE_PK PRIMARY KEY (PACKAGE_REMOVE_CODE)
)
;

COMMENT ON TABLE PACKAGE_REMOVE IS '폐기 패키지 PRM'
;

COMMENT ON COLUMN PACKAGE_REMOVE.PACKAGE_REMOVE_CODE IS '폐기 패키지 코드'
;

COMMENT ON COLUMN PACKAGE_REMOVE.PACKAGE_CODE IS '패키지코드'
;

COMMENT ON COLUMN PACKAGE_REMOVE.PACKAGE_REMOVE_DATE IS '폐기일자'
;

ALTER TABLE PACKAGE_REMOVE
    ADD CONSTRAINT FK_PACKAGE_REMOVE_PACKAGE_CODE FOREIGN KEY (PACKAGE_CODE)
        REFERENCES PACKAGE (PACKAGE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE CAUTION
(
    CAUTION_CODE           VARCHAR2(15)     , 
    LOC_BASIC_INFO_CODE    VARCHAR2(15)     , 
    CAUTION_CONTENT        VARCHAR2(450)    , 
    CONSTRAINT CAUTION_PK PRIMARY KEY (CAUTION_CODE)
)
;

COMMENT ON TABLE CAUTION IS '주의사항(기본정보)  CAU'
;

COMMENT ON COLUMN CAUTION.CAUTION_CODE IS '주의사항 코드'
;

COMMENT ON COLUMN CAUTION.LOC_BASIC_INFO_CODE IS '기존정보코드'
;

COMMENT ON COLUMN CAUTION.CAUTION_CONTENT IS '주의사항 내용'
;

ALTER TABLE CAUTION
    ADD CONSTRAINT FK_CAUTION_LOC_BASIC_INFO_CODE FOREIGN KEY (LOC_BASIC_INFO_CODE)
        REFERENCES LOC_BASIC_INFO (LOC_BASIC_INFO_CODE)
;


-- HOST Table Create SQL
CREATE TABLE FACILITY_INFO
(
    FACILITY_CODE          VARCHAR2(15)     , 
    LOC_BASIC_INFO_CODE    VARCHAR2(15)     , 
    FACILITY_CONTENT       VARCHAR2(450)    , 
    CONSTRAINT FACILITY_INFO_PK PRIMARY KEY (FACILITY_CODE)
)
;

COMMENT ON TABLE FACILITY_INFO IS '시설안내(기본정보) FIF'
;

COMMENT ON COLUMN FACILITY_INFO.FACILITY_CODE IS '시설안내 코드'
;

COMMENT ON COLUMN FACILITY_INFO.LOC_BASIC_INFO_CODE IS '기존정보코드'
;

COMMENT ON COLUMN FACILITY_INFO.FACILITY_CONTENT IS '시설안내내용'
;

ALTER TABLE FACILITY_INFO
    ADD CONSTRAINT FK_FACILITY_INFO_LOC_BASIC_INF FOREIGN KEY (LOC_BASIC_INFO_CODE)
        REFERENCES LOC_BASIC_INFO (LOC_BASIC_INFO_CODE)
;


-- HOST Table Create SQL
CREATE TABLE THUMBNAIL
(
    THUMBNAIL_CODE         VARCHAR2(15)      , 
    LOC_BASIC_INFO_CODE    VARCHAR2(15)      , 
    THUMBNAIL_URL          VARCHAR2(500)    , 
    CONSTRAINT THUMBNAIL_PK PRIMARY KEY (THUMBNAIL_CODE)
)
;

COMMENT ON TABLE THUMBNAIL IS '썸네일(기본정보) TH'
;

COMMENT ON COLUMN THUMBNAIL.THUMBNAIL_CODE IS '썸네일 코드'
;

COMMENT ON COLUMN THUMBNAIL.LOC_BASIC_INFO_CODE IS '기존정보코드'
;

COMMENT ON COLUMN THUMBNAIL.THUMBNAIL_URL IS '썸네일 링크(url)'
;

ALTER TABLE THUMBNAIL
    ADD CONSTRAINT FK_THUMBNAIL_LOC_BASIC_INFO_CO FOREIGN KEY (LOC_BASIC_INFO_CODE)
        REFERENCES LOC_BASIC_INFO (LOC_BASIC_INFO_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_DETAIL_IMG
(
    LOC_DETAIL_IMG_CODE     VARCHAR2(15)      , 
    LOC_DETAIL_INFO_CODE    VARCHAR2(15)      , 
    LOC_DETAIL_IMG_URL      VARCHAR2(500)    , 
    CONSTRAINT LOC_DETAIL_IMG_PK PRIMARY KEY (LOC_DETAIL_IMG_CODE)
)
;

COMMENT ON TABLE LOC_DETAIL_IMG IS '이미지(상세정보) LDIMG'
;

COMMENT ON COLUMN LOC_DETAIL_IMG.LOC_DETAIL_IMG_CODE IS '이미지코드(상세정보)'
;

COMMENT ON COLUMN LOC_DETAIL_IMG.LOC_DETAIL_INFO_CODE IS '상세정보코드'
;

COMMENT ON COLUMN LOC_DETAIL_IMG.LOC_DETAIL_IMG_URL IS '이미지 링크(url)'
;

ALTER TABLE LOC_DETAIL_IMG
    ADD CONSTRAINT FK_LOC_DETAIL_IMG_LOC_DETAIL_I FOREIGN KEY (LOC_DETAIL_INFO_CODE)
        REFERENCES LOC_DETAIL_INFO (LOC_DETAIL_INFO_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_WEB
(
    LOC_WEB_CODE            VARCHAR2(15)      , 
    LOC_DETAIL_INFO_CODE    VARCHAR2(15)      , 
    LOC_WEB_URL             VARCHAR2(2000)    , 
    CONSTRAINT LOC_WEB_PK PRIMARY KEY (LOC_WEB_CODE)
)
;

COMMENT ON TABLE LOC_WEB IS '공간웹사이트(상세정보)  LW'
;

COMMENT ON COLUMN LOC_WEB.LOC_WEB_CODE IS '공간웹사이트코드'
;

COMMENT ON COLUMN LOC_WEB.LOC_DETAIL_INFO_CODE IS '상세정보코드'
;

COMMENT ON COLUMN LOC_WEB.LOC_WEB_URL IS '공간 관련 웹사이트(url)'
;

ALTER TABLE LOC_WEB
    ADD CONSTRAINT FK_LOC_WEB_LOC_DETAIL_INFO_COD FOREIGN KEY (LOC_DETAIL_INFO_CODE)
        REFERENCES LOC_DETAIL_INFO (LOC_DETAIL_INFO_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_BLIND
(
    LOC_BLIND_CODE      VARCHAR2(15)     , 
    LOC_CODE            VARCHAR2(15)     , 
    LOC_BLIND_REASON    VARCHAR2(300)    , 
    LOC_BLIND_DATE      DATE             , 
    CONSTRAINT LOC_BLIND_PK PRIMARY KEY (LOC_BLIND_CODE)
)
;

COMMENT ON TABLE LOC_BLIND IS '블라인드내역(공간게시물) LB'
;

COMMENT ON COLUMN LOC_BLIND.LOC_BLIND_CODE IS '블라인드코드'
;

COMMENT ON COLUMN LOC_BLIND.LOC_CODE IS '공간 코드'
;

COMMENT ON COLUMN LOC_BLIND.LOC_BLIND_REASON IS '처리사유'
;

COMMENT ON COLUMN LOC_BLIND.LOC_BLIND_DATE IS '처리일자'
;

ALTER TABLE LOC_BLIND
    ADD CONSTRAINT FK_LOC_BLIND_LOC_CODE_LOC_LOC_ FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_USE_INFO
(
    LOC_USE_INFO_CODE          VARCHAR2(15)     , 
    LOC_CODE                   VARCHAR2(15)     , 
    LOC_USE_HOUR               VARCHAR2(300)    , 
    LOC_USE_DAY_OFF            VARCHAR2(300)    , 
    LOC_USE_APPOINT_DAY_OFF    VARCHAR2(300)    , 
    CONSTRAINT LOC_USE_INFO_PK PRIMARY KEY (LOC_USE_INFO_CODE)
)
;

COMMENT ON TABLE LOC_USE_INFO IS '이용안내 LUI'
;

COMMENT ON COLUMN LOC_USE_INFO.LOC_USE_INFO_CODE IS '이용안내코드'
;

COMMENT ON COLUMN LOC_USE_INFO.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN LOC_USE_INFO.LOC_USE_HOUR IS '이용시간'
;

COMMENT ON COLUMN LOC_USE_INFO.LOC_USE_DAY_OFF IS '정기 휴무'
;

COMMENT ON COLUMN LOC_USE_INFO.LOC_USE_APPOINT_DAY_OFF IS '지정 휴무일'
;

ALTER TABLE LOC_USE_INFO
    ADD CONSTRAINT FK_LOC_USE_INFO_LOC_CODE_LOC_L FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE BIZ_INFO
(
    BIZ_INFO_CODE         VARCHAR2(15)      , 
    LOC_CODE              VARCHAR2(15)      , 
    BIZ_NAME              VARCHAR2(90)      , 
    BIZ_CEO               VARCHAR2(30)      , 
    BIZ_LICENSE_URL       VARCHAR2(500)    , 
    BIZ_CEO_TYPE          VARCHAR2(30)      , 
    BIZ_MAIN_TYPE         VARCHAR2(90)      , 
    BIZ_SUB_TYPE          VARCHAR2(90)      , 
    BIZ_ADDR              VARCHAR2(200)     , 
    BIZ_LICENSE_NUMBER    CHAR(12)          , 
    CONSTRAINT BIZ_INFO_PK PRIMARY KEY (BIZ_INFO_CODE)
)
;

COMMENT ON TABLE BIZ_INFO IS '사업자정보 BZ'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_INFO_CODE IS '사업자정보코드'
;

COMMENT ON COLUMN BIZ_INFO.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_NAME IS '상호명'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_CEO IS '대표자명'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_LICENSE_URL IS '사업자등록증(url)'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_CEO_TYPE IS '사업자유형'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_MAIN_TYPE IS '주업태'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_SUB_TYPE IS '주종목'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_ADDR IS '사업장 주소'
;

COMMENT ON COLUMN BIZ_INFO.BIZ_LICENSE_NUMBER IS '사업자등록번호'
;

ALTER TABLE BIZ_INFO
    ADD CONSTRAINT FK_BIZ_INFO_LOC_CODE_LOC_LOC_C FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_CONTACT
(
    LOC_CONTACT_CODE    VARCHAR2(15)     , 
    LOC_CODE            VARCHAR2(15)     , 
    LOC_EMAIL           VARCHAR2(320)    , 
    LOC_TEL             VARCHAR2(13)     , 
    LOC_MAIN_TEL        VARCHAR2(13)     , 
    CONSTRAINT LOC_CONTACT_PK PRIMARY KEY (LOC_CONTACT_CODE)
)
;

COMMENT ON TABLE LOC_CONTACT IS '연락처 LC'
;

COMMENT ON COLUMN LOC_CONTACT.LOC_CONTACT_CODE IS '연락처코드'
;

COMMENT ON COLUMN LOC_CONTACT.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN LOC_CONTACT.LOC_EMAIL IS '연락이메일'
;

COMMENT ON COLUMN LOC_CONTACT.LOC_TEL IS '휴대폰'
;

COMMENT ON COLUMN LOC_CONTACT.LOC_MAIN_TEL IS '대표 전화'
;

ALTER TABLE LOC_CONTACT
    ADD CONSTRAINT FK_LOC_CONTACT_LOC_CODE_LOC_LO FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_REPORT_IMG
(
    LOC_REPORT_IMG_CODE    VARCHAR2(15)      , 
    LOC_REPORT_CODE        VARCHAR2(15)      , 
    LOC_REPORT_IMG_URL     VARCHAR2(500)    , 
    CONSTRAINT LOC_REPORT_IMG_PK PRIMARY KEY (LOC_REPORT_IMG_CODE)
)
;

COMMENT ON TABLE LOC_REPORT_IMG IS '이미지(신고) LRPIMG'
;

COMMENT ON COLUMN LOC_REPORT_IMG.LOC_REPORT_IMG_CODE IS '이미지코드'
;

COMMENT ON COLUMN LOC_REPORT_IMG.LOC_REPORT_CODE IS '신고접수코드'
;

COMMENT ON COLUMN LOC_REPORT_IMG.LOC_REPORT_IMG_URL IS '이미지 링크(url)'
;

ALTER TABLE LOC_REPORT_IMG
    ADD CONSTRAINT FK_LOC_REPORT_IMG_LOC_REPORT_C FOREIGN KEY (LOC_REPORT_CODE)
        REFERENCES LOC_REPORT (LOC_REPORT_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_REPORT_PROC
(
    LOC_REPORT_PROC_CODE     VARCHAR2(15)    , 
    LOC_REPORT_CODE          VARCHAR2(15)    , 
    REPORT_PROC_TYPE_CODE    VARCHAR2(15)    , 
    LOC_REPORT_PROC_DATE     DATE            , 
    CONSTRAINT LOC_REPORT_PROC_PK PRIMARY KEY (LOC_REPORT_PROC_CODE)
)
;

COMMENT ON TABLE LOC_REPORT_PROC IS '신고처리(이용자)(공간게시물) LRPP'
;

COMMENT ON COLUMN LOC_REPORT_PROC.LOC_REPORT_PROC_CODE IS '신고처리코드'
;

COMMENT ON COLUMN LOC_REPORT_PROC.LOC_REPORT_CODE IS '신고접수코드'
;

COMMENT ON COLUMN LOC_REPORT_PROC.REPORT_PROC_TYPE_CODE IS '신고처리분류코드'
;

COMMENT ON COLUMN LOC_REPORT_PROC.LOC_REPORT_PROC_DATE IS '처리일자'
;

ALTER TABLE LOC_REPORT_PROC
    ADD CONSTRAINT FK_LOC_REPORT_PROC_REPORT_PROC FOREIGN KEY (REPORT_PROC_TYPE_CODE)
        REFERENCES REPORT_PROC_TYPE (REPORT_PROC_TYPE_CODE)
;

ALTER TABLE LOC_REPORT_PROC
    ADD CONSTRAINT FK_LOC_REPORT_PROC_LOC_REPORT_ FOREIGN KEY (LOC_REPORT_CODE)
        REFERENCES LOC_REPORT (LOC_REPORT_CODE)
;


-- HOST Table Create SQL
CREATE TABLE BOOK_REPORT_PROC
(
    BOOK_REPORT_PROC_CODE    VARCHAR2(15)    , 
    BOOK_REPORT_CODE         VARCHAR2(15)    , 
    REPORT_PROC_TYPE_CODE    VARCHAR2(15)    , 
    BOOK_REPORT_PROC_DATE    DATE            , 
    CONSTRAINT BOOK_REPORT_PROC_PK PRIMARY KEY (BOOK_REPORT_PROC_CODE)
)
;

COMMENT ON TABLE BOOK_REPORT_PROC IS '신고처리(이용자)(예약내역) BRPP'
;

COMMENT ON COLUMN BOOK_REPORT_PROC.BOOK_REPORT_PROC_CODE IS '신고처리코드'
;

COMMENT ON COLUMN BOOK_REPORT_PROC.BOOK_REPORT_CODE IS '신고접수코드'
;

COMMENT ON COLUMN BOOK_REPORT_PROC.REPORT_PROC_TYPE_CODE IS '신고처리분류코드'
;

COMMENT ON COLUMN BOOK_REPORT_PROC.BOOK_REPORT_PROC_DATE IS '처리일자'
;

ALTER TABLE BOOK_REPORT_PROC
    ADD CONSTRAINT FK_BOOK_REPORT_PROC_BOOK_REPOR FOREIGN KEY (BOOK_REPORT_CODE)
        REFERENCES BOOK_REPORT (BOOK_REPORT_CODE)
;

ALTER TABLE BOOK_REPORT_PROC
    ADD CONSTRAINT FK_BOOK_REPORT_PROC_REPORT_PRO FOREIGN KEY (REPORT_PROC_TYPE_CODE)
        REFERENCES REPORT_PROC_TYPE (REPORT_PROC_TYPE_CODE)
;


-- HOST Table Create SQL
CREATE TABLE BOOK_REPORT_IMG
(
    BOOK_REPORT_IMG_CODE    VARCHAR2(15)      , 
    BOOK_REPORT_CODE        VARCHAR2(15)      , 
    BOOK_REPORT_IMG_URL     VARCHAR2(500)    , 
    CONSTRAINT BOOK_REPORT_IMG_PK PRIMARY KEY (BOOK_REPORT_IMG_CODE)
)
;

COMMENT ON TABLE BOOK_REPORT_IMG IS '이미지(신고) BRPIMG'
;

COMMENT ON COLUMN BOOK_REPORT_IMG.BOOK_REPORT_IMG_CODE IS '이미지코드'
;

COMMENT ON COLUMN BOOK_REPORT_IMG.BOOK_REPORT_CODE IS '신고접수코드'
;

COMMENT ON COLUMN BOOK_REPORT_IMG.BOOK_REPORT_IMG_URL IS '이미지 링크(url)'
;

ALTER TABLE BOOK_REPORT_IMG
    ADD CONSTRAINT FK_BOOK_REPORT_IMG_BOOK_REPORT FOREIGN KEY (BOOK_REPORT_CODE)
        REFERENCES BOOK_REPORT (BOOK_REPORT_CODE)
;


-- HOST Table Create SQL
CREATE TABLE QNA_REPLY_REMOVE
(
    QNA_REPLY_REMOVE_CODE    VARCHAR2(15)    , 
    QNA_REPLY_CODE           VARCHAR2(15)    , 
    QNA_REPLY_REMOVE_DATE    DATE            , 
    CONSTRAINT QNA_REPLY_REMOVE_PK PRIMARY KEY (QNA_REPLY_REMOVE_CODE)
)
;

COMMENT ON TABLE QNA_REPLY_REMOVE IS '삭제내역(Q_AND_A답글) QRERM'
;

COMMENT ON COLUMN QNA_REPLY_REMOVE.QNA_REPLY_REMOVE_CODE IS '삭제내역코드'
;

COMMENT ON COLUMN QNA_REPLY_REMOVE.QNA_REPLY_CODE IS 'Q_AND_A답글코드'
;

COMMENT ON COLUMN QNA_REPLY_REMOVE.QNA_REPLY_REMOVE_DATE IS '삭제일자'
;

ALTER TABLE QNA_REPLY_REMOVE
    ADD CONSTRAINT FK_QNA_REPLY_REMOVE_QNA_REPLY_ FOREIGN KEY (QNA_REPLY_CODE)
        REFERENCES QNA_REPLY (QNA_REPLY_CODE)
;


-- HOST Table Create SQL
CREATE TABLE REVIEW_REPLY_REMOVE
(
    REVIEW_REPLY_REMOVE_CODE    VARCHAR2(15)    , 
    REVIEW_REPLY_CODE           VARCHAR2(15)    , 
    REVIEW_REPLY_REMOVE_DATE    DATE            , 
    CONSTRAINT REVIEW_REPLY_REMOVE_PK PRIMARY KEY (REVIEW_REPLY_REMOVE_CODE)
)
;

COMMENT ON TABLE REVIEW_REPLY_REMOVE IS '삭제내역(리뷰답글) RVRERM'
;

COMMENT ON COLUMN REVIEW_REPLY_REMOVE.REVIEW_REPLY_REMOVE_CODE IS '삭제내역코드'
;

COMMENT ON COLUMN REVIEW_REPLY_REMOVE.REVIEW_REPLY_CODE IS '리뷰답글코드'
;

COMMENT ON COLUMN REVIEW_REPLY_REMOVE.REVIEW_REPLY_REMOVE_DATE IS '삭제일자'
;

ALTER TABLE REVIEW_REPLY_REMOVE
    ADD CONSTRAINT FK_REVIEW_REPLY_REMOVE_REVIEW_ FOREIGN KEY (REVIEW_REPLY_CODE)
        REFERENCES REVIEW_REPLY (REVIEW_REPLY_CODE)
;


-- HOST Table Create SQL
CREATE TABLE QNA_REMOVE
(
    QNA_REMOVE_CODE    VARCHAR2(15)    , 
    QNA_CODE           VARCHAR2(15)    , 
    QNA_REMOVE_DATE    DATE            , 
    CONSTRAINT QNA_REMOVE_PK PRIMARY KEY (QNA_REMOVE_CODE)
)
;

COMMENT ON TABLE QNA_REMOVE IS '삭제내역(Q_AND_A) QRM'
;

COMMENT ON COLUMN QNA_REMOVE.QNA_REMOVE_CODE IS '삭제내역코드'
;

COMMENT ON COLUMN QNA_REMOVE.QNA_CODE IS 'Q_AND_A코드'
;

COMMENT ON COLUMN QNA_REMOVE.QNA_REMOVE_DATE IS '삭제일자'
;

ALTER TABLE QNA_REMOVE
    ADD CONSTRAINT FK_QNA_REMOVE_QNA_CODE_QNA_QNA FOREIGN KEY (QNA_CODE)
        REFERENCES QNA (QNA_CODE)
;


-- HOST Table Create SQL
CREATE TABLE REVIEW_IMG
(
    REVIEW_IMG_CODE    VARCHAR2(15)      , 
    REVIEW_CODE        VARCHAR2(15)      , 
    REVIEW_IMG_URL     VARCHAR2(500)    , 
    CONSTRAINT REVIEW_IMG_PK PRIMARY KEY (REVIEW_IMG_CODE)
)
;

COMMENT ON TABLE REVIEW_IMG IS '이미지(리뷰) RVIMG'
;

COMMENT ON COLUMN REVIEW_IMG.REVIEW_IMG_CODE IS '이미지코드'
;

COMMENT ON COLUMN REVIEW_IMG.REVIEW_CODE IS '리뷰코드'
;

COMMENT ON COLUMN REVIEW_IMG.REVIEW_IMG_URL IS '이미지 링크(url)'
;

ALTER TABLE REVIEW_IMG
    ADD CONSTRAINT FK_REVIEW_IMG_REVIEW_CODE_REVI FOREIGN KEY (REVIEW_CODE)
        REFERENCES REVIEW (REVIEW_CODE)
;


-- HOST Table Create SQL
CREATE TABLE REVIEW_REMOVE
(
    REVIEW_REMOVE_CODE    VARCHAR2(15)    , 
    REVIEW_CODE           VARCHAR2(15)    , 
    REVIEW_REMOVE_DATE    DATE            , 
    CONSTRAINT REVIEW_REMOVE_PK PRIMARY KEY (REVIEW_REMOVE_CODE)
)
;

COMMENT ON TABLE REVIEW_REMOVE IS '삭제내역(리뷰)  RVRM'
;

COMMENT ON COLUMN REVIEW_REMOVE.REVIEW_REMOVE_CODE IS '삭제내역코드'
;

COMMENT ON COLUMN REVIEW_REMOVE.REVIEW_CODE IS '리뷰코드'
;

COMMENT ON COLUMN REVIEW_REMOVE.REVIEW_REMOVE_DATE IS '삭제일자'
;

ALTER TABLE REVIEW_REMOVE
    ADD CONSTRAINT FK_REVIEW_REMOVE_REVIEW_CODE_R FOREIGN KEY (REVIEW_CODE)
        REFERENCES REVIEW (REVIEW_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOC_REMOVE
(
    LOC_REMOVE_CODE    VARCHAR2(15)    , 
    LOC_CODE           VARCHAR2(15)    , 
    LOC_REMOVE_DATE    DATE            , 
    CONSTRAINT LOC_REMOVE_PK PRIMARY KEY (LOC_REMOVE_CODE)
)
;

COMMENT ON TABLE LOC_REMOVE IS '삭제내역(공간) LRM'
;

COMMENT ON COLUMN LOC_REMOVE.LOC_REMOVE_CODE IS '삭제내역코드'
;

COMMENT ON COLUMN LOC_REMOVE.LOC_CODE IS '공간코드'
;

COMMENT ON COLUMN LOC_REMOVE.LOC_REMOVE_DATE IS '삭제일자'
;

ALTER TABLE LOC_REMOVE
    ADD CONSTRAINT FK_LOC_REMOVE_LOC_CODE_LOC_LOC FOREIGN KEY (LOC_CODE)
        REFERENCES LOC (LOC_CODE)
;


-- HOST Table Create SQL
CREATE TABLE LOAD_REG_BANK_INFO
(
    LOAD_REG_BANK_INFO_CODE    VARCHAR2(15)    , 
    LOAD_REG_CODE              VARCHAR2(15)    , 
    MEMBER_BANK_NUMBER         VARCHAR2(20)    , 
    CONSTRAINT LOAD_REG_BANK_INFO_PK PRIMARY KEY (LOAD_REG_BANK_INFO_CODE)
)
;

COMMENT ON TABLE LOAD_REG_BANK_INFO IS '충전신청계좌정보 LRBI'
;

COMMENT ON COLUMN LOAD_REG_BANK_INFO.LOAD_REG_BANK_INFO_CODE IS '충전신청계좌코드'
;

COMMENT ON COLUMN LOAD_REG_BANK_INFO.LOAD_REG_CODE IS '충전신청코드'
;

COMMENT ON COLUMN LOAD_REG_BANK_INFO.MEMBER_BANK_NUMBER IS '계좌번호'
;

ALTER TABLE LOAD_REG_BANK_INFO
    ADD CONSTRAINT FK_LOAD_REG_BANK_INFO_LOAD_REG FOREIGN KEY (LOAD_REG_CODE)
        REFERENCES LOAD_REG (LOAD_REG_CODE)
;

ALTER TABLE LOAD_REG_BANK_INFO
    ADD CONSTRAINT FK_LOAD_REG_BANK_INFO_MEMBER_B FOREIGN KEY (MEMBER_BANK_NUMBER)
        REFERENCES MEMBER_BANK_INFO (MEMBER_BANK_NUMBER)
;


-- HOST Table Create SQL
CREATE TABLE MEMBER_EXCHANGE_BANK_INFO
(
    MEMBER_EXCHANGE_BANK_INFO_CODE    VARCHAR2(15)    , 
    MEMBER_EXCHANGE_CODE              VARCHAR2(15)    , 
    MEMBER_BANK_NUMBER                VARCHAR2(20)    , 
    CONSTRAINT MEMBER_EXCHANGE_BANK_INFO_PK PRIMARY KEY (MEMBER_EXCHANGE_BANK_INFO_CODE)
)
;

COMMENT ON TABLE MEMBER_EXCHANGE_BANK_INFO IS '환전계좌정보(이용자) MEBI'
;

COMMENT ON COLUMN MEMBER_EXCHANGE_BANK_INFO.MEMBER_EXCHANGE_BANK_INFO_CODE IS '환전계좌코드'
;

COMMENT ON COLUMN MEMBER_EXCHANGE_BANK_INFO.MEMBER_EXCHANGE_CODE IS '환전내역코드'
;

COMMENT ON COLUMN MEMBER_EXCHANGE_BANK_INFO.MEMBER_BANK_NUMBER IS '계좌번호'
;

ALTER TABLE MEMBER_EXCHANGE_BANK_INFO
    ADD CONSTRAINT FK_MEMBER_EXCHANGE_BANK_INFO_M FOREIGN KEY (MEMBER_EXCHANGE_CODE)
        REFERENCES MEMBER_EXCHANGE_LIST (MEMBER_EXCHANGE_CODE)
;

ALTER TABLE MEMBER_EXCHANGE_BANK_INFO
    ADD CONSTRAINT FK_MEMBER_EXCHANGE_BANK_NUMBER FOREIGN KEY (MEMBER_BANK_NUMBER)
        REFERENCES MEMBER_BANK_INFO (MEMBER_BANK_NUMBER)
;


-- HOST Table Create SQL
CREATE TABLE HOST_EXCHANGE_BANK_INFO
(
    HOST_EXCHANGE_BANK_INFO_CODE    VARCHAR2(15)    , 
    HOST_EXCHANGE_CODE              VARCHAR2(15)    , 
    HOST_BANK_NUMBER                VARCHAR2(20)    , 
    CONSTRAINT HOST_EXCHANGE_BANK_INFO_PK PRIMARY KEY (HOST_EXCHANGE_BANK_INFO_CODE)
)
;

COMMENT ON TABLE HOST_EXCHANGE_BANK_INFO IS '환전계좌정보(호스트) HEBI'
;

COMMENT ON COLUMN HOST_EXCHANGE_BANK_INFO.HOST_EXCHANGE_BANK_INFO_CODE IS '환전계좌코드'
;

COMMENT ON COLUMN HOST_EXCHANGE_BANK_INFO.HOST_EXCHANGE_CODE IS '환전내역코드'
;

COMMENT ON COLUMN HOST_EXCHANGE_BANK_INFO.HOST_BANK_NUMBER IS '계좌번호'
;

ALTER TABLE HOST_EXCHANGE_BANK_INFO
    ADD CONSTRAINT FK_HOST_EXCHANGE_BANK_INFO_HOS FOREIGN KEY (HOST_EXCHANGE_CODE)
        REFERENCES HOST_EXCHANGE_LIST (HOST_EXCHANGE_CODE)
;

ALTER TABLE HOST_EXCHANGE_BANK_INFO
    ADD CONSTRAINT FK_HOST_EXCHANGE_BANK_NUMBER FOREIGN KEY (HOST_BANK_NUMBER)
        REFERENCES HOST_BANK_INFO (HOST_BANK_NUMBER)
;

SELECT COUNT(*)
FROM TABS;


