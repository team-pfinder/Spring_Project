==================================================================================
-우선순위-

1. 회원정보

2. 마일리지

3. 공간

4. 검수

5. 예약

6. 컨텐츠

7. 신고, 블라인드

8. 메신저

9. 공지사항, FAQ, 정책
==================================================================================

수요일, 금요일 컨펌
토요일, 일요일 통합 및 디버깅
월요일         디버깅
화요일         문서정리 및 발표준비

################# 소윤
* userQnaManager  (○)
●
1. 작성한 qna의 모든 정보를 가져오는 쿼리문
   (공간코드, 내용, Q&A 작성일자, 회원 닉네임, 회원 이메일)
   1-1. 삭제한 테이블은 Q&A 조회 게시물에 보여지면 안된다. 
        (삭제 테이블이랑 조인)
2. 삭제 클릭시 삭제 테이블에 삽입하는 쿼리문
♥
1. 상세보기 버튼 클릭시 팝업창으로 전체 내용 보여줌 
2. 내용이 너무 많아 특정 문자수를 오버하면 ...으로 생략하여 표시
3. 삭제 버튼 클릭시 게시물 삭제


* userQnaPopup 6  (○)
●
1. 링크로 받은 코드를 조건으로 하여 qna의 모든 정보를 가져오는 쿼리문
   (내용, Q&A 작성일자, 회원 닉네임) 
♥
1. 팝업창


* userReviewManager 6 (○)
●
1. 작성한 리뷰의 모든 정보를 가져오는 쿼리문
   (공간코드, 내용, 사진, 리뷰 작성일자, 회원 닉네임, 회원 이메일)
   1-1. 삭제한 테이블은 Q&A 조회 게시물에 보여지면 안된다. 
        (삭제 테이블이랑 조인)
2. 삭제 클릭시 삭제 테이블에 삽입하는 쿼리문
♥
1. 상세보기 버튼 클릭시 팝업창으로 전체 내용 보여줌 
2. 내용이 너무 많아 특정 문자수를 오버하면 ...으로 생략하여 표시
3. 삭제 버튼 클릭시 게시물 삭제


* userReviewPopup 6 (○)
●
1. 링크로 받은 코드를 조건으로 하여 qna의 모든 정보를 가져오는 쿼리문
   (내용, 사진, Q&A 작성일자, 회원 닉네임) 
♥
1. 팝업창


* reportList 7 (△)
●
1. 모든 신고 정보를 테이블로 부터 가져온다.
   1-1. 신고접수, 신고처리 테이블을 조인하여 조회하는 쿼리문
        (컨텐츠정보, 신고사유, 피신고자정보, 신고자정보, 일자, 처리결과)
   1-2. 관리자 신고처리시 신고처리 테이블에 삽입하는 쿼리문
2. 블랙리스트 테이블 INSERT 쿼리문
♥
1. 버튼 누르면 새로고침?
2. 블랙리스트 버튼 추가


* reportHost 7 (△)
●
1. 예약번호, 이용자 받아와야 한다.
   추가. 예약테이블에서 모든 정보를 가져오는 쿼리문(뷰)
2. 신고유형 정보를 가져오는 쿼리문
3. 신고 테이블에 삽입하는 쿼리문
   (이용자, 예약번호, 신고유형, 신고사유)
♥
1. 리셋(신고유형, 신고사유)
2. 사진첨부기능


* reportUser 7 (△)
●
1. 공간번호, 호스트 받아와야 한다.
   추가. 공간테이블에서 모든 정보를 가져오는 쿼리문(뷰)
2. 신고유형 정보를 가져오는 쿼리문
3. 신고 테이블에 삽입하는 쿼리문
   (호스트, 공간번호, 신고유형, 신고사유)
♥
1. 리셋(신고유형, 신고사유)
2. 사진첨부기능


* blindManager 7 
●
1. 블라인드 정보를 가져오는 쿼리문(뷰)
   (분류, 회원번호, 게시물, 처리일자, 처리사유)
♥
1. 블라인드 해제 기능


* blackListPopup 7

---------------------------------------------------------------------- 완료 범위

* blindContent (이용자/호스트) 7 

* privacyPolicy (이용자/호스트) 9
* locationManagementPolicy (이용자/호스트) 9
* termsOfServicePolicy (이용자/호스트) 9
* refundPolicy (이용자/호스트) 9

---------------------------------------------------------------------- 수요일전까지 마무리

################# 승범
* signUp(user, host) 1  (○)
●
1. 입력 정보를 바탕으로 회원 데이터를 INSERT하는 쿼리문 
♥
1. 정규식을 통해 확인 후 회원 가입이 가능하도록 구성


* email(user, host) 1  (○)
●
♥


* createAccountNotice(user, host) 1  (○)
●
♥
1. 로그인 페이지 이동
2. 홈으로 이동


* login(user, host) 1 (○)
●
1. 이메일, 비밀번호 정보를 조건문으로 해당 회원 코드를 조회하는 쿼리문.
   1-1. 회원이 아니라면 로그인 되지 않음
♥
1. 로그인 클릭시 로그인이 된 상태로 이전에 있던 페이지로 이동해야 한다.
2. 회원이 아닌 경우 회원이 아니거나 비밀번호가 없다는 알림을 표시


* confirmPassword(use, host) 1 (△) --
●
1. 변경 클릭시 현재 비밀번호 조회하여 확인 쿼리문
♥
1. 비밀번호 확인 상황 => (탈퇴시, 프로필이동시)(x)
2. 취소시 이전 페이지로(x)


* profile(user, host) 1 (○) --
●
1. 회원 코드를 바탕으로 프로필 상의 정보를 가져와야 한다.
   (닉네임, 이메일, 연락처, 가입일자, 블랙리스트 전환일{있다면...})
♥
1. 프로필 수정시 바로 그자리에서 수정 가능하게 구성
   1-1. 더불어 정규식검사로 수정가능 여부도 알려줘야한다.


* changePassword(use, host) 1 (○) -- 
●
1. 변경 클릭시 현재 비밀번호 조회하여 확인 쿼리문
2. 변경 클릭시 비밀번호 갱신 쿼리문
♥
1. 정규식에 맞지 않으면 에러 메시지 밑에 표시, 텍스트박스 테두리빨강
2. 취소 클릭시 이전 페이지로


* findPassword(user, host) 1 (○)
●
1. 링크를 보내기 전에 이메일을 조건문으로 회원 코드를 조회하는 쿼리문
   1-1. 회원이 아니라면 이메일을 보내지 않는다.
♥
1. 비밀번호 재설정 링크 보내기 클릭시 
   해당 계정의 특정 재설정 링크를 만들어 양식을 구성하여 메일을 보냄
2. 회원이 아닌 경우 가입된 정보가 없다고 알림창으로 표시한다.



* footer_user 1 (○)
* footer_host 1 (○)

* header_user 1 (○)
* header_host 1 (○)


* mainHost 3 (○)
●
1. 아래 통계 작성을 위해 필요한 정보를 조회하는 쿼리문
   (예약성사건, 호스트 수, 이용자 수)
♥
1. 세션을 통한 아이디 유지 방법 찾아봐야함
2. 공간 등록하기 버튼, FAQ 버튼 링크 


* mainUser 3 (○)
●
1. 아래 통계 작성을 위해 필요한 정보를 조회하는 쿼리문
   (예약성사건, 호스트 수, 이용자 수)
2. 오늘의 추천공간을 위해 3개의 공간을 조회하는 쿼리문
   1-1. 평점기준 상위 100개의 공간에서 랜덤으로 3개의 공간을 조회 
   (공간코드, 공간이름, 동이름, 패키지가격{가장싼거}, 인원수, 평점)
3. 이용자리뷰는 15개의 리뷰를 조회하는 쿼리문
   1-1. 그냥 랜덤으로 15개의 리뷰를 조회
   (평점, 닉네임, 리뷰내용(간략히), 리뷰작성일자?) 
♥
1. 오늘의 추천공간, 리뷰 클릭시 해당 공간으로 이동


* mainAdmin 1 (○)
●
♥

-------------------------------------------------------------------- 완료 범위 

* 짜잘한 버그 수정 필요

* inputPackageInfoForm.jsp(패키지정보 입력) 3 
●
1. 저장 및 검수신청 버튼 클릭시
   컨테이너에 담긴 모든 데이터를 INSERT하는 쿼리문

♥
1. 등록된 패키지가 존재하지 않는 상태
   라디오 버튼 Ⅹ, 패키지에 대한 정보가 없는 상태
   (등록된 패키지가 존재하지 않습니다.)

2. 등록된 패키지가 존재하는 상태
   - 패키지 추가/수정/삭제시 현재패키지 테이블에 동적으로 
     노드 추가/변경/삭제(자스)


* inputPackageInfo.jsp(패키지정보 입력) 3 
● 1. 패키지명, 이용시간, 패키지 가격정보입력받아 
      inputPackageInfoForm.jsp로 리다이렉트

♥ 1. 입력양식 작성완료후 추가버튼을 누르면 팝업창이 닫히며
      LocationPackageForm.jsp 의 현재 패키지 테이블에 
      동적으로 노드가 추가됨.


* modifyPackage.jsp (패키지정보 수정) 3 
● 1. LocationPackageForm.jsp에서 현재패키지에서 선택된 패키지 
      한개의 정보를 받아와 수정할 정보 폼에 적용 시킨다.

   2. 패키지명, 이용시간, 패키지 가격정보입력받아 
      modifyPackageForm.jsp로 리다이렉트

♥ 1. 입력양식 작성완료후 추가버튼을 누르면 팝업창이 닫히며
      modifyPackageForm.jsp 의 현재 패키지 테이블에 
      동적으로 노드가 추가됨.

* modifyPackageForm 3 


* packageApply.jsp (패키지 적용) 3 
● 1. 현재패키지를 조회하는 쿼리문
   2. 패키지에 날짜를 적용시키는 INSERT 쿼리문

♥ 1. 저장되어있는 현재 패키지를 선택하여
      캘린더 형식으로 날짜를 multi pick해서 적용시킨다.
   2. 적용시키는 버튼/ 적용된 패키지 수정 버튼/ 적용된 패키지 삭제 버튼 구현
   2. 적용된 패키지를 캘린더상에서 한눈에 확인 가능한 뷰 추가 고려

---------------------------------------------------------------------- 수요일전까지 마무리



################# 일웅
* locationList.jsp(공간관리) 3 
●
1. 공간 관리 리스트 구성을 위한 공간 조회 쿼리문 
   (공간코드, 공간명, 썸네일, 공간등록일자, 검수상태)
   1-1. 삭제된 공간은 보여주면 안되므로, 조인하여 조회 필요
2. 공간 삭제시 삭제 테이블에 데이터를 삽입하는 쿼리문
♥
1. 공간정보수정 버튼 클릭시 해당 공간의 수정 폼 페이지로 이동
2. 새 공간 등록하기 버튼 클릭시 공간 등록 페이지로 이동
3. 공간명, 이미지 클릭시 해당 공간 상세 페이지로 이동
4. 패키지 적용하기 버튼 추가
5. 블라인드된 공간은 목록에서 보여지며, 링크가 비활성화된다.
   공간정보수정 버튼 Ⅹ 공간정보삭제버튼, 공간정보삭제 버튼으로 구성 
   검수상태 버튼 없애거나 블라인드로 표시


* inputBasicInfo.jsp(기본정보 입력) 3 
●
1. 공간유형 테이블의 데이터를 조회하는 쿼리문
   (공간유형 셀렉트박스를 위해)
♥
1. 텍스트박스 정규식 검사 자스 필요
   (추후 하나 구현하면 그거 가져다가 쓴다)
2. 시설, 예약시 주의사항 추가 버튼 동적으로 태그가 추가되어야 함
   (stlt, js, jsp를 활용), 
   또한 추가된 것들은 삭제 버튼을 통해 삭제가 가능하다. 
   (삭제는 가장 마지막 테이블 부터)
3. 주소 등록 버튼을 누르면 팝업창이 나오고 주소 API를 이용할 수 있어야   한다. (주소 API를 통해 존재하는 해당 주소를 선택하면 팝업창이 종료되고, 주소 텍스트박스에 해당 주소가 입력된다)
4. 다음 버튼을 누르면 다음 입력 폼 페이지가 요청 
   (해당 페이지의 필수 입력사항이 모두 입력되어야 넘어가진다)
5. 해당 입력 데이터들은 DB에 먼저 저장하지 않으므로, 모든 입력폼이 작성되는 페이지에 도달할 때까지 데이터를 컨테이너에 담에 가지고 있어야 한다. (리다이렉트)


* inputContactInfo.jsp(연락처정보 입력) 3 
●
1. 공간 연락처를 입력받아 리다이렉트
  (이메일, 휴대폰, 대표전화)
♥
1. 이메일, 휴대폰, 대표전화 입력시 정규식 적용


* inputBusinessInfo.jsp(사업자정보 입력) 3 
●
1. 공간 사업자 등록 정보를 입력받아 리다이렉트
   (상호명, 대표자명, 사업자등록번호, 사업자등록증, 사업자 유형, 주종목, 주업태
   , 주소, 상세주소)
♥
1. 정규식 적용, 사업자 등록증 이미지 첨부시 대표이미지 첨부와 동일하게 처리.
2. 사업자 유형 항목 기타 선택시 텍스트 박스 동적으로 생성되어 입력할 수 있게 처리 고려


* inputUsingInfo.jsp(이용 안내 입력) 3 
●
1.이용안내 시간 안내 정보를 입력받아 리다이렉트
  (이용시작시간, 이용종료시간, 정기휴무일, 지정휴무일 INSERT 쿼리문)
♥
1. 최소 이용시간이 3시간 이상이도록 select box에 제한을 건다


* inputDetailInfo.jsp(상세 정보 입력) 3 
●
1. 상세정보 입력받아 리다이렉트
   (이미지, 최소 수용인원, 최대 수용인원)
♥
1. 이미지 첨부시 미리보기 이미지구현 어려우므로 링크로 표시
   이미지 첨부중 삭제시 가장 마지막에 등록한 이미지가 삭제됨
2. 최소 최대 수용인원 입력시 최대 수용인원은 최소 수용인원보다 항상 커야함


* deleteLocation.jsp(공간삭제) 3
● 1. 해당 공간코드를 참조하여 
      select * from * where 공간코드 = 공간코드
      into 삭제내역(공간)
   
♥ 1. Mgmt에서 공간정보삭제 버튼으로 접근하여 확인 알림창이 뜨며,
      확인선택시 공간관리 페이지에서 보이지 않도록 한다.
      DB에서는 삭제하지 않는다

* modifyXXX.jsp (정보 수정 페이지들) 3
● 1. 공간정보 수정 Update 쿼리문
   2. 공간정보 입력과 마찬가지로 패키지 정보 수정페이지에서
      수정확인 버튼을 눌렀을때, 모든 업데이트페이지에서 입력한
      정보들을 DB에서 한꺼번에 업데이트한다.

♥ 1. Mgmt에서 공간정보수정 버튼으로 접근
   2. 사업자정보페이지, 기본정보페이지의 주소는 수정할 수 없으므로
      disabled 옵션을 적용.

 
--------------------------------------------------------------------- 완료 범위(컨트롤러, sql 제외)
--------------------------------------------------------------------- 금요일전까지 마무리
                                                   (공간, 검수신청 추가, 삭제, 수정 컨트롤러, 액션, 쿼리문)
   


<!-- ※ 추가 구현해야하는 기능 -->

<!-- 1. 시설, 주의사항 삭제버튼 클릭 시 최근에 추가한 시설, 주의사항 삭제 기능 -->
<!-- 2. 시설, 주의사항 추가된 것이 1개이상이면 
        입력창에서 입력하지않아도 넘어갈 수 있도록 -->
<!-- 3. 이미지 업로드 서버단에 저장 방법 -->
<!-- 4. 이미지 업로드 시 입력창에 자동입력되는 파일명의 형태를 img 링크로 받아오는 방법 -->
<!-- 5. jQuery hasClass 사용하여 제대로 입력되지않으면 submit 되지않도록 처리 -->



################# 혜지
* loginAdmin.jsp(관리자 로그인) 1 (△)
● 1. 

♥ 1. 

* inspectManager.jsp(공간 검수 관리) 4 (△)
● 1. 공간 검수 목록 조회 쿼리문
      (검수신청코드, 공간명, 공간유형)

♥ 1. 


* inspectProcess.jsp(공간 검수 상세보기) 4 (△)
● 1. 해당 검수대기 공간 기본정보 조회 쿼리
      (공간명, 공간한줄소개, 공간유형, 공간주소, 공간상세주소, 시설안내, 주의사항)
   2. 해당 검수대기 공간 상세정보 조회 쿼리
      (...)
   3. 해당 검수대기 공간 기본정보 조회 쿼리
      (...)
   4. 해당 검수대기 공간 패키지 조회 쿼리
      (...)
   5. 해당 검수대기 공간 연락처 조회 쿼리
      (...)
   6. 해당 검수대기 공간 사업자정보 조회 쿼리
      (...)
   7. 해당 검수대기 공간 이용안내 조회 쿼리
      (...)
   8. 해당 검수대기 공간 이미지링크 목록 조회 쿼리
      (...)
   9. 해당 검수대기 공간 검수승인시, 검수처리내역 INSERT 쿼리문
      (...)
  10. 해당 검수대기 공간 검수반려시, 검수처리내역 INSERT 쿼리문
      (...)
♥ 1. 


*hostReviewManager.jsp(관리자 호스트 리뷰 조회) 6 (○)
● 1. 리뷰 메인목록 조회 쿼리문
   (리뷰답글코드, 이용자리뷰, 호스트답글, 호스트명, 작성일자)
   2. 상세목록 조회 쿼리문
   (공간코드(하이퍼링크적용), 작성일자, 이용자명, 이용자리뷰, 호스트명, 호스트 답글)
   3. 호스트리뷰답글 삭제 쿼리문


*hostReviewPopup.jsp(관리자 호스트리뷰상세보기) 6 (○)
♥1. 상세모달창 → 팝업창 변경 고려
   2. 삭제모달창 → 모달로 시도.. 안되면 알럴트


*  hostQnaManager.jsp(관리자 호스트 Q&A 관리) 6 (○)
● 1. Q&A 메인목록 조회 쿼리문
   (Q&A 답글코드, 이용자Q&A , 호스트답글, 호스트명, 작성일자)
   2. 상세목록 조회 쿼리문
   (공간코드(하이퍼링크적용), 작성일자, 이용자명, 이용자Q&A , 호스트명, 호스트 답글)
   3. 호스트Q&A 답글 삭제 쿼리문


*hostQnaPopup.jsp(관리자 호스트QnA상세보기) 6 (○)
♥ 1. 상세모달창 → 팝업창 변경 고려
   2. 삭제모달창 → 모달로 시도.. 안되면 알럴트


* helpManager.jsp(관리자 도움말 목록) 9 (○)
● 1. 도움말 목록 조회 쿼리
   (도움말분류, 제목, 내용, 작성일자)
   
♥ 1. 도움말 분류, 작성일자 컬럼 추가

-----------------------------------------------------------------완료 범위

* inputHelpInfo.jsp(관리자 도움말 등록) 9(X)
● 1. 도움말 등록 쿼리문
   (도움말분류, 제목, 글내용, 첨부파일 링크)

♥ 1. 도움말 분류 텍스트 추가하기


* modifyHelpInfo.jsp(관리자 도움말 수정) 9(X)
● 1. 도움말 수정 쿼리문
   (도움말 분류, 제목, 글쓰기, 첨부파일링크)
   2. 수정할 공지사항 조회 쿼리문
   (도움말 분류, 제목, 내용)

♥ 1. 도움말 분류 텍스트 추가하기

* noticeManager.jsp (관리자 공지사항 목록) 9 (X)
● 1. 공지사항 목록 조회 쿼리문
   (제목, 내용, 작성일자)

♥ 1. 제목 선택시 게시글로 하이퍼링크
   2. 상단에 등록버튼 추가
   3. 작성일자 컬럼 추가
   4. 공지분류 컬럼 추가 


* inputNoticeInfo.jsp (관리자 공지사항 등록) 9 (X)
● 1. 공지사항 등록 쿼리문
   (글 분류, 제목, 내용, 첨부파일링크)

♥ 1. 공지사항 분류 텍스트 추가하기


* modifyNoticeInfo.jsp(관리자 공지사항 수정) 9 (X)
● 1. 공지사항 수정 쿼리문
   (글 분류, 제목, 글쓰기, 첨부파일링크)
   2. 수정할 공지사항 조회 쿼리문
   (글 분류, 제목, 내용)

♥ 1. 공지사항 분류 텍스트 추가하기

-------------------------------------------------------------------수요일전까지 


* userNotice.jsp(공지사항 게시판 목록) 9
● 1. 공지사항 기본정보목록 모두 조회 쿼리문
      중요공지인지에 따라 상단 정렬
      (글 분류, 제목, 일자, 첨부파일 유무)
   2. 공지사항 기본정보목록 분류에 따른 검색 조회 쿼리문(4개)
      (글 분류, 제목, 일자, 첨부파일 유무)

♥ 1. 게시글 페이지 추가 구현필요


* XXX.jsp(공지사항 게시글 페이지) 9
● 1. 공지사항 내용 조회 쿼리문
      (글 분류, 제목, 내용, 작성일자, 이미지링크, 첨부파일링크)

♥ 1. 


* userHelp.jsp(도움말 게시판 목록) 9
● 1. 도움말 기본정보목록 모두 조회 쿼리문
      (글 분류, 제목, 첨부파일 유무)
   2. 공지사항 기본정보목록 분류에 따른 검색 조회 쿼리문(7개)
      (글 분류, 제목, 첨부파일 유무)

♥ 1. 게시글 페이지 추가 구현필요


* XXX.jsp(도움말 게시글 페이지) 9
● 1. 도움말 내용 조회 쿼리문
      (글 분류, 제목, 내용, 작성일자, 이미지링크, 첨부파일링크)

♥ 1. 



################# 윤상 => 소윤, 승범, 영은 겹치는 부분 통합해야함

* mypageHost 1 (△)
●
♥
1. 각 버튼 누르면 이동 가능하게
   (프로필관리, 계좌관리, 예약리스트, 환전신청, 마일리지 내역, 공간관리, Q&A 답글 조회, 리뷰 답글 조회) 


* mypageUser 1 (△)
●
♥
1. 각 버튼 누르면 이동 가능하게
   (프로필관리, 계좌관리, 예약리스트, 충전/환전신청, 마일리지 내역, Q&A 조회, 리뷰 조회) 


* bankAccount(host, user) 2 (○)
●
1. 계좌 테이블의 정보를 조회하는 쿼리문
   (번호, 계좌번호, 은행명, 예금주)
♥
1. 가운데 정렬 필요 
2. 상단 로고만 올 수 있게


* bankAccountAddPopup(host, user) 2 (○)
●
1. 계좌 테이블에 정보를 INSERT하는 쿼리문
2.  
♥
1. 계좌번호 하이픈 제외하면 안됨(은행마다 형식이 다르기 때문)
2. 체크 되었을때만 계좌등록 가능하게 
3. 약관버튼 클릭시 팝업창으로 보여줄 수 있게


* bankAccountTerms(host, user) 2 (○)
●
1.
♥
1.

* loadAndExchangeUser  --include(*loadTabUser) --include(*exchangeTabUser) 2 (○)
●
1. 계좌정보 테이블 데이터를 조회하는 쿼리문
2. 마일리지 내역을 통해 현재 이용자가 가진 마일리지를 조회하는 쿼리문
   (충전처리내역 + 예약환불내역 - 이용내역[취소안된예약내역에서이용종료시간이지난것들] - 환전내역)
3. 충전하기시 충전신청테이블에 데이터 INSERT
♥
1. 예금주 삭제
2. 계좌가 없는 상태로 충전하기를 누르면 계좌가 없다고 알리고 계좌관리 페이지 이동
   (충전을 못함)
3. 계좌 선택시 셀렉트 박스에 사용자가 계좌를 확인할 수 있도록 계좌 정보를 간략히 보여줄 수 있어야함[ex) 343-1234..(신한) ]
4. 모든 계좌 정보를 다 담아온다.(jsp 상에서 하는게 좋을듯함)

* loadTabUser 2 (○)
* loadRegisterNotice 2 (○)
●
♥
1. 정보를 이전페이지에서 가지고 온다.(redirect or forward)
   (환전 신청일(현재시간), 기한일(+48), 계좌(은행), 예금주, 환전금액)


* loadManager 2 (△)
●
1. 충전신청내역을 테이블 데이터를 조회하는 쿼리문
   (충전처리와 조인하여 처리내역에 없는 신청내역은 대기상태)
   (이메일, 예금주, 계좌번호, 금액, 신청일, 상태, [처리일])
2. 처리된 경우 충전처리 테이블에 INSERT
   (충전신청코드, 충전분류코드, 처리일자)
♥
1. 대기 상태인 경우 처리, 반려를 선택하는 버튼 활성화
2. 처리 버튼을 누르면 회원의 마일리지가 충전됨(충전 성공)
3. 반려 버튼을 누르면 회원의 마일리지 충전안됨(충전 실패)
4. 처리, 반려 기능 실행전에 알림창으로 한번 알려줌

* exchangeTab(user, host) 2 (○)
* exchangeNotice(user, host) 2 (○)
●
1. 정보를 이전페이지에서 가지고 온다.(redirect or forward)
  (환전 신청일(현재시간), 기한일(+48), 계좌(은행), 예금주, 결제금액)

♥
1. 환전 정보 안내


* exchangeHost 2 (○)
●
1. 계좌정보 테이블 데이터를 조회하는 쿼리문
2. 마일리지 내역을 통해 현재 이용자가 가진 마일리지를 조회하는 쿼리문
   (충전처리내역 + 예약환불내역 - 이용내역[취소안된예약내역에서이용종료시간이지난것들] - 환전내역)
3. 환전시 환전내역 테이블에 데이터 INSERT

---------------------------------------------------------------- 완료 범위

* mileageHistoryUser -- include??? 2
●
1. 마일리지 사용내역을 조회하는 쿼리문
   (공간명, 사용마일리지(가격), 잔여마일리지, 예약신청시간)
   1-1. => 이 테이블들을 시간순으로 정렬, 예약신청시간 전까지를 모두 
        (충전처리내역 + 예약환불내역 - 이용내역 - 환전내역) - 사용마일리지
   
2. 마일리지 충전처리내역 테이블을 조회하는 쿼리문
   (금액 계좌번호 은행명 충전신청일 충전처리일)

3. 마일리지 환전내역을 조회하는 쿼리문
   (금액 계좌번호 은행명 환전처리일)

4. 환불 내역 추가
♥
1. 환불 내역 탭 추가


* mileageHistoryHost -- include??? 2
●
1. 마일리지 사용내역을 조회하는 쿼리문
   (공간명, 사용마일리지(가격), 잔여마일리지, 예약신청시간)
   1-1. => 이 테이블들을 시간순으로 정렬, 예약신청시간 전까지를 모두 
        (충전처리내역 + 예약환불내역 - 이용내역 - 환전내역) - 사용마일리지

2. 마일리지 환전내역을 조회하는 쿼리문
   (금액 계좌번호 은행명 환전처리일)

3. 마일리지 정산내역을 조회하는 쿼리문
   (금액.......)

4. 환불 내역 추가
♥
1. 환불 내역 탭 추가

-------------------------------------------------------------- 수요일전까지

################# 영은


*deleteAccount(호스트, 이용자 동일) 1 (△)
●
1. 탈퇴하기 누른 경우 호스트 회원의 모든 개인정보 삭제
   (사업자정보(공간), 연락처(공간), 프로필정보, 계좌정보)
2. 삭제 후 탈퇴 테이블에 INSERT
♥


*locationDetail 3 (△)
●
1. 공간테이블에서 예약할 공간의 정보를 조회하는 쿼리문
   1-1. 공간소개 : (이용안내테이블) 영업시간, 정기휴무일, 지정휴무일
   1-2. 시설안내 : (시설안내테이블) 시설안내내용
   1-3. 주의사항 : 주의사항.주의사항 내용
   1-4. 패키지 : 현재 적용된 패키지 종류, 종류에따라 적용된 날짜
2. 해당 공간의 리뷰를 조회하는 쿼리문
   (평점, 리뷰내용, 리뷰작성일자, 닉네임, [회원코드])
   2-1. 이미지가 있는 경우 이미지테이블을 통해 조회
   2-2. 삭제내역이 있는 경우 삭제된 게시물로 안내하는 블라인드 처리
3. 해당 공간의 Q&A를 조회하는 쿼리문
   3-1. 삭제내역이 있는 경우 삭제된 게시물로 안내하는 블라인드 처리	
4. 해당 리뷰의 리뷰답글을 조회하는 쿼리문
   4-1. 삭제내역이 있는 경우 삭제된 게시물로 안내하는 블라인드 처리
5. 해당 Q&A의 Q&A답글을 조회하는 쿼리문 
   5-1. 삭제내역이 있는 경우 삭제된 게시물로 안내하는 블라인드 처리

♥
1. 답글이 존재하는 경우 그 답글이 참조하고 있는 리뷰, Q&A 밑에 올 수 있도록 한다.
2. 지도 API
3. 리뷰, Q&A 목록 생성시 현재 세션의 회원 코드가 같을 경우 수정 및 삭제 버튼을 활성화 시킨다.
4. 리뷰는 한번만 작성이 가능하다. 현재 세션과 같은 회원코드의 리뷰가 존재하는 경우는 이미 작성한 이력이 있다는 것으로 후기 작성이 불가능하다.  
5. 예약선택에서 날짜를 누르면(패키지 적용된 날짜만 활성화) 해당 날짜에 있는 패키지들이 라디오 박스 형식으로 보여지고 라디오 버튼을 클릭하면 결제가 가능

=======================================================================================
*search 3
●
1. 공간 테이블에서 정보를 조회하는 쿼리문
   (공간명, 동명, 평점(평균), 최대인원수, 리뷰수, 패키지가격(최저가부터))
2. 정렬시 해당 유형에 맞게 정렬되어 조회하는 쿼리문
   (가격, 이용후기, 별점)
♥
1. 지도 API 필요(검색된 공간을 지도에 핀으로 표시)
2. 필터 버튼 삭제(하지만 필터링은 있음)
3. 날짜는 yyyy.mm.dd ~ yyyy.mm.dd 형식으로 필터
4. 결과내 검색 버튼을 만들이 필터링에 맞는 검색 결과가 나올 수 있게
5. 검색 프로세스(공간명, (도~동)명(동을 검색시 구도 같이 나옴)[우편번호], 공간유형, )
   5-1. 제일 처음 공간명으로 검색
   5-2. 공간명 검색결과가 나오지 않았을 경우 유형으로 검색
   5-3. 마지막으로 주소를 검색
=======================================================================================

* bookApply 5(△)
●
1. 공간테이블에서 예약할 공간의 정보를 조회하는 쿼리문
   1-1. 기본설명 : 공간설명(공간한줄소개), 공간유형, 예약인원(최소,최대)
   1-2. 예약정보 : 예약날짜(적용패키지.적용일자), 예약인원(전페이지로부터 받아옴)
   1-3. 예약자정보 : (디폴트값으로 하는경우)회원정보(이름, 이메일, 연락처)
   1-4. 호스트정보 : 공간상호명, 대표자명, 소재지, 사업자번호, 연락처(이메일, 휴대폰, 대표전화)
   1-5. 주의사항 : 주의사항.주의사항 내용
♥
1. 예약자정보는 직접 입력도 가능하지만 체크 버튼을 통해 현재 로그인한 회원의 정보를 디폴트값으로 받아올 수 있도록 
2. 필수입력사항 미입력, 서비스 동의를 하지 않으면 결제 불가능


* bookApplyNotice 5(X)
●
1. 결제내역 확인 정보 전 페이지에서 가져오면 될듯함
   (예약자명, 연락처, 이메일, 인원수, 요청사항, 결제금액, 예약일자)
♥
1. 메인화면 돌아가기


* bookList 5(○)
●
1. 예약 테이블 정보를 조회하는 쿼리문
   (예약코드, 예약자명, 공간명, 일자, 인원수, 가격, 요청사항, 상태)
2. 예약취소 클릭시 예약취소 테이블에 데이터 INSERT 쿼리문 
♥
1. 검색은 할필요 없음
2. 최신 순으로 정렬 필요.
3. 공간명을 나오게 하고 상세보기 팝업으로(예약인원수, 요청사항, 가격)
   나머지(예약코드, 예약자명, 예약현황, 예약취소)는 리스트로 보여줌
4. 취소 클릭시 취소사유를 입력하기 위한 팝업창이 필요


*userQnaList 6(X)
●
1. 이용자가 작성한 Q&A를 조회하는 쿼리문
    (Q&A코드, 해당공간명, 내용, 작성일)
   1-1. 삭제된 Q&A와 조인하여 삭제여부를 알수 있게
2. 삭제버튼 클릭시 삭제내역에 해당 Q&A코드를 참조하는 데이터를 INSERT
♥
1. 삭제된 Q&A 경우에는 보여주지 않는다.
2. 삭제시에도 알림


*modifyQnaPopup(호스트, 이용자 동일) 6 (○)
●
1. 수정폼에 이미 작성한 내용이 채워져 있어야함
2. 해당 Q&A코드에 맞는 Q&A내용이 수정된 내용으로 UPDATE되는 쿼리문
♥

*userReviewList 6(X)
●
1. 이용자가 작성한 리뷰를 조회하는 쿼리문
    (리뷰코드, 해당공간명, 내용, 작성일)
   1-1. 삭제된 리뷰와 조인하여 삭제여부를 알수 있게
2. 삭제버튼 클릭시 삭제내역에 해당 리뷰코드를 참조하는 데이터를 INSERT
♥
1. 삭제된 리뷰 경우에는 보여주지 않는다.
2. 삭제시에도 알림

*modifyReviewPopup(호스트, 이용자 동일) 6 (○)
●
1. 수정폼에 이미 작성한 내용이 채워져 있어야함
2. 해당 리뷰코드에 맞는 리뷰내용이 수정된 내용으로 UPDATE되는 쿼리문
3. 이미 첨부한 첨부파일이 채워져 있어야함
♥
1. 첨부같은 경우에는 취소버튼을 통해 지울수도 있어야한다.
2. 첨부 가능한 이미지 갯수는 최대 5개

----------------------------------------------------------------- 수요일전까지 마무리
                                                                  (페이징, 이미지업로드및수정 => 안되면 보류)

* hostAccountManager(호스트회원관리) 7
●
1. 호스트 테이블로 부터 데이터를 조회하는 쿼리문
   (회원코드, 아이디, 닉네임, 블랙여부, [블랙처리사유])
   1-1. 블랙리스트 테이블을 통해 블랙리스트 여부 확인 필요
2. 블랙리스트 설정시 블랙리스트 테이블에 INSERT하는 쿼리문
3. 블랙리스트 해제시 블랙리스트 테이블에서 DELETE하는 쿼리문
4. 신고내역(공간) 테이블로 부터 데이터를 조회하는 쿼리문
   (신고일자, 신고사유, 신고처리상태, 신고유형) 

♥
1. 신고내역 버튼누르면 모든 신고내역이 팝업창으로 나와야함.
2. 블랙리스트 설정시 팝업창으로 사유를 적을 수 있게, 해제시에는 알림으로 다시한번 확인


* userAccountManager(이용자회원관리) 7
●
1. 이용자 테이블로 부터 데이터를 조회하는 쿼리문
   (회원코드, 아이디, 닉네임, 블랙여부, [블랙처리사유])
   1-1. 블랙리스트 테이블을 통해 블랙리스트 여부 확인 필요
2. 블랙리스트 설정시 블랙리스트 테이블에 INSERT하는 쿼리문
3. 블랙리스트 해제시 블랙리스트 테이블에서 DELETE하는 쿼리문
4. 신고내역(예약) 테이블로 부터 데이터를 조회하는 쿼리문
   (신고일자, 신고사유, 신고처리상태, 신고유형) 

♥
1. 신고내역 버튼누르면 모든 신고내역이 팝업창으로 나와야함.
2. 블랙리스트 설정시 팝업창으로 사유를 적을 수 있게, 해제시에는 알림으로 다시한번 확인

* blacklistPopup.jsp 7

* reportDetailPopupHost.jsp 7
* reportDetailPopupUser.jsp 7

------------------------------------------------------------------ 금요일전까지 마무리

* directMessageUser / directMessageHost 8
●
1. 해당 예약에 해당하는 메신저코드를 통해 메신저 내용을 조회하는 쿼리문
   (메신저내용, 이미지 테이블=>[호스트, 이용자])
   1-1. 메신저일자 내용
   1-2. 이미지 링크

♥
1. 이미지가 있는 경우에는 내용은 표시 X
2. 시간순으로 정렬하여 띄워준다. 
3. 호스트, 이용자로 구분하여 띄워준다.
   3-1. 호스트가 창을 열면 오른쪽이 호스트 왼쪽이 이용자
   3-2. 이용자가 창을 열면 오른쪽이 이용자 왼쪽이 호스트



