################# 윤상 => 소윤, 승범, 영은 겹치는 부분 통합해야함

* mypageHost
●
♥
1. 각 버튼 누르면 이동 가능하게
   (프로필관리, 계좌관리, 예약리스트, 환전신청, 마일리지 내역, 공간관리, Q&A 답글 조회, 리뷰 답글 조회) 


* mypageUser
●
♥
1. 각 버튼 누르면 이동 가능하게
   (프로필관리, 계좌관리, 예약리스트, 충전/환전신청, 마일리지 내역, Q&A 조회, 리뷰 조회) 


* bankAccount(host, user)
●
1. 계좌 테이블의 정보를 조회하는 쿼리문
   (번호, 계좌번호, 은행명, 예금주)
♥
1. 가운데 정렬 필요 
2. 상단 로고만 올 수 있게


* bankAccountAddPopup(host, user)
●
1. 계좌 테이블에 정보를 INSERT하는 쿼리문
2.  
♥
1. 계좌번호 하이픈 제외하면 안됨(은행마다 형식이 다르기 때문)
2. 체크 되었을때만 계좌등록 가능하게 
3. 약관버튼 클릭시 팝업창으로 보여줄 수 있게


* bankAccountTerms(host, user)
●
1.
♥
1.

* loadAndExchangeUser  --include(*loadTabUser) --include(*exchangeTabUser)
●
1. 계좌정보 테이블 데이터를 조회하는 쿼리문
2. 마일리지 내역을 통해 현재 이용자가 가진 마일리지를 조회하는 쿼리문
   (충전처리내역 + 예약환불내역 - 이용내역[취소안된예약내역에서이용종료시간이지난것들] - 환전내역)
3. 충전하기시 충전신청테이블에 데이터 INSERT
♥
1. 예금주 삭제
2. 계좌가 없는 상태로 충전하기를 누르면 계좌가 없다고 알리고 계좌관리 페이지 이동
   (충전을 못함)
3. 계좌 선택시 셀렉트 박스에 사용자가 계좌를 확인할 수 있도록 계좌 정보를 간략히 보여줄 수 있어야함[ex) 343-1234..(신한) ]
4. 모든 계좌 정보를 다 담아온다.(jsp 상에서 하는게 좋을듯함)

* loadRegisterNotice
●
♥
1. 정보를 이전페이지에서 가지고 온다.(redirect or forward)
   (환전 신청일(현재시간), 기한일(+48), 계좌(은행), 예금주, 환전금액)


* exchangeNoticeUser
●
1. 정보를 이전페이지에서 가지고 온다.(redirect or forward)
  (환전 신청일(현재시간), 기한일(+48), 계좌(은행), 예금주, 결제금액)

♥
1. 환전 정보 안내


* exchangeHost
●
1. 계좌정보 테이블 데이터를 조회하는 쿼리문
2. 마일리지 내역을 통해 현재 이용자가 가진 마일리지를 조회하는 쿼리문
   (충전처리내역 + 예약환불내역 - 이용내역[취소안된예약내역에서이용종료시간이지난것들] - 환전내역)
3. 환전시 환전내역 테이블에 데이터 INSERT

* exchangeNoticeHost
●
1. 정보를 이전페이지에서 가지고 온다.(redirect or forward)
  (환전 신청일(현재시간), 기한일(+48), 계좌(은행), 예금주, 결제금액)

♥
1. 환전 정보 안내

* mileageHistoryUser -- include???
●
1. 마일리지 사용내역을 조회하는 쿼리문
   (공간명, 사용마일리지(가격), 잔여마일리지, 예약신청시간)
   1-1. => 이 테이블들을 시간순으로 정렬, 예약신청시간 전까지를 모두 
        (충전처리내역 + 예약환불내역 - 이용내역 - 환전내역) - 사용마일리지
   
2. 마일리지 충전처리내역 테이블을 조회하는 쿼리문
   (금액 계좌번호 은행명 충전신청일 충전처리일)

3. 마일리지 환전내역을 조회하는 쿼리문
   (금액 계좌번호 은행명 환전처리일)
♥

* mileageHistoryHost -- include???
●
1. 마일리지 사용내역을 조회하는 쿼리문
   (공간명, 사용마일리지(가격), 잔여마일리지, 예약신청시간)
   1-1. => 이 테이블들을 시간순으로 정렬, 예약신청시간 전까지를 모두 
        (충전처리내역 + 예약환불내역 - 이용내역 - 환전내역) - 사용마일리지

2. 마일리지 환전내역을 조회하는 쿼리문
   (금액 계좌번호 은행명 환전처리일)

3. 마일리지 정산내역을 조회하는 쿼리문
   (금액.......)
♥


* loadManager 
●
1. 충전신청내역을 테이블 데이터를 조회하는 쿼리문
   (충전처리와 조인하여 처리내역에 없는 신청내역은 대기상태)
   (이메일, 예금주, 계좌번호, 금액, 신청일, 상태, [처리일])
2. 처리된 경우 충전처리 테이블에 INSERT
   (충전신청코드, 충전분류코드, 처리일자)
♥
1. 대기 상태인 경우 처리, 반려를 선택하는 버튼 활성화
2. 처리 버튼을 누르면 회원의 마일리지가 충전됨(충전 성공)
3. 반려 버튼을 누르면 회원의 마일리지 충전안됨(충전 실패)
4. 처리, 반려 기능 실행전에 알림창으로 한번 알려줌